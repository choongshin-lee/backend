<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM2045">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MPM.COMPANY_CD 
		     , MPM.DIVISION_CD
		     , MPM.PO_NO
		     , ROWIDTOCHAR(MPM.ROWID)  AS KEY_ID   
		     , MPM.PO_REFERENCE_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0005', MPM.PO_REFERENCE_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PO_REFERENCE_TYPE_NM
		     , MPM.PO_TITLE
		     , MPM.PO_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_PO_TYPE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.PO_TYPE) FROM DUAL) AS PO_TYPE_NM
		     , MP.PARTNER_CD
             , MP.PARTNER_NM
		     , TO_CHAR(MPM.PO_DUE_DATE ,'YYYY-MM-DD') AS PO_DUE_DATE
		     , MPM.CURRENCY_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'SM0017', MPM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
		     , MPM.EXCHANGE_RATE
		     , MPM.PO_AMOUNT
		     , MPM.PAYMENT_METHOD 
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0006', MPM.PAYMENT_METHOD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PAYMENT_METHOD_NM
		     , MPM.PRICE_TERMS
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0007', MPM.PRICE_TERMS, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PRICE_TERMS_NM
		     , MPM.PAYMENT_TERMS
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0008', MPM.PAYMENT_TERMS, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PAYMENT_TERMS_NM
		     , MPM.SHIPPING_METHOD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0009', MPM.SHIPPING_METHOD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS SHIPPING_METHOD_NM
		     , MPM.STATE              AS STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0010', MPM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
		     , TO_CHAR(MPM.CONFIRM_DATE ,'YYYY-MM-DD')     AS CONFIRM_DATE
		     , MPM.CONFIRM_USER_NO   
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
		     , MPM.CREATE_DEPT_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_DEPARTMENT_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.CREATE_DEPT_CD) FROM DUAL) AS CREATE_DEPT_NM
		     , MPM.DO_INVOICE_YN
		     , MPM.TAX_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'SM0029', MPM.TAX_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS TAX_TYPE_NM
		     , MPM.DESCRIPTION
		FROM   MOM_PO_MST MPM
		     , MOM_PARTNER MP
		WHERE  MPM.COMPANY_CD   = MP.COMPANY_CD
	    AND    MPM.DIVISION_CD  = MP.DIVISION_CD
	    AND    MPM.VENDOR_CD    = MP.PARTNER_CD
	    AND    MPM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
		AND    MPM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	
		AND    MPM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999  
		AND    MPM.STATE = 'POF'
		AND    NOT EXISTS ( SELECT '*'
						    FROM   MOM_PO_DTL MPD
						    WHERE  MPD.COMPANY_CD  = MPM.COMPANY_CD
						    AND    MPD.DIVISION_CD = MPM.DIVISION_CD
						    AND    MPD.PO_NO       = MPM.PO_NO   
						    AND    MPD.STATE       != 'POF' )			
		<if test="poNo != null and poNo != ''">
		AND    (UPPER(MPM.PO_NO) LIKE '%' || UPPER(#{poNo, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="poDeptCd != null and poDeptCd != ''">
		 AND   MPM.CREATE_DEPT_CD = #{poDeptCd, jdbcType=VARCHAR}
		</if>	
		<if test="poTitle != null and poTitle != ''">
		AND    (UPPER(MPM.PO_TITLE) LIKE '%' || UPPER(#{poTitle, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="createDeptCd != null and createDeptCd != ''">
		AND    MPM.CREATE_DEPT_CD = #{createDeptCd, jdbcType=VARCHAR}
		</if>	
		<if test="partnerCdNm != null and partnerCdNm != ''">
		AND    (UPPER(MPM.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
		</if>
		<if test="poCategory != null and poCategory != ''">
		AND    MPM.PO_TYPE IN (${poCategory}) 
		</if>	
		<if test="poReferenceType != null and poReferenceType != ''">
		AND    MPM.PO_REFERENCE_TYPE = #{poReferenceType, jdbcType=VARCHAR}
		</if>	
		<if test="poUserNo != null and poUserNo != ''">
		AND    MPM.CREATE_BY = #{poUserNo, jdbcType=VARCHAR}
		</if>	
    </select>
	<select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT MPD.COMPANY_CD
		     , MPD.DIVISION_CD
		     , MPD.PO_NO
		     , MPD.PO_SEQ
		     , MPD.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_SPEC 
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , MPD.PURCHASE_UOM
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.PURCHASE_UOM) FROM DUAL) AS PURCHASE_UOM_NM
		     , MI.UOM        
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.UOM) FROM DUAL) AS UOM_NM
		     , MPD.PO_QTY
		     , MPD.UNIT_PRICE
		     , MPD.AMOUNT
		     , MPD.LOCAL_AMOUNT
		     , MPD.WAREHOUSE_CD  AS RECEIPT_WAREHOUSE_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPD.COMPANY_CD,MPD.DIVISION_CD,MPD.WAREHOUSE_CD) FROM DUAL) AS RECEIPT_WAREHOUSE_NM
		     , MPD.IQC_FLAG
		     , MPD.LOT_MANAGEMENT_YN
		     , MPD.PO_OVER_RECEIPT_RATE
		     , MPD.STOCK_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0048', MPD.STOCK_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STOCK_TYPE_NM
		     , MPD.DESCRIPTION
		     , MPD.REFERENCE_NO           
		     , MPD.REFERENCE_DTL_NO       
		     , MPD.PURCHASE_ORDER_ID
		     , ROWIDTOCHAR(MPD.ROWID)  AS KEY_ID  
		FROM   MOM_PO_DTL MPD
		     , MOM_ITEM MI
		WHERE  MPD.COMPANY_CD = MI.COMPANY_CD
		AND    MPD.DIVISION_CD = MI.DIVISION_CD
		AND    MPD.ITEM_ID     = MI.ITEM_ID
		AND    MPD.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		AND    MPD.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    MPD.PO_NO       = #{poNo, jdbcType=VARCHAR}
		ORDER BY MPD.PO_NO
		       , MPD.PO_SEQ
    </select>
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_PO_CONFIRM_CANCEL
        <where>
        <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
        </foreach>
        </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PO_CONFIRM_CANCEL( COMPANY_CD
						               , DIVISION_CD
						               , PO_NO
						               , VAL_MSG
						               , MULTI_MSG
						               , CREATE_BY
						               , CREATE_DATE )
        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
						               , #{item.divisionCd, jdbcType=VARCHAR}
						               , #{item.poNo, jdbcType=VARCHAR}
						               , #{item.valMsg, jdbcType=VARCHAR}
						               , #{item.multiMsg, jdbcType=VARCHAR}
						               , #{item.userId, jdbcType=VARCHAR}
						               , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                               )
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MATERIAL_PKG.SP_PO_CONFIRM_CANCEL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                                , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                                , #{companyCd,   jdbcType=VARCHAR, mode=IN}
			                                        , #{divisionCd,  jdbcType=VARCHAR, mode=IN}											  
			                                        , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
</mapper>