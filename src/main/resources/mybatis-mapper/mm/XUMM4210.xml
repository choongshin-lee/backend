<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM4210">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
		SELECT MPIM.COMPANY_CD
		     , MPIM.DIVISION_CD
		     , MPIM.INOUT_NO            AS RECEIPT_NO
		     , ROWIDTOCHAR(MPIM.ROWID)  AS KEY_ID 
		     , MPIM.PROCESS_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.PROCESS_CD) FROM DUAL)  AS PROCESS_NM   
		     , MPIM.TITLE        AS RECEIPT_TITLE
		     , MP.PARTNER_CD
             , MP.PARTNER_NM
		     , MPIM.DEPARTURE_VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.DEPARTURE_VENDOR_CD) FROM DUAL) AS DEPARTURE_VENDOR_NM
		     , MPIM.WAREHOUSE_CD  AS RECEIPT_WAREHOUSE_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.WAREHOUSE_CD) FROM DUAL) AS RECEIPT_WAREHOUSE_NM
             , MPIM.ETC_RECEIPT_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_IL_TYPE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.ETC_RECEIPT_TYPE) FROM DUAL) AS ETC_RECEIPT_TYPE_NM
		     , MPIM.CURRENCY_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0017', MPIM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
		     , MPIM.EXCHANGE_RATE
		     , MPIM.AMOUNT           AS RECEIPT_AMOUNT
		     , MPIM.TAX_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0029', MPIM.TAX_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS TAX_TYPE_NM
		     , MPIM.DESCRIPTION
		     , MPIM.CREATE_BY   AS CREATE_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM
		     , TO_CHAR(MPIM.CREATE_DATE ,'YYYY-MM-DD')     AS CREATE_DATE
	    FROM   MOM_PURCHASE_INOUT_MST MPIM
	         , MOM_PARTNER MP
	    WHERE  MPIM.COMPANY_CD   = MP.COMPANY_CD
		AND    MPIM.DIVISION_CD  = MP.DIVISION_CD
		AND    MPIM.VENDOR_CD    = MP.PARTNER_CD
		AND    MPIM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
		AND    MPIM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	
		AND    MPIM.CREATE_DATE  BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999  
		<if test="receiptNo != null and receiptNo != ''">
		AND    (UPPER(MPIM.INOUT_NO) LIKE '%' || UPPER(#{receiptNo, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="partnerCdNm != null and partnerCdNm != ''">
		AND    (UPPER(MPIM.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
		</if>	
		<if test="receiptTitle != null and receiptTitle != ''">
		AND    (UPPER(MPIM.TITLE) LIKE '%' || UPPER(#{receiptTitle, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="iqcFlag != null and iqcFlag != ''">
		AND    MPIM.IQC_FLAG = #{iqcFlag, jdbcType=VARCHAR}
		</if>	
		AND    MPIM.STATE        = 'PIG'  -- 등록 
		AND    MPIM.PROCESS_CD   = 'OR'   
		ORDER BY MPIM.INOUT_NO
	</select>
	<select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MPID.COMPANY_CD
		     , MPID.DIVISION_CD
		     , MPID.INOUT_NO          AS RECEIPT_NO
		     , MPID.SEQ
		     , MPID.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_SPEC 
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , MPID.INOUT_UOM   AS PURCHASE_UOM
			 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MPID.INOUT_UOM) FROM DUAL) AS PURCHASE_UOM_NM
			 , MI.UOM        
			 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.UOM) FROM DUAL) AS UOM_NM
		     , MPID.INOUT_QTY        AS RECEIPT_REQUEST_QTY
		     , MPID.CONVERSION_UOM       
			 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MPID.CONVERSION_UOM) FROM DUAL) AS CONVERSION_UOM_NM
             , MPID.CONVERSION_QTY 
		     , MPID.STOCK_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MD0048', MPID.STOCK_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STOCK_TYPE_NM
             , NVL(MPID.LOT_MANAGEMENT_YN, 'N')   AS LOT_USE_YN
             , MPID.LOT_RULE   		  AS LOT_RULE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MD0052', MPID.LOT_RULE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS LOT_RULE_NM
		     , MPID.REASON_CD  AS EXCEPTION_REASON_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MM0016', MPID.REASON_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS EXCEPTION_REASON_NM
		     , MPID.UNIT_PRICE
		     , MPID.AMOUNT
             , MPID.LOCAL_AMOUNT
		     , MI.STOCK_TYPE
		     , MPID.DESCRIPTION
		     , MPID.PURCHASE_INOUT_ID
		     , MPID.IO_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MPID.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
		     , ROWIDTOCHAR(MPID.ROWID)  AS KEY_ID 
		FROM   MOM_PURCHASE_INOUT_DTL MPID
		     , MOM_ITEM MI
		WHERE  MPID.COMPANY_CD  = MI.COMPANY_CD
		AND    MPID.DIVISION_CD = MI.DIVISION_CD
		AND    MPID.ITEM_ID     = MI.ITEM_ID
		AND    MPID.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		AND    MPID.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    MPID.INOUT_NO    = #{receiptNo, jdbcType=VARCHAR}
		ORDER BY MPID.INOUT_NO   
		       , MPID.SEQ
    </select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_PI_MST
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	            (    COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
		        AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
		        AND  PROCESS_CD  = 'OR'
		        AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
		        )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
            INTO MOM_PROC_PI_MST( COMPANY_CD
				                , DIVISION_CD
				                , INOUT_NO
				                , PROCESS_CD
				                , TITLE
				                , VENDOR_CD
				                , DEPARTURE_VENDOR_CD
				                , WAREHOUSE_CD
				                , CURRENCY_CD
					            , EXCHANGE_RATE
		                        , TAX_TYPE
				                , ETC_RECEIPT_TYPE
				                , DESCRIPTION
				                , DEL_YN
				                , VAL_MSG
				                , MULTI_MSG
				                , CREATE_BY
				                , CREATE_DATE )
            VALUES              ( #{item.companyCd, jdbcType=VARCHAR}
				                , #{item.divisionCd, jdbcType=VARCHAR}
				                , #{item.receiptNo, jdbcType=VARCHAR}
				                , 'OR'
				                , #{item.receiptTitle, jdbcType=VARCHAR}
				                , #{item.partnerCd, jdbcType=VARCHAR}
				                , #{item.departureVendorCd, jdbcType=VARCHAR}
				                , #{item.receiptWarehouseCd, jdbcType=VARCHAR}
				                , #{item.currencyCd, jdbcType=VARCHAR}
	 		                    , #{item.exchangeRate, jdbcType=NUMERIC}
				                , #{item.taxType, jdbcType=VARCHAR}
				                , #{item.etcReceiptType, jdbcType=VARCHAR}
				                , #{item.description, jdbcType=VARCHAR}
				                , #{item.delYn, jdbcType=VARCHAR}
				                , #{item.valMsg, jdbcType=VARCHAR}
				                , #{item.multiMsg, jdbcType=VARCHAR}
				                , #{item.userId, jdbcType=VARCHAR}
				                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
				              )
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MATERIAL_PKG.SP_UPSERT_PI_MST( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                            , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                            , #{companyCd,   javaType=string,  jdbcType=VARCHAR , mode=IN}
	                                            , #{divisionCd,  jdbcType=VARCHAR, mode=IN}	
	                                            , 'OR'														  
	                                            , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
    <delete id="remove_createBtn2" parameterType="java.util.List">
    DELETE FROM MOM_PROC_PI_DTL
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
            (     COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
             AND  PROCESS_CD  = 'OR'
             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
            </foreach>
        </where>
    </delete>  
    <insert id="create_createBtn2" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PI_DTL( COMPANY_CD
			                , DIVISION_CD
			                , PROCESS_CD
			                , INOUT_NO
			                , PURCHASE_INOUT_ID
			                , IO_TYPE
			                , ITEM_ID
			                , INOUT_QTY
			                , INOUT_UOM
			                , CURRENCY_CD 
                            , EXCHANGE_RATE 
			                , UNIT_PRICE
			                , PO_OVER_RECEIPT_RATE
			                , REASON_CD
			                , LOT_USE_YN
                            , LOT_RULE
                            , DESCRIPTION
			                , DEL_YN
			                , VAL_MSG
			                , MULTI_MSG
			                , CREATE_BY
			                , CREATE_DATE )
        VALUES              ( #{item.companyCd, jdbcType=VARCHAR}
			                , #{item.divisionCd, jdbcType=VARCHAR}
			                , 'OR'
			                , #{item.receiptNo, jdbcType=VARCHAR}
			                , #{item.purchaseInoutId, jdbcType=VARCHAR}
			                , #{item.ioType, jdbcType=VARCHAR}
			                , #{item.itemId, jdbcType=VARCHAR}
			                , #{item.receiptRequestQty, jdbcType=NUMERIC}
			                , #{item.purchaseUom, jdbcType=VARCHAR}
			                , #{item.currencyCd, jdbcType=VARCHAR}
			                , #{item.exchangeRate, jdbcType=NUMERIC}
			                , #{item.unitPrice, jdbcType=NUMERIC}
			                , #{item.poOverReceiptRate, jdbcType=NUMERIC} 
			                , #{item.exceptionReasonCd, jdbcType=VARCHAR}
			                , #{item.lotUseYn, jdbcType=VARCHAR}
	                        , #{item.lotRule, jdbcType=VARCHAR}
			                , #{item.description, jdbcType=VARCHAR}
			                , #{item.delYn, jdbcType=VARCHAR}
			                , #{item.valMsg, jdbcType=VARCHAR}
			                , #{item.multiMsg, jdbcType=VARCHAR}
			                , #{item.userId, jdbcType=VARCHAR}
			                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                            )
        </foreach>
    </insert>
    <select id="proc_createBtn2" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_MATERIAL_PKG.SP_UPSERT_PI_DTL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                        , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                        , #{companyCd,   jdbcType=VARCHAR, mode=IN}
	                                        , #{divisionCd,  jdbcType=VARCHAR, mode=IN}	
	                                        , 'OR'										  
	                                        , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
</mapper>
