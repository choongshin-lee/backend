<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM1090">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if> 		
					SELECT MPR.COMPANY_CD
					     , MPR.DIVISION_CD
					     , MPR.PR_NO
					     , MPR.PR_TITLE
					     , MPR.PR_SEQ
					     , MPR.PURCHASE_REQUEST_ID
					     , MPR.REQUEST_DEPT_CD
                         , (SELECT MOM_COMMON_PKG.FN_GET_DEPARTMENT_NAME(MPR.COMPANY_CD, MPR.DIVISION_CD, MPR.REQUEST_DEPT_CD) FROM DUAL) AS REQUEST_DEPT_NM
					     , MPR.PR_TYPE 
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPR.COMPANY_CD, MPR.DIVISION_CD, 'MM0001', MPR.PR_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PR_TYPE_NM
					     , MPR.STATE   AS PR_STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPR.COMPANY_CD, MPR.DIVISION_CD, 'MM0004', MPR.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS PR_STATE_NM
					     , MPR.REFERENCE_NO
					     , TO_CHAR(MPR.REQUEST_DATE ,'YYYY-MM-DD')   AS REQUEST_DATE
					     , TO_CHAR(MPR.RECEIPT_DATE ,'YYYY-MM-DD')   AS RECEIPT_DATE
					     , MPR.PO_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPR.COMPANY_CD, MPR.DIVISION_CD, MPR.PO_USER_NO) FROM DUAL ) AS PO_USER_NM
					     , MPR.ITEM_ID
					     , MI.ITEM_NM
					     , MI.ITEM_SPEC
					     , MI.ITEM_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
					     , MPR.PURCHASE_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPR.COMPANY_CD, MPR.DIVISION_CD, MPR.PURCHASE_UOM) FROM DUAL) AS PURCHASE_UOM_NM
					     , MPR.STOCK_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPR.COMPANY_CD, MPR.DIVISION_CD, 'MD0048', MPR.STOCK_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS STOCK_TYPE_NM
					     , MPR.REQUEST_QTY         
					     , NVL(MPR.CLOSE_QTY, 0)            AS PR_CLOSE_QTY   
					     , MPO.PO_NO
					     , MPO.PURCHASE_ORDER_ID
					     , MPO.PO_SEQ
					     , MPO.STATE                AS PO_STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPO.COMPANY_CD, MPO.DIVISION_CD, 'MM0011', MPO.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS PO_STATE_NM
					     , MPO.CONFIRM_DATE         AS PO_CONFIRM_DATE
					     , MPO.PO_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_PO_TYPE_NAME(MPO.COMPANY_CD, MPO.DIVISION_CD, MPO.PO_TYPE) FROM DUAL) AS PO_TYPE_NM
					     , MPO.VENDOR_CD            AS PARTNER_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPO.COMPANY_CD, MPO.DIVISION_CD, MPO.VENDOR_CD) FROM DUAL) AS PARTNER_NM
					     , MPO.PO_QTY
					     , NVL(MPO.CLOSE_QTY, 0)    AS PO_CLOSE_QTY
					     , MPI.INOUT_NO
					     , MPI.SEQ
					     , MPI.PURCHASE_INOUT_ID
					     , TO_CHAR(MPI.CONFIRM_DATE ,'YYYY-MM-DD')   AS PI_CONFIRM_DATE
					     , TO_CHAR(MPI.DEPARTURE_DATE ,'YYYY-MM-DD')   AS DEPARTURE_DATE
					     , MPI.PROCESS_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.PROCESS_CD) FROM DUAL)  AS PROCESS_NM
					     , MPI.STATE                  AS PI_STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MM0013', MPI.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS PI_STATE_NM
					     , MPI.IQC_FLAG
					     , TO_CHAR(MPI.IQC_RECEIPT_DATE ,'YYYY-MM-DD')   AS IQC_RECEIPT_DATE
					     , MPI.IQC_RESULT
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MM0014', MPI.IQC_RESULT, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS IQC_RESULT_NM
					     , MPI.INOUT_QTY           
					     , MPI.ITEM_INOUT_ID
					     , MPI.WAREHOUSE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPI.COMPANY_CD,MPI.DIVISION_CD,MPI.WAREHOUSE_CD) FROM DUAL) AS WAREHOUSE_NM
					     , TO_CHAR(MPI.RECEIPT_DATE ,'YYYY-MM-DD')   AS IO_DATE
					     , MPI.RECEIPT_QTY
					     , MPI.CONVERSION_UOM      AS  STOCK_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.CONVERSION_UOM) FROM DUAL) AS STOCK_UOM_NM
					     , MPI.INOUT_UOM 
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.INOUT_UOM) FROM DUAL) AS INOUT_UOM_NM
					     , DECODE(MPI.ITEM_INOUT_ID, '', '',  MPI.IO_TYPE) AS IO_TYPE
					     , CASE WHEN MPI.ITEM_INOUT_ID IS NOT NULL THEN
					           (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.IO_TYPE) FROM DUAL) 
					       ELSE ''
					       END    AS IO_TYPE_NM
					     , MPR.PURCHASE_REQUEST_ID||'_'||NVL(MPO.PURCHASE_ORDER_ID, '****')||'_'||NVL(MPI.PURCHASE_INOUT_ID, '****')  AS KEY_ID              
					     , COUNT(*) OVER() AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MPR.COMPANY_CD,MPR.DIVISION_CD ORDER BY MPR.PR_NO, MPR.PR_SEQ, MPO.PO_NO, MPO.PO_SEQ, MPI.INOUT_NO, MPI.SEQ  ) AS ROW_COUNT   
					FROM   MOM_PURCHASE_REQUEST_V MPR
					     , MOM_ITEM               MI
					     , MOM_PURCHASE_ORDER_V   MPO
					     , MOM_PURCHASE_INOUT_V   MPI
					WHERE  MPR.COMPANY_CD           = MI.COMPANY_CD
					AND    MPR.DIVISION_CD          = MI.DIVISION_CD
					AND    MPR.ITEM_ID              = MI.ITEM_ID
					AND    MPR.COMPANY_CD           = MPO.COMPANY_CD(+)
					AND    MPR.DIVISION_CD          = MPO.DIVISION_CD(+)
					AND    MPR.PURCHASE_REQUEST_ID  = MPO.REFERENCE_DTL_NO(+)     
					AND    MPO.COMPANY_CD           = MPI.COMPANY_CD(+)
					AND    MPO.DIVISION_CD          = MPI.DIVISION_CD(+)
					AND    MPO.PURCHASE_ORDER_ID    = MPI.REFERENCE_DTL_NO(+)
					AND    MPR.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
					AND    MPR.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}  
					AND    MPR.REQUEST_DATE BETWEEN TO_DATE(#{requestDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{requestDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					<if test="prNo != null and prNo != ''">
					AND    (UPPER(MPR.PR_NO) LIKE '%' || UPPER(#{prNo, jdbcType=VARCHAR}) || '%')	  
				    </if>
				    <if test="referenceNo != null and referenceNo != ''">
				    AND    (UPPER(MPR.REFERENCE_NO) LIKE '%' || UPPER(#{referenceNo, jdbcType=VARCHAR}) || '%')	  
				    </if>	
				    <if test="itemIdNm != null and itemIdNm != ''">
				    AND    (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
				    </if>
					<if test="requestDeptCd != null and requestDeptCd != ''">
				    AND    MPR.REQUEST_DEPT_CD = #{requestDeptCd, jdbcType=VARCHAR}
				    </if>
				    <if test="prTitle != null and prTitle != ''">
				    AND    (UPPER(MPR.PR_TITLE) LIKE '%' || UPPER(#{prTitle, jdbcType=VARCHAR}) || '%')	  
				    </if>	
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
			) A
			WHERE ROW_COUNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>  			
	</select>
</mapper>