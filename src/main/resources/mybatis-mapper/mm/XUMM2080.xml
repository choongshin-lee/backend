<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM2080">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if> 		
				    SELECT MPO.COMPANY_CD
					     , MPO.DIVISION_CD 
					     , MPO.PO_NO
					     , MPO.PO_TITLE
					     , MPO.PO_SEQ       AS SEQ
					     , MPO.PURCHASE_ORDER_ID
					     , MPO.ITEM_ID
					     , MPO.STOCK_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPO.COMPANY_CD, MPO.DIVISION_CD, 'MD0048', MPO.STOCK_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS STOCK_TYPE_NM
					     , MPO.PURCHASE_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPO.COMPANY_CD, MPO.DIVISION_CD, MPO.PURCHASE_UOM) FROM DUAL) AS PURCHASE_UOM_NM
					     , MPO.PO_QTY
					     , MPO.CLOSE_QTY
					     , MPO.UNIT_PRICE
					     , MPO.AMOUNT
					     , MPO.LOCAL_AMOUNT
					     , TO_CHAR(MPO.CONFIRM_DATE ,'YYYY-MM-DD')   AS PO_CONFIRM_DATE
					     , MPI.INOUT_NO
					     , MPI.TITLE     AS RECEIPT_TITLE
					     , MPI.PURCHASE_INOUT_ID
					     , TO_CHAR(MPI.CONFIRM_DATE ,'YYYY-MM-DD')   AS PI_CONFIRM_DATE
					     , TO_CHAR(MPI.DEPARTURE_DATE ,'YYYY-MM-DD') AS DEPARTURE_DATE
					     , MPI.PROCESS_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.PROCESS_CD) FROM DUAL)  AS PROCESS_NM
					     , MPI.STATE   AS PI_STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MM0013', MPI.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS PI_STATE_NM
					     , MPO.IQC_FLAG
					     , MPI.IQC_RESULT
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MM0014', MPI.IQC_RESULT, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS IQC_RESULT_NM
					     , MPI.INOUT_QTY
					     , MPI.INOUT_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.INOUT_UOM) FROM DUAL) AS INOUT_UOM_NM
					     , MPI.CONVERSION_QTY
					     , MPI.CONVERSION_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.CONVERSION_UOM) FROM DUAL) AS CONVERSION_UOM_NM
					     , MPI.WAREHOUSE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPI.COMPANY_CD,MPI.DIVISION_CD,MPI.WAREHOUSE_CD) FROM DUAL) AS WAREHOUSE_NM
					     , MPI.VENDOR_CD   AS PARTNER_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPI.COMPANY_CD,MPI.DIVISION_CD,MPI.VENDOR_CD) FROM DUAL)   AS PARTNER_NM
					     , DECODE(MPI.ITEM_INOUT_ID, '', '',  MPI.IO_TYPE) AS IO_TYPE
					     , CASE WHEN MPI.ITEM_INOUT_ID IS NOT NULL THEN
					           (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.IO_TYPE) FROM DUAL) 
					       ELSE ''
					       END    AS IO_TYPE_NM
					     , TO_CHAR(MPI.RECEIPT_DATE ,'YYYY-MM-DD')   AS RECEIPT_DATE
					     , MPI.RECEIPT_QTY
					     , MPI.UNIT_PRICE       AS PI_UNIT_PRICE
					     , MPI.AMOUNT           AS PI_AMOUNT
					     , MPI.LOCAL_AMOUNT     AS PI_LOCAL_AMOUNT
					     , MI.ITEM_NM
					     , MI.ITEM_SPEC
					     , MI.ITEM_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
					     , MPI.CURRENCY_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'SM0017', MPI.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
					     , MPI.PENALTY_AMOUNT
					     , MPI.PENALTY_LOCAL_AMOUNT
					     , MPO.PO_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_PO_TYPE_NAME(MPO.COMPANY_CD, MPO.DIVISION_CD, MPO.PO_TYPE) FROM DUAL) AS PO_TYPE_NM
					     , MPO.PO_REFERENCE_TYPE
  		                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPO.COMPANY_CD, MPO.DIVISION_CD, 'MM0005', MPO.PO_REFERENCE_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PO_REFERENCE_TYPE_NM
  		                 , MPO.DO_INVOICE_YN
					     , MPO.DESCRIPTION
					     , MPO.PURCHASE_ORDER_ID||'=='||MPI.PURCHASE_INOUT_ID  AS KEY_ID   
					     , COUNT(*) OVER() AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MPO.COMPANY_CD,MPO.DIVISION_CD ORDER BY MPO.PO_NO, MPO.PO_SEQ, MPI.PURCHASE_INOUT_ID ) AS ROW_COUNT
					FROM   MOM_PURCHASE_ORDER_V MPO
					     , MOM_PURCHASE_INOUT_V MPI
					     , MOM_ITEM MI
					     , MOM_PARTNER MP
					WHERE  MPO.COMPANY_CD        = MPI.COMPANY_CD(+)
					AND    MPO.DIVISION_CD       = MPI.DIVISION_CD(+)
					AND    MPO.PURCHASE_ORDER_ID = MPI.REFERENCE_DTL_NO(+)  
					AND    MPO.COMPANY_CD        = MI.COMPANY_CD
					AND    MPO.DIVISION_CD       = MI.DIVISION_CD
					AND    MPO.ITEM_ID           = MI.ITEM_ID 
					AND    MPO.COMPANY_CD        = MP.COMPANY_CD
					AND    MPO.DIVISION_CD       = MP.DIVISION_CD
					AND    MPO.VENDOR_CD         = MP.PARTNER_CD
					AND    MPO.COMPANY_CD        = #{companyCd, jdbcType=VARCHAR}
					AND    MPO.DIVISION_CD       = #{divisionCd, jdbcType=VARCHAR}	  
					AND    MPO.CONFIRM_DATE      BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					AND    MPO.PO_REFERENCE_TYPE IN ('10','20')   
					<if test="poNo != null and poNo != ''">
					AND    (UPPER(MPO.PO_NO) LIKE '%' || UPPER(#{poNo, jdbcType=VARCHAR}) || '%')   
					</if>
					<if test="poUserNo != null and poUserNo != ''">
					 AND   MPO.CREATE_BY = #{poUserNo, jdbcType=VARCHAR}
					</if> 
					<if test="itemIdNm != null and itemIdNm != ''">
					AND    (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')   
					</if>
					<if test="partnerCdNm != null and partnerCdNm != ''">
					AND    (UPPER(MPO.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 
					<if test="poTitle != null and poTitle != ''">
					AND    (UPPER(MPO.PO_TITLE) LIKE '%' || UPPER(#{poTitle, jdbcType=VARCHAR}) || '%')   
					</if>
					<if test="poDeptCd != null and poDeptCd != ''">
					AND    MPO.CREATE_DEPT_CD = #{poDeptCd, jdbcType=VARCHAR}
					</if> 
					<if test="poCategory != null and poCategory != ''">
					AND    MPO.PO_TYPE IN (${poCategory}) 
					</if> 
					<if test="poReferenceType != null and poReferenceType != ''">
					AND    MPO.PO_REFERENCE_TYPE = #{poReferenceType, jdbcType=VARCHAR}
					</if> 
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_COUNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>  	
	</select>
</mapper>