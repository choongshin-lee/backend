<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM4230">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
		SELECT MPIM.COMPANY_CD
	         , MPIM.DIVISION_CD
	         , MPIM.INOUT_NO     AS RECEIPT_NO
	         , ROWIDTOCHAR(MPIM.ROWID)  AS KEY_ID   
	         , MPIM.PROCESS_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.PROCESS_CD) FROM DUAL)  AS PROCESS_NM   
	         , MPIM.TITLE        AS RECEIPT_TITLE
	         , MP.PARTNER_CD
	         , MP.PARTNER_NM
	         , MPIM.DEPARTURE_VENDOR_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.DEPARTURE_VENDOR_CD) FROM DUAL) AS DEPARTURE_VENDOR_NM
	         , MPIM.WAREHOUSE_CD  AS RECEIPT_WAREHOUSE_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.WAREHOUSE_CD) FROM DUAL) AS RECEIPT_WAREHOUSE_NM
	         , MPIM.IQC_FLAG
	         , MPIM.AMOUNT           AS RECEIPT_AMOUNT
	         , TO_CHAR(MPIM.DEPARTURE_DATE ,'YYYY-MM-DD')     AS DEPARTURE_DATE
	         , MPIM.VENDOR_INVOICE
	         , MPIM.FREE_YN
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0015', MPIM.FREE_YN, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS FREE_YN_NM
	         , MPIM.TAX_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0029', MPIM.TAX_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS TAX_TYPE_NM
	         , MPIM.REASON_CD  AS EXP_RCV_REASON_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0016', MPIM.REASON_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS EXP_RCV_REASON_NM
		     , MPIM.DESCRIPTION
		     , MPIM.CONFIRM_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
		     , TO_CHAR(MPIM.CONFIRM_DATE ,'YYYY-MM-DD')     AS CONFIRM_DATE
	    FROM   MOM_PURCHASE_INOUT_MST MPIM
	         , MOM_PARTNER MP
	    WHERE  MPIM.COMPANY_CD   = MP.COMPANY_CD
		AND    MPIM.DIVISION_CD  = MP.DIVISION_CD
		AND    MPIM.VENDOR_CD    = MP.PARTNER_CD
		AND    MPIM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
		AND    MPIM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	
		AND    MPIM.CONFIRM_DATE BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999  
		<if test="receiptNo != null and receiptNo != ''">
		AND    (UPPER(MPIM.INOUT_NO) LIKE '%' || UPPER(#{receiptNo, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="partnerCdNm != null and partnerCdNm != ''">
		AND    (UPPER(MPIM.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
		</if>	
		<if test="receiptTitle != null and receiptTitle != ''">
		AND    (UPPER(MPIM.TITLE) LIKE '%' || UPPER(#{receiptTitle, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="iqcFlag != null and iqcFlag != ''">
		AND    MPIM.IQC_FLAG = #{iqcFlag, jdbcType=VARCHAR}
		</if>	
		AND    MPIM.STATE        = 'PIF'  -- 등록 
		AND    MPIM.PROCESS_CD   = 'ED'
		AND    NOT EXISTS  (SELECT '*'
							FROM   MOM_PURCHASE_INOUT_DTL MPID
							WHERE  MPID.COMPANY_CD    = MPIM.COMPANY_CD
							AND    MPID.DIVISION_CD	  = MPIM.DIVISION_CD
							AND    MPID.INOUT_NO      = MPIM.INOUT_NO
							AND    MPID.STATE         != 'PIF'  )
		ORDER BY MPIM.INOUT_NO
	</select>
	<select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MPID.COMPANY_CD
	         , MPID.DIVISION_CD
	         , MPID.INOUT_NO          AS RECEIPT_NO
	         , MPID.SEQ
	         , MPID.ITEM_ID
	         , MI.ITEM_NM
	         , MI.ITEM_SPEC 
	         , MI.ITEM_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
	         , MPID.INOUT_UOM   AS PURCHASE_UOM
		  	 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MPID.INOUT_UOM) FROM DUAL) AS PURCHASE_UOM_NM
		 	 , MPID.CONVERSION_UOM      
             , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MPID.DIVISION_CD, MPID.CONVERSION_UOM) FROM DUAL) AS CONVERSION_UOM_NM
             , MPID.CONVERSION_QTY 
	         , MPID.INOUT_QTY        AS RECEIPT_REQUEST_QTY
	         , MPID.CURRENCY_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'SM0017', MPID.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
	         , MPID.EXCHANGE_RATE
	         , MPID.UNIT_PRICE
	         , MPID.AMOUNT
	         , MPID.LOCAL_AMOUNT
	         , MPID.DESCRIPTION
	         , MPID.PURCHASE_INOUT_ID
	         , ROWIDTOCHAR(MPID.ROWID)  AS KEY_ID  
	    FROM   MOM_PURCHASE_INOUT_DTL MPID
	         , MOM_ITEM MI
	    WHERE  MPID.COMPANY_CD = MI.COMPANY_CD
	    AND    MPID.DIVISION_CD = MI.DIVISION_CD
	    AND    MPID.ITEM_ID     = MI.ITEM_ID
	    AND    MPID.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    MPID.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    MPID.INOUT_NO    = #{receiptNo, jdbcType=VARCHAR}
	    ORDER BY MPID.INOUT_NO   
	           , MPID.SEQ
    </select>
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_PI_CONFIRM_CANCEL
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
            (    COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
            AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
            AND  PROCESS_CD  = 'ED'
            AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
            </foreach>
        </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PI_CONFIRM_CANCEL( COMPANY_CD
			                           , DIVISION_CD
			                           , PROCESS_CD
			                           , INOUT_NO
			                           , DESCRIPTION
			                           , VAL_MSG
			                           , MULTI_MSG
			                           , CREATE_BY
			                           , CREATE_DATE )
        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
	                                   , #{item.divisionCd, jdbcType=VARCHAR}
	                                   , 'ED'
			                           , #{item.receiptNo, jdbcType=VARCHAR}
			                           , #{item.description, jdbcType=VARCHAR}
			                           , #{item.valMsg, jdbcType=VARCHAR}
			                           , #{item.multiMsg, jdbcType=VARCHAR}
			                           , #{item.userId, jdbcType=VARCHAR}
			                           , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
			                           )
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_MATERIAL_PKG.SP_PI_CONFIRM_CANCEL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
			                                    , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
			                                    , #{companyCd,   jdbcType=VARCHAR , mode=IN}
			                                    , #{divisionCd,  jdbcType=VARCHAR, mode=IN}    
			                                    , 'ED'                   
			                                    , #{userId,      jdbcType=VARCHAR, mode=IN} )}                   
    </select>  
</mapper>
