<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM1080">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if> 		
					SELECT  MPD.PR_NO
					      , MPD.PR_SEQ
					      , MPM.PR_TYPE
					      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0001', MPM.PR_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PR_TYPE_NM
					      , MPM.PR_TITLE
					      , MPM.REQUEST_DEPT_CD
					      , (SELECT MOM_COMMON_PKG.FN_GET_DEPARTMENT_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.REQUEST_DEPT_CD) FROM DUAL) AS REQUEST_DEPT_NM
					      , TO_CHAR(MPM.REQUEST_DATE ,'YYYY-MM-DD')   AS REQUEST_DATE
					      , MPM.REQUEST_USER_NO
					      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.REQUEST_USER_NO) FROM DUAL ) AS REQUEST_USER_NM
					      , TO_CHAR(MPM.CONFIRM_DATE ,'YYYY-MM-DD')   AS CONFIRM_DATE
					      , MPM.CONFIRM_USER_NO
					      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.CONFIRM_USER_NO) FROM DUAL) AS CONFIRM_USER_NM
					      , TO_CHAR(MPD.RECEIPT_DATE ,'YYYY-MM-DD')   AS RECEIPT_DATE
					      , MPD.RECEIPT_USER_NO  
					      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.RECEIPT_USER_NO) FROM DUAL ) AS RECEIPT_USER_NM      
					      , MPD.PO_USER_NO 
					      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.PO_USER_NO) FROM DUAL ) AS PO_USER_NM
					      , MPD.ITEM_ID
					      , MI.ITEM_NM
					      , MI.ITEM_SPEC
					      , MI.ITEM_TYPE
					      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
					      , MPD.PURCHASE_UOM
			              , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.PURCHASE_UOM) FROM DUAL) AS PURCHASE_UOM_NM
			              , MI.UOM        
			              , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.UOM) FROM DUAL) AS UOM_NM
					      , TO_CHAR(MPD.DUE_DATE ,'YYYY-MM-DD')   AS REQUEST_DUE_DATE
					      , MPD.REQUEST_QTY
					      , MPD.PO_QTY
					      , MPD.REQUEST_QTY - NVL(MPD.PO_QTY, 0)  AS REMAIN_QTY
					      , MPD.CURRENCY_CD
					      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'SM0017', MPD.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
					      , MPD.UNIT_PRICE
					      , MPD.AMOUNT
					      , MPD.LOCAL_AMOUNT
					      , MI.STORAGE_WAREHOUSE_CD  AS DEPARTURE_WAREHOUSE_CD
		                  , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPD.COMPANY_CD,MPD.DIVISION_CD,MI.STORAGE_WAREHOUSE_CD) FROM DUAL) AS DEPARTURE_WAREHOUSE_NM
					      , MI.MAKER
					      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0007', MI.MAKER, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS MAKER_NM
					      , MPD.STATE
		                  , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MM0004', MPD.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
					      , MPM.REFERENCE_NO
					      , MPD.DESCRIPTION
					      , MPD.COMPANY_CD
					      , MPD.DIVISION_CD
					      , MPD.PURCHASE_REQUEST_ID         
					      , MPD.PURCHASE_REQUEST_ID AS KEY_ID                   
					FROM    MOM_PR_DTL MPD
					      , MOM_PR_MST MPM   
					      , MOM_ITEM MI
					WHERE   MPD.COMPANY_CD   = MPM.COMPANY_CD
					AND     MPD.DIVISION_CD  = MPM.DIVISION_CD
					AND     MPD.PR_NO        = MPM.PR_NO
					AND     MPD.COMPANY_CD   = MI.COMPANY_CD
					AND     MPD.DIVISION_CD  = MI.DIVISION_CD
					AND     MPD.ITEM_ID      = MI.ITEM_ID
					AND     MPD.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
					AND     MPD.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	
					AND     MPD.RECEIPT_DATE  BETWEEN TO_DATE(#{receiptDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{receiptDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999  
					<if test="prNo != null and prNo != ''">
					AND     (UPPER(MPM.PR_NO) LIKE '%' || UPPER(#{prNo, jdbcType=VARCHAR}) || '%')	  
				    </if>
				    <if test="requestUserNo != null and requestUserNo != ''">
				    AND     MPM.REQUEST_USER_NO = #{requestUserNo, jdbcType=VARCHAR}
					</if>	
					<if test="itemIdNm != null and itemIdNm != ''">
				    AND     (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
				    </if>
				    <if test="requestDeptCd != null and requestDeptCd != ''">
				    AND     MPM.REQUEST_DEPT_CD = #{requestDeptCd, jdbcType=VARCHAR}
					</if>	
					<if test="createPoYn != null and createPoYn != ''">		
                        <choose>
                            <when test='createPoYn.equals("Y")'>	 	 
			                    <![CDATA[  AND     MPD.PO_QTY > 0	]]> 
					   	        </when>
			                    <when test='createPoYn.equals("N")'>
			                    <![CDATA[  AND     NVL(MPD.PO_QTY, 0)  = 0 ]]> 
			                </when>    
                        </choose>		
                    </if>	
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
			) A
			WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>  			
	</select>
     <delete id="remove_customBtn1-1" parameterType="java.util.List">
       DELETE FROM MOM_PROC_PR_RECEIVE_CANCEL
      <where>
       <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
       </foreach>
      </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PR_RECEIVE_CANCEL( COMPANY_CD
				                       , DIVISION_CD
						               , PR_NO
						               , PURCHASE_REQUEST_ID
						               , DESCRIPTION
						               , VAL_MSG
						               , MULTI_MSG
						               , CREATE_BY
						               , CREATE_DATE )
		VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
						               , #{item.divisionCd, jdbcType=VARCHAR}
						               , #{item.prNo, jdbcType=VARCHAR}
						               , #{item.purchaseRequestId, jdbcType=VARCHAR}
						               , #{item.description, jdbcType=VARCHAR}
						               , #{item.valMsg, jdbcType=VARCHAR}
						               , #{item.multiMsg, jdbcType=VARCHAR}
						               , #{item.userId, jdbcType=VARCHAR}
						               , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
						               )
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MATERIAL_PKG.SP_PR_RECEIVE_CANCEL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
							                        , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
							                        , #{companyCd,   jdbcType=VARCHAR, mode=IN}
							                        , #{divisionCd,  jdbcType=VARCHAR, mode=IN}											  
							                        , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
</mapper>