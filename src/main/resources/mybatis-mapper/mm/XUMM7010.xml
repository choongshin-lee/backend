<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM7010">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MPIM.COMPANY_CD				
		     , MPIM.DIVISION_CD				
		     , MPIM.INOUT_NO     AS RECEIVE_NO	
		     , MPIM.PROCESS_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.PROCESS_CD) FROM DUAL)  AS PROCESS_NM   				
		     , MPIM.TITLE        AS RECEIVE_TITLE				
		     , MP.PARTNER_CD
             , MP.PARTNER_NM					
		     , MPIM.DEPARTURE_VENDOR_CD				
		     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.DEPARTURE_VENDOR_CD) FROM DUAL) AS DEPARTURE_VENDOR_NM				
		     , MPIM.DEPARTURE_LOCATION_CD				
		     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.DEPARTURE_LOCATION_CD) FROM DUAL) AS DEPARTURE_LOCATION_NM				
		     , MPIM.BL_NO				
		     , MPIM.IP_NO				
		     , MPIM.IP_CURRENCY_CD				
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0017', MPIM.IP_CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS IP_CURRENCY_NM				
		     , MPIM.IP_EXCHANGE_RATE				
		     , TO_CHAR(MPIM.CC_DATE ,'YYYY-MM-DD')     AS CC_DATE				
		     , MPIM.LC_NO				
		     , MPIM.IQC_FLAG				
		     , MPIM.AMOUNT           AS RECEIVE_AMOUNT				
		     , TO_CHAR(MPIM.DEPARTURE_DATE ,'YYYY-MM-DD')     AS DEPARTURE_DATE				
		     , MPIM.VENDOR_INVOICE				
		     , MPIM.FREE_YN         AS FREE_YN				
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0015', MPIM.FREE_YN, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS FREE_YN_NM
		     , MPIM.TAX_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0029', MPIM.TAX_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS TAX_TYPE_NM				
		     , MPIM.REASON_CD   AS EXP_RCV_REASON_CD				
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0016', MPIM.REASON_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS EXP_RCV_REASON_NM				
		     , MPIM.DESCRIPTION				
		     , MPIM.CREATE_BY   AS CREATE_USER_NO				
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM				
	         , TO_CHAR(MPIM.CREATE_DATE ,'YYYY-MM-DD')     AS CREATE_DATE
	         , ROWIDTOCHAR(MPIM.ROWID)            AS KEY_ID				
		FROM   MOM_PURCHASE_INOUT_MST MPIM	
		     , MOM_PARTNER MP
		     , MOM_LOCATION ML
	    WHERE  MPIM.COMPANY_CD            = MP.COMPANY_CD
	    AND    MPIM.DIVISION_CD           = MP.DIVISION_CD
	    AND    MPIM.VENDOR_CD             = MP.PARTNER_CD  
	    AND    MPIM.COMPANY_CD            = ML.COMPANY_CD
	    AND    MPIM.DIVISION_CD           = ML.DIVISION_CD
	    AND    MPIM.DEPARTURE_LOCATION_CD = ML.LOCATION_CD
		AND    MPIM.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}				
		AND    MPIM.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}			
		AND    MPIM.CREATE_DATE BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
		AND    ((MPIM.IQC_FLAG = 'Y' AND MPIM.STATE = 'PIIE') OR (MPIM.IQC_FLAG = 'N' AND MPIM.STATE = 'PIF'))
        AND    ML.LOCATION_USE_YN = 'N' 			
	    <if test="receiveNo != null and receiveNo != ''">
	    AND    (UPPER(MPIM.INOUT_NO) LIKE '%' || UPPER(#{receiveNo, jdbcType=VARCHAR}) || '%')	  
	    </if>			
	    <if test="partnerCdNm != null and partnerCdNm != ''">
		AND    (UPPER(MPIM.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
		</if>					
	    <if test="receiveTitle != null and receiveTitle != ''">
	    AND    (UPPER(MPIM.TITLE) LIKE '%' || UPPER(#{receiveTitle, jdbcType=VARCHAR}) || '%')	  
	    </if>				
	    <if test="departureLocationCdNm != null and departureLocationCdNm != ''">
	    AND    (UPPER(MPIM.DEPARTURE_LOCATION_CD) LIKE '%' || UPPER(#{departureLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(ML.LOCATION_NM) LIKE '%' || UPPER(#{departureLocationCdNm, jdbcType=VARCHAR}) || '%')
	    </if>				
	    <if test="iqcFlag != null and iqcFlag != ''">
	    AND     MPIM.IQC_FLAG = #{iqcFlag, jdbcType=VARCHAR}
	    </if>				
    </select>
	<select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MPID.COMPANY_CD
		     , MPID.DIVISION_CD
		     , MPID.INOUT_NO          AS RECEIVE_NO
		     , MPID.SEQ
		     , MPID.IO_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MPID.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
		     , MPID.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_SPEC 
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , MPID.INOUT_UNIT   AS PURCHASE_UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MPID.INOUT_UNIT) FROM DUAL) AS PURCHASE_UNIT_NM
		     , MPID.CONVERSION_UNIT        
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MPID.CONVERSION_UNIT) FROM DUAL) AS UNIT_NM
		     , MPID.INOUT_QTY     AS RECEIVE_WAIT_QTY      
		     , MPID.CURRENCY_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'SM0017', MPID.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
		     , MPID.EXCHANGE_RATE
		     , MPID.UNIT_PRICE
             , MPID.AMOUNT
             , MPID.LOCAL_AMOUNT
		     , MPID.DESCRIPTION
		     , MPID.PURCHASE_INOUT_ID
		     , MPID.REFERENCE_NO
             , MPID.REFERENCE_DTL_NO
             , ROWIDTOCHAR(MPID.ROWID)            AS KEY_ID
		FROM   MOM_PURCHASE_INOUT_DTL MPID	                                                         				
	         , MOM_ITEM MI				
		WHERE  MPID.COMPANY_CD  = MI.COMPANY_CD				  
		AND    MPID.DIVISION_CD = MI.DIVISION_CD				
		AND    MPID.ITEM_ID     = MI.ITEM_ID						
		AND    MPID.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}		
		AND    MPID.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}	
		AND    MPID.INOUT_NO    = #{receiveNo, jdbcType=VARCHAR}		
		ORDER BY MPID.INOUT_NO 			
		       , MPID.SEQ			
    </select>
    <delete id="remove_customBtn2-1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_PURCHASE_GR
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
	        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	        )
            </foreach>
        </where>
    </delete>  
    <insert id="create_customBtn2-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PURCHASE_GR( COMPANY_CD
				                 , DIVISION_CD
				                 , PROCESS_CD
				                 , INOUT_NO
				                 , DESCRIPTION
				                 , VAL_MSG
				                 , MULTI_MSG
				                 , CREATE_BY
				                 , CREATE_DATE )
        VALUES                   ( #{item.companyCd, jdbcType=VARCHAR}
				                 , #{item.divisionCd, jdbcType=VARCHAR}
				                 , #{item.processCd, jdbcType=VARCHAR}
				                 , #{item.receiveNo, jdbcType=VARCHAR}
				                 , #{item.description, jdbcType=VARCHAR}
				                 , #{item.valMsg, jdbcType=VARCHAR}
				                 , #{item.multiMsg, jdbcType=VARCHAR}
				                 , #{item.userId, jdbcType=VARCHAR}
				                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                 )
        </foreach>
    </insert>
    <select id="proc_customBtn2-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_MATERIAL_PKG.SP_PURCHASE_GOODS_RECEIPT( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
					                                 , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
					                                 , #{companyCd,   jdbcType=VARCHAR, mode=IN}
					                                 , #{divisionCd,  jdbcType=VARCHAR, mode=IN}											  
					                                 , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
</mapper>