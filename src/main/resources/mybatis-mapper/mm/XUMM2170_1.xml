<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM2170_1">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
    SELECT MPIM.COMPANY_CD			
	     , MPIM.DIVISION_CD			
	     , MPIM.INOUT_NO     AS RETURN_NO        -- 반품서번호	
	     , MPIM.INOUT_NO     AS KEY_ID		
	     , MPIM.INOUT_TYPE                       -- 입출고유형					
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0012', MPIM.INOUT_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS INOUT_TYPE_NM  			
	     , MPIM.IO_TYPE                             			
	     , (SELECT MOM_COMMON_PKG.fn_get_io_type_name(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.IO_TYPE) FROM DUAL) AS IO_TYPE_NM			
	     , MPIM.TITLE        AS RETURN_TITLE			
	     , MPIM.VENDOR_CD			
	     , MP.PARTNER_NM     AS VENDOR_NM			
	     , MPIM.DEPARTURE_LOCATION_CD AS 	ISSUE_LOCATION_CD		
	     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD,MPIM.DEPARTURE_LOCATION_CD) FROM  DUAL) AS ISSUE_LOCATION_NM			
	     , MPIM.IQC_FLAG			
	     , MPIM.CURRENCY_CD			
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0017', MPIM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM			
	     , MPIM.EXCHANGE_RATE			
	     , MPIM.AMOUNT           AS RETURN_AMOUNT			
	     , MPIM.STATE			
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0013', MPIM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM  			
	     , MPIM.CREATE_BY   AS CREATE_USER_NO			
	     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM			
	     , TO_CHAR(MPIM.CREATE_DATE ,'YYYY-MM-DD')     AS CREATE_DATE			
	     , MPIM.DESCRIPTION			
    FROM   MOM_PURCHASE_INOUT_MST MPIM
         , MOM_PARTNER MP
	WHERE  MPIM.COMPANY_CD   = MP.COMPANY_CD
    AND    MPIM.DIVISION_CD  = MP.DIVISION_CD
    AND    MPIM.VENDOR_CD    = MP.PARTNER_CD	
	AND    MPIM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}			
    AND    MPIM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}		
    AND    MPIM.CREATE_DATE  BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999 					
    <if test="returnNo != null and returnNo != ''">
    AND    (UPPER(MPIM.INOUT_NO) LIKE '%' || UPPER(#{returnNo, jdbcType=VARCHAR}) || '%')	  
    </if>			
    <if test="partnerCdNm != null and partnerCdNm != ''">
	AND    (UPPER(MPIM.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
	</if>		
    <if test="returnTitle != null and returnTitle != ''">
    AND    (UPPER(MPIM.TITLE) LIKE '%' || UPPER(#{returnTitle, jdbcType=VARCHAR}) || '%')	  
    </if>	
    <if test="ioType != null and ioType != ''">
    AND    MPIM.IO_TYPE = #{ioType, jdbcType=VARCHAR}
    </if>	
    <if test="iqcFlag != null and iqcFlag != ''">
    AND    MPIM.IO_TYPE = #{iqcFlag, jdbcType=VARCHAR}
    </if>			
	AND    MPIM.STATE       = 'PIG'  -- 등록 			
	AND    MPIM.INOUT_TYPE  = 'TD'   			
	ORDER BY MPIM.INOUT_NO			
    </select>
	<select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT MPID.COMPANY_CD
	         , MPID.DIVISION_CD
	         , MPID.INOUT_NO           AS RETURN_NO
	         , MPID.SEQ
	         , MPID.PURCHASE_ORDER_ID  AS RETURN_REFERENCE_NO		
	         , MPID.ITEM_ID
	         , MI.ITEM_NM
	         , MI.ITEM_SPEC 
	         , MI.ITEM_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
	         , MI.PURCHASE_UNIT
	         , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MI.PURCHASE_UNIT) FROM DUAL) AS PURCHASE_UNIT_NM
	         , MPID.INOUT_QTY        AS RETURN_REQUEST_QTY
	         , MPID.UNIT_PRICE
	         , MPID.AMOUNT
	         , MPID.LOCAL_AMOUNT
	         , MPID.DESCRIPTION
	         , MPID.PURCHASE_INOUT_ID  AS RETURN_INOUT_ID
	         , ROWIDTOCHAR(MPID.ROWID) AS KEY_ID	
	    FROM   MOM_PURCHASE_INOUT_DTL MPID
	         , MOM_ITEM MI
	    WHERE  MPID.COMPANY_CD  = MI.COMPANY_CD
	    AND    MPID.DIVISION_CD = MI.DIVISION_CD
	    AND    MPID.ITEM_ID     = MI.ITEM_ID
	    AND    MPID.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    MPID.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    MPID.INOUT_NO    = #{returnNo, jdbcType=VARCHAR}
	    ORDER BY MPID.INOUT_NO 
	           , MPID.SEQ
    </select>
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_PI_CONFIRM
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
            (    COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
            AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
            AND  INOUT_TYPE  = 'TD'
            AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
            </foreach>
        </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PI_CONFIRM( COMPANY_CD
	                            , DIVISION_CD
	                            , INOUT_TYPE
	                            , INOUT_NO
	                            , IQC_FLAG
	                            , DEPARTURE_DATE
	                            , DESCRIPTION
	                            , VAL_MSG
	                            , MULTI_MSG
	                            , CREATE_BY
	                            , CREATE_DATE )
        VALUES                  ( #{item.companyCd, jdbcType=VARCHAR}
	                            , #{item.divisionCd, jdbcType=VARCHAR}
	                            , 'TD'
	                            , #{item.returnNo, jdbcType=VARCHAR}
	                            , #{item.iqcFlag, jdbcType=VARCHAR}
	                            , ''
	                            , #{item.description, jdbcType=VARCHAR}
	                            , #{item.valMsg, jdbcType=VARCHAR}
	                            , #{item.multiMsg, jdbcType=VARCHAR}
	                            , #{item.userId, jdbcType=VARCHAR}
	                            , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
	                            )
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
	    { CALL MOM_MATERIAL_PKG.SP_PI_CONFIRM( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
		                                     , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
		                                     , #{companyCd,   jdbcType=VARCHAR , mode=IN}
		                                     , #{divisionCd,  jdbcType=VARCHAR, mode=IN}    
		                                     , 'TD'                   
		                                     , #{userId,      jdbcType=VARCHAR, mode=IN} )}                   
    </select>   
</mapper>