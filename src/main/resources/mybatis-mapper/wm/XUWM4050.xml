<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWM4050">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MLM.COMPANY_CD
					     , MLM.DIVISION_CD
					     , MLM.EXEC_TASK_ID         AS PICKING_ID
					     , MLM.LOCATION_CD          AS PICKING_LOCATION_CD
					     , ML.LOCATION_NM           AS PICKING_LOCATION_NM
					     , MLM.AREA_CD
					     , MA.AREA_NM
					     , MLM.LOGISTICS_UNIT_CD
					     , MLM.RECEIPT_TYPE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_RECEIPT_TYPE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.RECEIPT_TYPE_CD) FROM DUAL)  AS RECEIPT_TYPE_NM
					     , MLM.PICKING_GROUP_NO      AS ITEM_ID
					     , MI.ITEM_NM
					     , MI.ITEM_SPEC
						 , MI.ITEM_TYPE
						 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM 
					     , MLM.DESCRIPTION
					     , MLM.UPDATE_BY             AS UPDATE_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
					     , TO_CHAR(MLM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
					     , MLM.CONFIRM_USER_NO              
	                     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
	                     , TO_CHAR(MLM.CONFIRM_DATE  ,'YYYY-MM-DD') AS CONFIRM_DATE
					     , ROWIDTOCHAR(MLM.ROWID)            AS KEY_ID
						 , COUNT(*) OVER()   AS TOTAL_COUNT
						 , ROW_NUMBER() OVER(PARTITION BY MLM.COMPANY_CD,MLM.DIVISION_CD ORDER BY MLM.EXEC_TASK_ID) AS ROW_CNT
					FROM   MOM_LOCATION_EXEC_TASK_MST MLM
					     , MOM_LOCATION ML
					     , MOM_AREA     MA
					     , MOM_ITEM     MI
					WHERE  MLM.COMPANY_CD         = ML.COMPANY_CD
					AND    MLM.DIVISION_CD        = ML.DIVISION_CD
					AND    MLM.LOCATION_CD        = ML.LOCATION_CD
					AND    MLM.COMPANY_CD         = MA.COMPANY_CD
					AND    MLM.DIVISION_CD        = MA.DIVISION_CD
					AND    MLM.AREA_CD            = MA.AREA_CD
					AND    MLM.COMPANY_CD         = MI.COMPANY_CD
					AND    MLM.DIVISION_CD        = MI.DIVISION_CD
					AND    MLM.PICKING_GROUP_NO   = MI.ITEM_ID 
					AND    MLM.COMPANY_CD         = #{companyCd, jdbcType=VARCHAR}
					AND    MLM.DIVISION_CD        = #{divisionCd, jdbcType=VARCHAR}
					AND    MLM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999 
					AND    MLM.EXEC_TASK_TYPE     = 'P'
					AND    MLM.PICKING_GROUP_UNIT = 'I'
					AND    EXISTS ( SELECT '*'
					                FROM   MOM_LOCATION_EXEC_TASK_DTL MLD
					                WHERE  MLD.COMPANY_CD   = MLM.COMPANY_CD
					                AND    MLD.DIVISION_CD  = MLM.DIVISION_CD
					                AND    MLD.EXEC_TASK_ID = MLM.EXEC_TASK_ID   
					                AND    MLD.STATE        = 'LEF' )		
					<if test="pickingId != null and pickingId != ''">
					AND    (UPPER(MLM.EXEC_TASK_ID) LIKE '%' || UPPER(#{pickingId, jdbcType=VARCHAR}) || '%')    
					</if>
					<if test="pickingLocationCdNm != null and pickingLocationCdNm != ''">
					AND    (UPPER(MLM.LOCATION_CD) LIKE '%' || UPPER(#{pickingLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(ML.LOCATION_NM) LIKE '%' || UPPER(#{pickingLocationCdNm, jdbcType=VARCHAR}) || '%')    
					</if>  
					<if test="pickingAreaCdNm != null and pickingAreaCdNm != ''">
					AND    (UPPER(MLM.AREA_CD) LIKE '%' || UPPER(#{pickingAreaCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MA.AREA_NM) LIKE '%' || UPPER(#{pickingAreaCdNm, jdbcType=VARCHAR}) || '%')    
					</if>  
					<if test="receiptTypeCd != null and receiptTypeCd != ''">
					AND    MLM.RECEIPT_TYPE_CD  = #{receiptTypeCd, jdbcType=VARCHAR}
					</if> 
					<if test="itemIdNm != null and itemIdNm != ''">
					AND     (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')    
					</if>
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select>   
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MLD.EXEC_TASK_ID   AS PICKING_ID
		     , MLD.SEQ
		     , MLD.ITEM_ID
		     , MLD.UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UNIT) FROM DUAL) AS UNIT_NM
		     , MLD.QTY      AS PICKING_QTY
		     , ''           AS PICKING_RESULT_QTY
		     , MLD.QTY - NVL(MLD.CLOSE_QTY,0)   AS REMAIN_QTY 
		     , MLD.REFERENCE_NO      AS RECEIPT_ID
			 , MLD.REFERENCE_DTL_NO  AS RECEIPT_DETAIL_ID 
		     , MLM.LOCATION_CD		 AS PICKING_LOCATION_CD
		     , MLM.AREA_CD	         AS TO_AREA_CD
		     , MLM.LOGISTICS_UNIT_CD AS TO_LOGISTICS_UNIT_CD
		     , MLD.EXEC_TASK_DTL_ID  AS PICKING_DETAIL_ID
		     , MLD.DESCRIPTION
			 , MLD.UPDATE_BY          AS UPDATE_USER_NO
			 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
			 , TO_CHAR(MLD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
			 , ROWIDTOCHAR(MLD.ROWID)                            AS KEY_ID
		FROM   MOM_LOCATION_EXEC_TASK_MST MLM 
		     , MOM_LOCATION_EXEC_TASK_DTL MLD
		WHERE  MLM.COMPANY_CD   = MLD.COMPANY_CD
		AND    MLM.DIVISION_CD  = MLD.DIVISION_CD
		AND    MLM.EXEC_TASK_ID = MLD.EXEC_TASK_ID   
		AND    MLD.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
		AND    MLD.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
		AND    MLD.EXEC_TASK_ID  = #{pickingId, jdbcType=VARCHAR}     
		AND    MLD.STATE        = 'LEF'
		ORDER BY MLD.EXEC_TASK_ID 
		       , MLD.SEQ 
	</select> 
	<select id="get_findBtn3" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MIS.COMPANY_CD
		     , MIS.DIVISION_CD
		     , MIS.LOCATION_CD  
		     , MIS.AREA_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_AREA_NAME(MIS.COMPANY_CD, MIS.DIVISION_CD, MIS.AREA_CD) FROM DUAL) AS AREA_NM
		     , MIS.LOGISTICS_UNIT_CD
		     , MIS.ITEM_ID
		     , MIS.STOCK_QTY
		     , ROWIDTOCHAR(MIS.ROWID)    AS KEY_ID
		FROM   MOM_AREA_ITEM_STOCK MIS
		WHERE  MIS.COMPANY_CD         =  #{companyCd, jdbcType=VARCHAR}
		AND    MIS.DIVISION_CD        =  #{divisionCd, jdbcType=VARCHAR}
		AND    MIS.LOCATION_CD        =  #{toPickingLocationCd, jdbcType=VARCHAR}
		AND    MIS.ITEM_ID            =  #{itemId, jdbcType=VARCHAR}     
		AND    MIS.AREA_CD            != #{toAreaCd, jdbcType=VARCHAR}     
		AND    MIS.LOGISTICS_UNIT_CD  != #{toLogisticsUnitCd, jdbcType=VARCHAR}     
		AND    MIS.STOCK_QTY > 0
		ORDER BY MIS.STOCK_QTY
	</select> 
	<delete id="remove_createBtn2" parameterType="java.util.List">
        DELETE FROM MOM_PROC_EXEC_TASK_RESULT 
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD     = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD    = #{item.divisionCd, jdbcType=VARCHAR}
               AND  EXEC_TASK_TYPE = 'P'
               AND  CREATE_BY      = #{item.userId, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>  
    <insert id="create_createBtn2" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_EXEC_TASK_RESULT( COMPANY_CD
	                                  , DIVISION_CD
	                                  , EXEC_TASK_TYPE 
                                      , EXEC_TASK_ID 
                                      , EXEC_TASK_DTL_ID  
	                                  , TRANSFER_UNIT 
	                                  , LOCATION_CD  
	                                  , TO_AREA_CD 
	                                  , TO_LOGISTICS_UNIT_CD 
	                                  , FROM_AREA_CD 
	                                  , FROM_LOGISTICS_UNIT_CD 
	                                  , ITEM_ID 
	                                  , UNIT
	                                  , QTY 
	                                  , DESCRIPTION
	                                  , VAL_MSG
	                                  , MULTI_MSG
	                                  , CREATE_BY
	                                  , CREATE_DATE
	                                  )
        VALUES                        ( #{item.companyCd, jdbcType=VARCHAR}
	                                  , #{item.divisionCd, jdbcType=VARCHAR}
	                                  , 'P'
	                                  , #{item.pickingId, jdbcType=VARCHAR}
	                                  , #{item.pickingDetailId, jdbcType=VARCHAR}
	                                  , #{item.pickingTransferUnit, jdbcType=VARCHAR}     
	                                  , #{item.locationCd, jdbcType=VARCHAR}
	                                  , #{item.toAreaCd, jdbcType=VARCHAR}
	                                  , #{item.toLogisticsUnitCd, jdbcType=VARCHAR}
	                                  , #{item.fromAreaCd, jdbcType=VARCHAR}
	                                  , #{item.fromLogisticsUnitCd, jdbcType=VARCHAR}
	                                  , #{item.itemId, jdbcType=VARCHAR}
	                                  , #{item.unit, jdbcType=VARCHAR}
	                                  , #{item.pickingQty, jdbcType=NUMERIC}
	                                  , #{item.description, jdbcType=VARCHAR}
	                                  , #{item.valMsg, jdbcType=VARCHAR}
	                                  , #{item.multiMsg, jdbcType=VARCHAR}
	                                  , #{item.userId, jdbcType=VARCHAR}
	                                  , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
	                                  )     
        </foreach>
    </insert>
    <select id="proc_createBtn2" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_WMS_PKG.SP_LOCATION_EXEC_TASK_RESULT( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                       , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                       , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                               		   , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                               		   , 'P'
                                                       , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>     
         
</mapper>     