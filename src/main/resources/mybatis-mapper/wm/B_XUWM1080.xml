<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.B_XUWM1080">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MDR.*
					     , MHR.WAREHOUSE_NM     AS REQUEST_WAREHOUSE_NM                            
					     , MHI.WAREHOUSE_NM     AS ISSUE_WAREHOUSE_NM
					     , MP.PARTNER_NM     	AS CUSTOMER_NM
					     , MI.ITEM_NM
					     , MI.ITEM_SPEC
					     , MI.ITEM_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,  MI.DIVISION_CD,  'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MDR.COMPANY_CD, MDR.DIVISION_CD, MDR.FORWARDER_CD) FROM DUAL) AS FORWARDER_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_LOGISTICS_RESOURCE_NAME(MDR.COMPANY_CD, MDR.DIVISION_CD, MDR.LOGISTICS_RESOURCE_CD) FROM DUAL) AS LOGISTICS_RESOURCE_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDR.COMPANY_CD, MDR.DIVISION_CD, 'IC0002', MDR.MAIN_STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS MAIN_STATE_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDR.COMPANY_CD, MDR.DIVISION_CD, 'IC0003', MDR.DTL_STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS DTL_STATE_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MDR.COMPANY_CD, MDR.DIVISION_CD, MDR.DELIVERY_UOM ) FROM DUAL) AS DELIVERY_UOM_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MDR.COMPANY_CD, MDR.DIVISION_CD, MDR.CONVERSION_UOM ) FROM DUAL) AS CONVERSION_UOM_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDR.COMPANY_CD, MDR.DIVISION_CD, 'SM0017', MDR.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM    
					     , (MDR.DELIVERY_REQUEST_ID)            AS KEY_ID
					     , COUNT(*) OVER()                    AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MDR.COMPANY_CD,MDR.DIVISION_CD ORDER BY MDR.DELIVERY_REQUEST_ID) AS ROW_CNT
					FROM   MOM_DELIVERY_REQUEST_V MDR
					     , MOM_WAREHOUSE MHI
                         , MOM_WAREHOUSE MHR
					     , MOM_PARTNER  MP
					     , MOM_ITEM     MI
					WHERE  MDR.COMPANY_CD           = MHI.COMPANY_CD(+)
	                AND    MDR.DIVISION_CD          = MHI.DIVISION_CD(+)
	                AND    MDR.ISSUE_WAREHOUSE_CD   = MHI.WAREHOUSE_CD(+)
	                AND    MDR.COMPANY_CD           = MHR.COMPANY_CD(+)
	                AND    MDR.DIVISION_CD          = MHR.DIVISION_CD(+)
	                AND    MDR.REQUEST_WAREHOUSE_CD = MHR.WAREHOUSE_CD(+)
					AND    MDR.COMPANY_CD           = MP.COMPANY_CD(+)
					AND    MDR.DIVISION_CD          = MP.DIVISION_CD(+)
					AND    MDR.CUSTOMER_CD          = MP.PARTNER_CD(+)
					AND    MDR.COMPANY_CD           = MI.COMPANY_CD
					AND    MDR.DIVISION_CD          = MI.DIVISION_CD
					AND    MDR.ITEM_ID              = MI.ITEM_ID   
					AND    MDR.COMPANY_CD           = #{companyCd, jdbcType=VARCHAR}
					AND    MDR.DIVISION_CD          = #{divisionCd, jdbcType=VARCHAR}
					AND    MDR.CREATE_DATE  BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					AND    MDR.DTL_STATE            = 'DRF'
					AND    MDR.REMAIN_QTY           > 0
					<if test="drNo != null and drNo != ''">
					AND    (UPPER(MDR.DR_NO) LIKE '%' || UPPER(#{drNo, jdbcType=VARCHAR}) || '%')   
					</if>
					<if test="customerCdNm != null and customerCdNm != ''">
					AND    (UPPER(MDR.CUSTOMER_CD) LIKE '%' || UPPER(#{customerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{customerCdNm, jdbcType=VARCHAR}) || '%')   
					</if> 
					<if test="requestWarehouseCdNm != null and requestWarehouseCdNm != ''">
					AND    (UPPER(MDR.REQUEST_WAREHOUSE_CD) LIKE '%' || UPPER(#{requestWarehouseCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MHR.WAREHOUSE_NM) LIKE '%' || UPPER(#{requestWarehouseCdNm, jdbcType=VARCHAR}) || '%')   
					</if> 
					<if test="processCd != null and processCd != ''">
					AND    MDR.PROCESS_CD  = #{processCd, jdbcType=VARCHAR}
					</if>
					AND    EXISTS ( SELECT '*'
				                    FROM   MOM_PROCESS_TYPE MPT
				                    WHERE  MPT.COMPANY_CD     = MDR.COMPANY_CD
				                    AND    MPT.DIVISION_CD    = MDR.DIVISION_CD
				                    AND    MPT.PROCESS_TYPE   = MDR.PROCESS_TYPE
				                    AND    MPT.ACTION_TYPE_CD = 'S'
				                    AND    MPT.USE_YN 	      = 'Y' )  							
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select>
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_DR_CLOSE
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
               AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_DR_CLOSE( COMPANY_CD
                              , DIVISION_CD
                              , DR_NO
                              , DELIVERY_REQUEST_ID 
                              , DESCRIPTION
                              , VAL_MSG
                              , MULTI_MSG
                              , CREATE_BY
                              , CREATE_DATE
                              )
        VALUES                ( #{item.companyCd, jdbcType=VARCHAR}
                              , #{item.divisionCd, jdbcType=VARCHAR}
                              , #{item.drNo, jdbcType=VARCHAR}
                              , #{item.deliveryRequestId, jdbcType=VARCHAR}
                              , #{item.description, jdbcType=VARCHAR}
                              , #{item.valMsg, jdbcType=VARCHAR}
                              , #{item.multiMsg, jdbcType=VARCHAR}
                              , #{item.userId, jdbcType=VARCHAR}
                              , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                              )     
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_STOCK_PKG.SP_DR_CLOSE( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                        , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                        , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                        , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                        , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>        
</mapper>     