<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWM6030">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MEM.COMPANY_CD
	                     , MEM.DIVISION_CD
	                     , MEM.EXEC_TASK_ID      AS UNLOADING_ID
	                     , MEM.STATE  
	                     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MEM.COMPANY_CD, MEM.DIVISION_CD, 'WM0007', MEM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
	                     , MEM.LOCATION_CD  AS UNLOADING_LOCATION_CD
	                     , ML.LOCATION_NM   AS UNLOADING_LOCATION_NM
	                     , MEM.AREA_CD
	                     , (SELECT MOM_COMMON_PKG.FN_GET_AREA_NAME(MEM.COMPANY_CD, MEM.DIVISION_CD, MEM.AREA_CD) FROM DUAL) AS AREA_NM
	                     , MEM.LOGISTICS_UNIT_CD
	                     , MEM.RECEIPT_TYPE_CD
	                     , (SELECT MOM_COMMON_PKG.FN_GET_RECEIPT_TYPE_NAME(MEM.COMPANY_CD, MEM.DIVISION_CD, MEM .RECEIPT_TYPE_CD) FROM DUAL)  AS RECEIPT_TYPE_NM
	                     , MEM.DESCRIPTION
	                     , MEM.CONFIRM_USER_NO              
	                     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MEM.COMPANY_CD, MEM .DIVISION_CD, MEM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
	                     , TO_CHAR(MEM.CONFIRM_DATE  ,'YYYY-MM-DD') AS CONFIRM_DATE
	                     , MEM.UPDATE_BY             AS UPDATE_USER_NO
	                     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MEM.COMPANY_CD, MEM .DIVISION_CD, MEM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
	                     , TO_CHAR(MEM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
	                     , ROWIDTOCHAR(MEM.ROWID)            AS KEY_ID
	                     , COUNT(*) OVER()   AS TOTAL_COUNT
	                     , ROW_NUMBER() OVER(PARTITION BY MEM.COMPANY_CD,MEM.DIVISION_CD ORDER BY MEM.EXEC_TASK_ID) AS ROW_CNT
	                FROM   MOM_LOCATION_EXEC_TASK_MST MEM    
	                     , MOM_LOCATION ML       
	                WHERE  MEM.COMPANY_CD   = ML.COMPANY_CD
	                AND    MEM.DIVISION_CD  = ML.DIVISION_CD
	                AND    MEM.LOCATION_CD  = ML.LOCATION_CD     
	                AND    MEM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
	                AND    MEM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}  
	                AND    MEM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
	                AND    MEM.STATE           = 'LEF'
	                AND    MEM.EXEC_TASK_TYPE  = 'U'  
                    AND    NOT EXISTS ( SELECT '*'
						                FROM   MOM_LOCATION_EXEC_TASK_DTL MLD
						                WHERE  MLD.COMPANY_CD   = MEM.COMPANY_CD
						                AND    MLD.DIVISION_CD  = MEM.DIVISION_CD
						                AND    MLD.EXEC_TASK_ID = MEM.EXEC_TASK_ID   
						                AND    MLD.STATE        != 'LEF' )	           
	                <if test="unloadingId != null and unloadingId != ''">
	                AND    (UPPER(MEM.EXEC_TASK_ID) LIKE '%' || UPPER(#{unloadingId, jdbcType=VARCHAR}) || '%')    
	                </if>
	                <if test="receiptTypeCd != null and receiptTypeCd != ''">
	                AND    MEM.RECEIPT_TYPE_CD  = #{receiptTypeCd, jdbcType=VARCHAR}
	                </if>   
	                <if test="unloadingLocationCdNm != null and unloadingLocationCdNm != ''">
	                AND    (UPPER(MEM.LOCATION_CD) LIKE '%' || UPPER(#{unloadingLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(ML.LOCATION_NM) LIKE '%' || UPPER(#{unloadingLocationCdNm, jdbcType=VARCHAR}) || '%')    
	                </if> 
		        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		       </if>               
    </select> 
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MED.COMPANY_CD
		     , MED.DIVISION_CD
		     , MED.EXEC_TASK_ID        AS UNLOADING_ID
		     , MED.SEQ
		     , MED.EXEC_TASK_DTL_ID    AS UNLOADING_DETAIL_ID 
		     , MED.STATE
		     , MED.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_SPEC
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , MED.UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MED.COMPANY_CD, MED.DIVISION_CD, MED.UNIT) FROM DUAL) AS UNIT_NM
		     , MED.QTY               AS UNLOADING_QTY
		     , MED.REFERENCE_NO      AS RECEIPT_ID
		     , MED.REFERENCE_DTL_NO  AS RECEIPT_DETAIL_ID
		     , MED.DESCRIPTION
		     , MED.UPDATE_BY      AS UPDATE_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MED.COMPANY_CD, MED.DIVISION_CD, MED.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		     , TO_CHAR(MED.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , ROWIDTOCHAR(MED.ROWID)            AS KEY_ID
		FROM   MOM_LOCATION_EXEC_TASK_DTL MED
		     , MOM_ITEM MI 
		WHERE  MED.COMPANY_CD   = MI.COMPANY_CD
		AND    MED.DIVISION_CD  = MI.DIVISION_CD
		AND    MED.ITEM_ID      = MI.ITEM_ID   
		AND    MED.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
		AND    MED.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}
		AND    MED.EXEC_TASK_ID = #{unloadingId, jdbcType=VARCHAR}         
	</select>  
    <delete id="remove_createBtn1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_LE_CONFIRM_CANCEL
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD      = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD     = #{item.divisionCd, jdbcType=VARCHAR}
               AND  EXEC_TASK_TYPE  = 'U'
               AND  CREATE_BY       = #{item.userId, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_LE_CONFIRM_CANCEL( COMPANY_CD
		                                , DIVISION_CD
		                                , EXEC_TASK_TYPE   
                                        , EXEC_TASK_ID
		                                , DESCRIPTION
		                                , VAL_MSG
		                                , MULTI_MSG
		                                , CREATE_BY
		                                , CREATE_DATE
		                                )
        VALUES                          ( #{item.companyCd, jdbcType=VARCHAR}
		                                , #{item.divisionCd, jdbcType=VARCHAR}
		                                , 'U'
                                        , #{item.unloadingId, jdbcType=VARCHAR}
		                                , #{item.description, jdbcType=VARCHAR}
		                                , #{item.valMsg, jdbcType=VARCHAR}
		                                , #{item.multiMsg, jdbcType=VARCHAR}
		                                , #{item.userId, jdbcType=VARCHAR}
		                                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                                )     
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_WMS_PKG.SP_LOCATION_EXEC_CONFIRM_CANCEL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
					                                      , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
					                                      , #{companyCd,   jdbcType=VARCHAR, mode=IN}
					                                      , #{divisionCd,  jdbcType=VARCHAR, mode=IN}
					                                      , 'U' 
					                                      , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select> 
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_LOCATION_EXEC_STATE
            <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
            (     COMPANY_CD         = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD        = #{item.divisionCd, jdbcType=VARCHAR}
             AND  EXEC_TASK_TYPE     = 'U'
             AND  ACTION_TYPE        = 'S'
             AND  CREATE_BY          = #{item.userId, jdbcType=VARCHAR}
            )
            </foreach>
            </where>
    </delete>  
  <insert id="create_customBtn1-1" parameterType="java.util.List">
      <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
      INTO MOM_PROC_LOCATION_EXEC_STATE( COMPANY_CD
                                       , DIVISION_CD
                                       , EXEC_TASK_TYPE
                                       , EXEC_TASK_ID
                                       , LOGISTICS_UNIT_CD
                                       , ACTION_TYPE
                                       , DESCRIPTION
                                       , VAL_MSG
                                       , MULTI_MSG
                                       , CREATE_BY
                                       , CREATE_DATE
                                       )
        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}  
                                       , #{item.divisionCd, jdbcType=VARCHAR}   
                                       , 'U'
                                       , #{item.unloadingId, jdbcType=VARCHAR}
                                       , #{item.logisticsUnitCd, jdbcType=VARCHAR}
                                       , 'S'
                                       , #{item.description, jdbcType=VARCHAR}
                                       , #{item.valMsg, jdbcType=VARCHAR}
                                       , #{item.multiMsg, jdbcType=VARCHAR}
                                       , #{item.userId, jdbcType=VARCHAR}
                                       , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                       )
      </foreach>
  </insert>
  <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
      { CALL MOM_WMS_PKG.SP_LOCATION_EXEC_STATE_CHANGE( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                      , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                      , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                      , #{divisionCd,  jdbcType=VARCHAR, mode=IN}    
                                                      , 'U'
                                                      , 'S'
                                                      , #{userId,      jdbcType=VARCHAR, mode=IN} )}                            
  </select>     
</mapper>    