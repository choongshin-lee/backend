<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWM1050">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MDM.COMPANY_CD
		                 , MDM.DIVISION_CD
		                 , MDM.DR_NO
		                 , MDM.DR_NM
		                 , MDM.PROCESS_CD
		                 , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.PROCESS_CD) FROM DUAL)  AS PROCESS_NM
		                 , MDM.REQUEST_LOCATION_CD
		                 , ML.LOCATION_NM           AS REQUEST_LOCATION_NM
		                 , MDM.CUSTOMER_CD
		                 , MP.PARTNER_NM            AS CUSTOMER_NM
		                 , MDM.FORWARDER_CD
		                 , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.FORWARDER_CD) FROM DUAL) AS FORWARDER_NM
		                 , MDM.DERIVERY_TO_ADRESS
		                 , MDM.LOGISTICS_RESOURCE_CD
		                 , (SELECT MOM_COMMON_PKG.FN_GET_LOGISTICS_RESOURCE_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.LOGISTICS_RESOURCE_CD) FROM DUAL) AS LOGISTICS_RESOURCE_NM
		                 , MDM.PARTIAL_SHIPMENT_YN
		                 , MDM.SHIPPING_MARK
		                 , MDM.NAME_PLATE
		                 , MDM.INSPECTION_REPORT_YN
		                 , MDM.TRANSIT_INSURANCE_YN
		                 , TO_CHAR(MDM.SHIPPING_DUE_DATE ,'YYYY-MM-DD') AS SHIPPING_DUE_DATE
		                 , MDM.STATE
		                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, 'WM0001', MDM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
		                 , MDM.DESCRIPTION
		                 , MDM.UPDATE_BY      AS UPDATE_USER_NO
		                 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		                 , TO_CHAR(MDM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		                 , TO_CHAR(MDM.CREATE_DATE ,'YYYY-MM-DD') AS CREATE_DATE
		                 , TO_CHAR(MDM.CONFIRM_DATE ,'YYYY-MM-DD') AS CONFIRM_DATE
		                 , MDM.CONFIRM_USER_NO
		                 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD,MDM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
		                 , ROWIDTOCHAR(MDM.ROWID)            AS KEY_ID
		                 , COUNT(*) OVER()   AS TOTAL_COUNT
		                 , ROW_NUMBER() OVER(PARTITION BY MDM.COMPANY_CD,MDM.DIVISION_CD ORDER BY MDM.DR_NO) AS ROW_CNT
		            FROM   MOM_DR_MST MDM
		                 , MOM_LOCATION ML
		                 , MOM_PARTNER MP
		            WHERE  MDM.COMPANY_CD          = ML.COMPANY_CD(+)
		            AND    MDM.DIVISION_CD         = ML.DIVISION_CD(+)
		            AND    MDM.REQUEST_LOCATION_CD = ML.LOCATION_CD(+)
		            AND    MDM.COMPANY_CD          = MP.COMPANY_CD(+)
		            AND    MDM.DIVISION_CD         = MP.DIVISION_CD(+)
		            AND    MDM.CUSTOMER_CD         = MP.PARTNER_CD(+)
		            AND    MDM.COMPANY_CD          = #{companyCd, jdbcType=VARCHAR}
		            AND    MDM.DIVISION_CD         = #{divisionCd, jdbcType=VARCHAR}
		            AND    MDM.STATE               = 'DRF'
					AND    MDM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
		            <if test="drNo != null and drNo != ''">
		            AND    (UPPER(MDM.DR_NO) LIKE '%' || UPPER(#{drNo, jdbcType=VARCHAR}) || '%')	  
		            </if>
		            <if test="customerNm != null and customerNm != ''">
		            AND    (UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{customerNm, jdbcType=VARCHAR}) || '%')	  
		            </if>	
		            <if test="locationNm != null and locationNm != ''">
		            AND    (UPPER(ML.LOCATION_NM)  LIKE '%' || UPPER(#{locationNm, jdbcType=VARCHAR}) ||   '%')	  
		            </if>	
		            <if test="processCd != null and processCd != ''">
					AND    MDM.PROCESS_CD  = #{processCd, jdbcType=VARCHAR}
					</if>    
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select>   
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT MDD.COMPANY_CD
             , MDD.DIVISION_CD
             , MDD.DR_NO
             , MDD.SEQ
             , MDD.ITEM_ID
             , MI.ITEM_NM
             , MI.ITEM_SPEC
             , MI.ITEM_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
             , MDD.REQUEST_QTY
             , MDD.UNIT 
             , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.UNIT ) FROM DUAL) AS UNIT_NM
             , MDD.LOCATION_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.LOCATION_CD) FROM DUAL) AS LOCATION_NM
             , MDD.LC_NO
             , MDD.TRACKING_NO
             , MDD.CARTON_NO
             , MDD.REFERENCE_NO
             , MDD.REFERENCE_DTL_NO
             , MDD.STATE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, 'WM0002', MDD.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
             , ROWIDTOCHAR(MDD.ROWID)            AS KEY_ID
             , MDD.DELIVERY_REQUEST_ID
             , MDD.DESCRIPTION
             , MDD.UPDATE_BY      AS UPDATE_USER_NO
             , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
             , TO_CHAR(MDD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
             , MDD.IO_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
        FROM   MOM_DR_DTL MDD
             , MOM_ITEM MI
        WHERE  MDD.COMPANY_CD   = MI.COMPANY_CD
        AND    MDD.DIVISION_CD  = MI.DIVISION_CD
	    AND    MDD.ITEM_ID      = MI.ITEM_ID
        AND    MDD.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
	    AND    MDD.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}
	    AND    MDD.DR_NO        = #{drNo, jdbcType=VARCHAR}  
    </select> 
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_DR_CONFIRM_CANCEL
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	          )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_DR_CONFIRM_CANCEL( COMPANY_CD
									   , DIVISION_CD
									   , DR_NO
									   , DESCRIPTION
									   , VAL_MSG
									   , MULTI_MSG
									   , CREATE_BY
									   , CREATE_DATE
		                               )
        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
		                               , #{item.divisionCd, jdbcType=VARCHAR}
		                               , #{item.drNo, jdbcType=VARCHAR}
		                               , #{item.description, jdbcType=VARCHAR}
		                               , #{item.valMsg, jdbcType=VARCHAR}
		                               , #{item.multiMsg, jdbcType=VARCHAR}
		                               , #{item.userId, jdbcType=VARCHAR}
		                               , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                               )     
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_STOCK_PKG.MOM_PROC_DR_CONFIRM_CANCEL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
			                                           , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
			                                           , #{companyCd,   jdbcType=VARCHAR, mode=IN}
			                                           , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
			                                           , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select> 
</mapper>     