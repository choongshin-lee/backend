<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWM4060">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
        FROM   (
        </if>
                SELECT MLM.COMPANY_CD
		             , MLM.DIVISION_CD
		             , MLM.EXEC_TASK_ID         AS PICKING_ID
		             , MLM.LOCATION_CD          AS PICKING_LOCATION_CD
		             , ML.LOCATION_NM           AS PICKING_LOCATION_NM
		             , MLM.AREA_CD
		             , MA.AREA_NM
		             , MLM.LOGISTICS_UNIT_CD
		             , MLM.RECEIPT_TYPE_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_RECEIPT_TYPE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.RECEIPT_TYPE_CD) FROM DUAL)  AS RECEIPT_TYPE_NM
		             , MLM.PICKING_GROUP_NO      AS RECEIPT_ID
		             , MLM.DESCRIPTION
		             , MLM.UPDATE_BY             AS UPDATE_USER_NO
		             , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		             , TO_CHAR(MLM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		             , MLM.CONFIRM_USER_NO              
		             , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
		             , TO_CHAR(MLM.CONFIRM_DATE  ,'YYYY-MM-DD') AS CONFIRM_DATE
		             , ROWIDTOCHAR(MLM.ROWID)            AS KEY_ID
		             , COUNT(*) OVER()   AS TOTAL_COUNT
		             , ROW_NUMBER() OVER(PARTITION BY MLM.COMPANY_CD,MLM.DIVISION_CD ORDER BY MLM.EXEC_TASK_ID) AS ROW_CNT
		          FROM   MOM_LOCATION_EXEC_TASK_MST MLM
		               , MOM_LOCATION ML
		               , MOM_AREA     MA
		          WHERE  MLM.COMPANY_CD         = ML.COMPANY_CD
		          AND    MLM.DIVISION_CD        = ML.DIVISION_CD
		          AND    MLM.LOCATION_CD        = ML.LOCATION_CD
		          AND    MLM.COMPANY_CD         = MA.COMPANY_CD
		          AND    MLM.DIVISION_CD        = MA.DIVISION_CD
		          AND    MLM.AREA_CD            = MA.AREA_CD
		          AND    MLM.COMPANY_CD         = #{companyCd, jdbcType=VARCHAR}
		          AND    MLM.DIVISION_CD        = #{divisionCd, jdbcType=VARCHAR}
		          AND    MLM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999 
		          AND    MLM.EXEC_TASK_TYPE     = 'P'
		          AND    MLM.PICKING_GROUP_UNIT = 'R'
		          AND    EXISTS ( SELECT '*'
		                          FROM   MOM_LOCATION_EXEC_TASK_DTL MLD
		                          WHERE  MLD.COMPANY_CD   = MLM.COMPANY_CD
		                          AND    MLD.DIVISION_CD  = MLM.DIVISION_CD
		                          AND    MLD.EXEC_TASK_ID = MLM.EXEC_TASK_ID   
		                          AND    MLD.STATE        = 'LEF' )   
		          <if test="pickingId != null and pickingId != ''">
		          AND    (UPPER(MLM.EXEC_TASK_ID) LIKE '%' || UPPER(#{pickingId, jdbcType=VARCHAR}) || '%')    
		          </if>
		          <if test="pickingLocationCdNm != null and pickingLocationCdNm != ''">
		          AND    (UPPER(MLM.LOCATION_CD) LIKE '%' || UPPER(#{pickingLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(ML.LOCATION_NM) LIKE '%' || UPPER(#{pickingLocationCdNm, jdbcType=VARCHAR}) || '%')    
		          </if>  
		          <if test="pickingAreaCdNm != null and pickingAreaCdNm != ''">
		          AND    (UPPER(MLM.AREA_CD) LIKE '%' || UPPER(#{pickingAreaCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MA.AREA_NM) LIKE '%' || UPPER(#{pickingAreaCdNm, jdbcType=VARCHAR}) || '%')    
		          </if>  
		          <if test="receiptTypeCd != null and receiptTypeCd != ''">
		          AND    MLM.RECEIPT_TYPE_CD  = #{receiptTypeCd, jdbcType=VARCHAR}
		          </if> 
		          <if test="receiptId != null and receiptId != ''">
		          AND     UPPER(MLM.PICKING_GROUP_NO) LIKE '%' || UPPER(#{receiptId, jdbcType=VARCHAR}) || '%')      
		          </if>
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
               ) A
            WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
    </if>               
    </select>   
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT MLD.EXEC_TASK_ID   AS PICKING_ID
	         , MLD.SEQ
	         , MLD.ITEM_ID
	         , MLD.UNIT
	         , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UNIT) FROM DUAL) AS UNIT_NM
	         , MLD.QTY      AS PICKING_QTY
	         , NVL(MLD.RESULT_QTY,0)           AS PICKING_RESULT_QTY
	         , NVL(MLD.CLOSE_QTY,0)           
	         , MLD.QTY - NVL(MLD.RESULT_QTY,0) - NVL(MLD.CLOSE_QTY,0)   AS REMAIN_QTY 
	         , MLD.REFERENCE_NO      AS RECEIPT_ID
	         , MLD.REFERENCE_DTL_NO  AS RECEIPT_DETAIL_ID 
	         , MLM.LOCATION_CD     AS PICKING_LOCATION_CD
	         , MLM.AREA_CD           AS TO_AREA_CD
	         , MLM.LOGISTICS_UNIT_CD AS TO_LOGISTICS_UNIT_CD
	         , MLD.EXEC_TASK_DTL_ID  AS PICKING_DETAIL_ID
	         , MLD.DESCRIPTION
	         , MLD.UPDATE_BY          AS UPDATE_USER_NO
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
	         , TO_CHAR(MLD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
	         , ROWIDTOCHAR(MLD.ROWID)                            AS KEY_ID
	         , MLM.COMPANY_CD
	         , MLM.DIVISION_CD
	    FROM   MOM_LOCATION_EXEC_TASK_MST MLM 
	         , MOM_LOCATION_EXEC_TASK_DTL MLD
	    WHERE  MLM.COMPANY_CD   = MLD.COMPANY_CD
	    AND    MLM.DIVISION_CD  = MLD.DIVISION_CD
	    AND    MLM.EXEC_TASK_ID = MLD.EXEC_TASK_ID   
	    AND    MLD.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
	    AND    MLD.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
	    AND    MLD.EXEC_TASK_ID  = #{pickingId, jdbcType=VARCHAR}     
	    AND    MLD.STATE        = 'LEF'
	    ORDER BY MLD.EXEC_TASK_ID 
	           , MLD.SEQ 
  </select> 
  <select id="get_findBtn3" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
      SELECT MLR.EXEC_RESULT_ID 
	       , MLR.EXEC_TASK_ID      AS PICKING_ID
	       , MLR.EXEC_TASK_DTL_ID  AS PICKING_DETAIL_ID   
	       , MLR.STATE
	       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLR.COMPANY_CD, MLR.DIVISION_CD, 'WM0010', MLR.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
	       , MLR.FROM_AREA_CD
	       , (SELECT MOM_COMMON_PKG.FN_GET_AREA_NAME(MLR.COMPANY_CD, MLR.DIVISION_CD, MLR.FROM_AREA_CD) FROM DUAL) AS FROM_AREA_NM
	       , MLR.FROM_LOGISTICS_UNIT_CD
	       , MLR.QTY                               AS PICKING_QTY
	       , TO_CHAR(MLR.RESULT_DATE,'YYYY-MM-DD') AS RESULT_DATE
	       , TO_CHAR(MLR.CANCEL_DATE,'YYYY-MM-DD') AS CANCEL_DATE
	       , MLR.CANCEL_USER_NO
	       , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLR.COMPANY_CD, MLR.DIVISION_CD, MLR.CANCEL_USER_NO) FROM DUAL ) AS CANCEL_USER_NM
	       , ROWIDTOCHAR(MLR.ROWID)
	       , MLR.COMPANY_CD
	       , MLR.DIVISION_CD   
	  FROM   MOM_LOCATION_EXEC_RESULT MLR
	  WHERE  MLR.COMPANY_CD         = #{companyCd, jdbcType=VARCHAR}
	  AND    MLR.DIVISION_CD        = #{divisionCd, jdbcType=VARCHAR}
	  AND    MLR.EXEC_TASK_DTL_ID   = #{pickingDetailId, jdbcType=VARCHAR}    
	  ORDER BY MLR.EXEC_RESULT_ID
  </select> 
</mapper>     