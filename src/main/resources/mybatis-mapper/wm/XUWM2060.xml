<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWM2060">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MLM.COMPANY_CD
					     , MLM.DIVISION_CD
					     , MLM.RECEIPT_ID 
					     , MLM.RECEIPT_NM
					     , MLM.LOCATION_CD  AS RECEIPT_LOCATION_CD
					     , ML.LOCATION_NM   AS RECEIPT_LOCATION_NM
					     , MLM.LOCATION_USER_NO  AS RECEIPT_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.LOCATION_USER_NO) FROM DUAL ) AS RECEIPT_USER_NM
					     , TO_CHAR(MLM.CONFIRM_DATE ,'YYYY-MM-DD') AS CONFIRM_DATE
					     , MLM.CONFIRM_USER_NO     
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
					     , MLM.PROCESS_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_TYPE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.PROCESS_TYPE) FROM DUAL)  AS PROCESS_TYPE_NM
					     , MLM.STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, 'WM0002', MLM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
					     , MLM.DESCRIPTION
					     , MLM.UPDATE_BY      AS UPDATE_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
					     , TO_CHAR(MLM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
					     , TO_CHAR(MLM.CREATE_DATE ,'YYYY-MM-DD') AS CREATE_DATE
					     , ROWIDTOCHAR(MLM.ROWID)            AS KEY_ID
					     , COUNT(*) OVER()   AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MLM.COMPANY_CD,MLM.DIVISION_CD ORDER BY MLM.RECEIPT_ID) AS ROW_CNT
					FROM   MOM_LOCATION_RECEIPT_MST MLM
					     , MOM_LOCATION ML
					WHERE  MLM.COMPANY_CD      = ML.COMPANY_CD(+)
					AND    MLM.DIVISION_CD     = ML.DIVISION_CD(+)
					AND    MLM.LOCATION_CD     = ML.LOCATION_CD(+)
					AND    MLM.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}
					AND    MLM.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}	
					AND    MLM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					AND    MLM.STATE           = 'LRF'
					AND    NOT EXISTS ( SELECT '*'
						                FROM   MOM_LOCATION_RECEIPT_DTL MLD
						                WHERE  MLD.COMPANY_CD  = MLM.COMPANY_CD
						                AND    MLD.DIVISION_CD = MLM.DIVISION_CD
						                AND    MLD.RECEIPT_ID  = MLM.RECEIPT_ID   
						                AND    MLD.STATE       != 'LRF' )			   
					<if test="processType != null and processType != ''">
					AND    MLM.PROCESS_TYPE  = #{processType, jdbcType=VARCHAR}
					</if>     
					<if test="receiptLocationCdNm != null and receiptLocationCdNm != ''">
					AND    (UPPER(MLM.LOCATION_CD) LIKE '%' || UPPER(#{receiptLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(ML.LOCATION_NM) LIKE '%' || UPPER(#{receiptLocationCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select> 
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MLD.COMPANY_CD
	         , MLD.DIVISION_CD
	         , MLD.RECEIPT_ID
	         , MLD.SEQ
	         , MLD.STATE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, 'WM0003', MLD.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
	         , MLD.IO_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
	         , MLD.ITEM_ID
	         , MI.ITEM_NM
	         , MI.ITEM_SPEC
	         , MI.ITEM_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
	         , MLD.UNIT
	         , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UNIT) FROM DUAL) AS UNIT_NM 
	         , MLD.RECEIPT_QTY
	         , MLD.REFERENCE_NO
	         , MLD.REFERENCE_DTL_NO
	         , MLD.RECEIPT_DETAIL_ID
	         , MLD.RCV_LOGISTIC_UNIT_ID
	         , MLD.DESCRIPTION
	         , MLD.UPDATE_BY      AS UPDATE_USER_NO
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
	         , TO_CHAR(MLD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
	         , ROWIDTOCHAR(MLD.ROWID)            AS KEY_ID
	    FROM   MOM_LOCATION_RECEIPT_DTL  MLD
	        ,  MOM_ITEM MI
	    WHERE  MLD.COMPANY_CD  = MI.COMPANY_CD
	    AND    MLD.DIVISION_CD = MI.DIVISION_CD
	    AND    MLD.ITEM_ID     = MI.ITEM_ID    
	    AND    MLD.COMPANY_CD  =  #{companyCd, jdbcType=VARCHAR}
	    AND    MLD.DIVISION_CD =  #{divisionCd, jdbcType=VARCHAR}
	    AND    MLD.RECEIPT_ID  = #{receiptId, jdbcType=VARCHAR} 
	</select>  
    <delete id="remove_createBtn1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_LR_CONFIRM_CANCEL
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
               AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_LR_CONFIRM_CANCEL( COMPANY_CD
		                               , DIVISION_CD
		                               , RECEIPT_ID
		                               , DESCRIPTION
		                               , VAL_MSG
		                               , MULTI_MSG
		                               , CREATE_BY
		                               , CREATE_DATE
		                               )
        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
                                       , #{item.divisionCd, jdbcType=VARCHAR}
                                       , #{item.receiptId, jdbcType=VARCHAR}
                                       , #{item.description, jdbcType=VARCHAR}
		                               , #{item.valMsg, jdbcType=VARCHAR}
		                               , #{item.multiMsg, jdbcType=VARCHAR}
		                               , #{item.userId, jdbcType=VARCHAR}
		                               , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                               )     
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_WMS_PKG.SP_LR_CONFIRM_CANCEL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
		                                       , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
		                                       , #{companyCd,   jdbcType=VARCHAR, mode=IN}
		                                       , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
		                                       , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>  
</mapper>    