<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWM4070">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MLM.COMPANY_CD
					     , MLM.DIVISION_CD
					     , MLM.PICKING_TYPE  
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, 'WM0009', MLM.PICKING_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PICKING_TYPE_NM  
					     , MLM.PICKING_ID
					     , MLM.PICKING_NM
					     , MLD.SEQ
					     , MLD.PICKING_DETAIL_ID
					     , MLM.LOCATION_CD    AS PICKING_LOCATION_CD
					     , ML.LOCATION_NM     AS PICKING_LOCATION_NM
					     , MLM.AREA_CD
                         , (SELECT MOM_COMMON_PKG.FN_GET_AREA_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.AREA_CD) FROM DUAL) AS AREA_NM
					     , MLM.PROCESS_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_TYPE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.PROCESS_TYPE) FROM DUAL)     AS PROCESS_TYPE_NM
					     , MLM.RECEIPT_TYPE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_RECEIPT_TYPE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.RECEIPT_TYPE_CD) FROM DUAL)  AS RECEIPT_TYPE_NM
					     , MLD.STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, 'WM0008', MLD.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM  
					     , MLD.ITEM_ID
					     , MI.ITEM_NM
						 , MI.ITEM_SPEC
					     , MI.ITEM_TYPE
						 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
						 , MLD.UNIT
						 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UNIT) FROM DUAL) AS UNIT_NM
					     , MLD.QTY               AS PICKING_QTY
					     , MLD.REFERENCE_NO      AS RECEIPT_ID
					     , MLD.REFERENCE_DTL_NO  AS RECEIPT_DETAIL_ID
					     , MLD.DESCRIPTION
					     , MLM.CONFIRM_DATE
					     , MLM.CONFIRM_USER_NO 
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
					     , MLD.UPDATE_BY                                                                                             AS UPDATE_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UPDATE_BY) FROM DUAL )       AS UPDATE_USER_NM
					     , TO_CHAR(MLD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS')                                                         AS UPDATE_DATE
					     , ROWIDTOCHAR(MLD.ROWID)            AS KEY_ID
					     , COUNT(*) OVER()   AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MLM.COMPANY_CD,MLM.DIVISION_CD ORDER BY MLM.PICKING_ID, MLD.SEQ) AS ROW_CNT
					FROM   MOM_LOCATION_PICKING_MST  MLM
					     , MOM_LOCATION_PICKING_DTL  MLD
					     , MOM_LOCATION ML
					     , MOM_ITEM MI
					WHERE  MLM.COMPANY_CD   = MLD.COMPANY_CD
					AND    MLM.DIVISION_CD  = MLD.DIVISION_CD
					AND    MLM.PICKING_ID   = MLD.PICKING_ID    
					AND    MLM.COMPANY_CD   = ML.COMPANY_CD
					AND    MLM.DIVISION_CD  = ML.DIVISION_CD
					AND    MLM.LOCATION_CD  = ML.LOCATION_CD
					AND    MLD.COMPANY_CD   = MI.COMPANY_CD
					AND    MLD.DIVISION_CD  = MI.DIVISION_CD
					AND    MLD.ITEM_ID      = MI.ITEM_ID   
					AND    MLM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
					AND    MLM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}  
					AND    MLM.CREATE_DATE  BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					<if test="pickingType != null and pickingType != ''">
					AND    MLM.PICKING_TYPE  = #{pickingType, jdbcType=VARCHAR}
					</if>  
					<if test="pickingId != null and pickingId != ''">
					AND    UPPER(MLM.PICKING_ID) LIKE '%' || UPPER(#{pickingId, jdbcType=VARCHAR}) || '%'    
					</if>
					<if test="pickingLocationCdNm != null and pickingLocationCdNm != ''">
					AND    (UPPER(MLM.LOCATION_CD) LIKE '%' || UPPER(#{pickingLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(ML.LOCATION_NM) LIKE '%' || UPPER(#{pickingLocationCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 	
					<if test="processType != null and processType != ''">
					AND    MLM.PROCESS_TYPE  = #{processType, jdbcType=VARCHAR}
					</if>   
					<if test="receiptTypeCd != null and receiptTypeCd != ''">
					AND    MLM.RECEIPT_TYPE_CD  = #{receiptTypeCd, jdbcType=VARCHAR}
					</if>   
					<if test="receiptId != null and receiptId != ''">
					AND    UPPER(MLD.REFERENCE_DTL_NO) LIKE '%' || UPPER(#{receiptId, jdbcType=VARCHAR}) || '%'    
					</if>
					 <if test="itemIdNm != null and itemIdNm != ''">
				    AND     (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
				    </if>
				    <if test="state != null and state != ''">
					AND    MLD.STATE   = #{state, jdbcType=VARCHAR}
					</if> 				
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select>   
</mapper>     