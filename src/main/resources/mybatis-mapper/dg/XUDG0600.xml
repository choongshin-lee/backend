<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUDG0600">
<select id="get_findBtn21" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
        FROM   (
    </if>
                SELECT MSM.COMPANY_CD
				     , MSM.DIVISION_CD
				     , MSM.SHIPPING_NO
				     , MSM.SHIPPING_NM
				     , MSD.SEQ
				     , MSD.SHIPPING_ORDER_ID
				     , MSM.CUSTOMER_CD
				     , MP.PARTNER_NM                 AS CUSTOMER_NM
				     , MSM.DESTINATION_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, MSM.DESTINATION_CD) FROM DUAL) AS DESTINATION_NM
				     , MSM.SHIPPING_WAREHOUSE_CD
				     , MWH.WAREHOUSE_NM               AS SHIPPING_WAREHOUSE_NM
				     , MSM.FORWARDER_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, MSM.FORWARDER_CD) FROM DUAL) AS FORWARDER_NM
				     , MSM.NOTIFY_PARTY_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, MSM.NOTIFY_PARTY_CD) FROM DUAL) AS NOTIFY_PARTY_NM
				     , MSM.INVOICE_NO
				     , TO_CHAR(MSM.INVOICE_DATE ,'YYYY-MM-DD')  AS INVOICE_DATE
				     , MSM.LC_NO
				     , TO_CHAR(MSM.LC_DATE ,'YYYY-MM-DD')    AS LC_DATE
				     , MSM.LC_ISSUING_BANK
				     , MSM.LOADING_PLACE_CD
				     , MSM.DESTINATION_PORT_CD
				     , MSM.DELIVERY_CONDITIONS
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, 'MM0007', MSM.DELIVERY_CONDITIONS, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS DELIVERY_CONDITIONS_NM
				     , MSM.PAYMENT_TERMS
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, 'MM0008', MSM.PAYMENT_TERMS, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PAYMENT_TERMS_NM
				     , MSM.SHIPPING_REMARK
				     , MSM.COMMODITY
				     , TO_CHAR(MSM.SHIPPING_DUE_DATE ,'YYYY-MM-DD')  AS SHIPPING_DUE_DATE
				     , MSM.CURRENCY_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, 'SM0017', MSM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
				     , MSM.EXCHANGE_RATE
				     , TO_CHAR(MSM.CONFIRM_DATE ,'YYYY-MM-DD')  AS CONFIRM_DATE
				     , MSM.CONFIRM_USER_NO
				     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, MSM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
				     , MSM.TAX_TYPE
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, 'SM0029', MSM.TAX_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS TAX_TYPE_NM
				     , MSD.ITEM_ID
				     , MI.ITEM_NM
				     , MI.ITEM_SPEC
				     , MI.ITEM_TYPE
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,  MI.DIVISION_CD,  'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
				     , MSD.SHIPPING_UOM
				     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MSD.COMPANY_CD, MSD.DIVISION_CD, MSD.SHIPPING_UOM ) FROM DUAL) AS SHIPPING_UOM_NM
				     , MSD.QTY    AS SHIPPING_QTY
				     , MSD.CONVERSION_UOM
				     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MSD.COMPANY_CD, MSD.DIVISION_CD, MSD.CONVERSION_UOM ) FROM DUAL) AS CONVERSION_UOM_NM
				     , MSD.CONVERSION_QTY
				     , NVL(MSD.RETURN_QTY, 0) AS RETURN_QTY
				     , MSD.UNIT_PRICE
				     , MSD.AMOUNT
				     , MSD.LOCAL_AMOUNT
				     , MSD.IO_TYPE
				     , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MSD.COMPANY_CD, MSD.DIVISION_CD, MSD.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
				     , MSD.REFERENCE_NO              
				     , MSD.REFERENCE_DTL_NO  
				     , MSM.PROCESS_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, MSM.PROCESS_CD) FROM DUAL)  AS PROCESS_NM    
				     , MSM.STATE
					 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, 'SC0001', MSM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
					 , MSM.UPDATE_BY          AS UPDATE_USER_NO
				     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MSM.COMPANY_CD, MSM.DIVISION_CD, MSM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
				     , TO_CHAR(MSM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
				     , TO_CHAR(MSM.CREATE_DATE ,'YYYY-MM-DD') AS CREATE_DATE
				     , MSD.DESCRIPTION
				     , ROWIDTOCHAR(MSD.ROWID)            AS KEY_ID
					 , COUNT(*) OVER()   AS TOTAL_COUNT
					 , ROW_NUMBER() OVER(PARTITION BY MSD.COMPANY_CD, MSD.DIVISION_CD ORDER BY MSD.SHIPPING_ORDER_ID) AS ROW_CNT
				FROM   MOM_SHIPPING_ORDER_MST MSM
				     , MOM_SHIPPING_ORDER_DTL MSD
				     , MOM_WAREHOUSE MWH
					 , MOM_PARTNER  MP
				     , MOM_ITEM     MI
				WHERE  MSM.COMPANY_CD            = MSD.COMPANY_CD
				AND    MSM.DIVISION_CD           = MSD.DIVISION_CD
				AND    MSM.SHIPPING_NO           = MSD.SHIPPING_NO   
				AND    MSM.COMPANY_CD            = MWH.COMPANY_CD
				AND    MSM.DIVISION_CD           = MWH.DIVISION_CD
				AND    MSM.SHIPPING_WAREHOUSE_CD = MWH.WAREHOUSE_CD
				AND    MSM.COMPANY_CD            = MP.COMPANY_CD
				AND    MSM.DIVISION_CD           = MP.DIVISION_CD
				AND    MSM.CUSTOMER_CD           = MP.PARTNER_CD
				AND    MSD.COMPANY_CD            = MI.COMPANY_CD
				AND    MSD.DIVISION_CD           = MI.DIVISION_CD
				AND    MSD.ITEM_ID               = MI.ITEM_ID   
				AND    MSM.COMPANY_CD            = #{companyCd, jdbcType=VARCHAR}
				AND    MSM.DIVISION_CD           = #{divisionCd, jdbcType=VARCHAR}  
				AND    MSM.PROCESS_CD		     = 'CR'  
				AND    MSM.STATE   	             = 'SHW'
				AND    MSM.CUSTOMER_CD	         = #{customerCd, jdbcType=VARCHAR}  
				AND    MSM.CURRENCY_CD	         = #{currencyCd, jdbcType=VARCHAR}  
				AND    MSD.QTY - NVL(MSD.RETURN_QTY, 0) > 0
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
               ) A
        WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
    </if> 
</select>  
    <delete id="remove_customBtn21-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_SHIP_ORDER_DTL
        <where>
	        <foreach collection="list" item="item" open="" close="" separator="OR">
	        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
               AND  PROCESS_CD  = 'RCR'
               AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	        )
	        </foreach>
        </where>
   </delete>  
   <insert id="create_customBtn21-1" parameterType="java.util.List">
       <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
	       INTO MOM_PROC_SHIP_ORDER_DTL( COMPANY_CD
			                           , DIVISION_CD
			                           , PROCESS_CD
			                           , SHIPPING_NO
			                           , SEQ
			                           , SHIPPING_ORDER_ID
			                           , ITEM_ID
			                           , SHIPPING_UOM
			                           , QTY
			                           , UNIT_PRICE
			                           , IO_TYPE
			                           , REFERENCE_NO
			                           , REFERENCE_DTL_NO
			                           , DESCRIPTION
			                           , DEL_YN
			                           , VAL_MSG
			                           , MULTI_MSG
			                           , CREATE_BY
			                           , CREATE_DATE
			                           )
           VALUES                      ( #{item.companyCd, jdbcType=VARCHAR}  
		                               , #{item.divisionCd, jdbcType=VARCHAR} 
		                               , 'RCR'        
		                               , #{item.shippingRetrunNo, jdbcType=VARCHAR}
		                               , NULL 
		                               , NULL
		                               , #{item.itemId, jdbcType=VARCHAR}
		                               , #{item.shippingUom, jdbcType=VARCHAR}
		                               , #{item.requestReturnQty, jdbcType=NUMERIC}
		                               , #{item.unitPrice, jdbcType=NUMERIC}
		                               , #{item.ioType, jdbcType=VARCHAR}
		                               , #{item.shippingNo, jdbcType=VARCHAR}
		                               , #{item.shippingOrderId, jdbcType=VARCHAR}
		                               , #{item.description, jdbcType=VARCHAR}
		                               , #{item.delYn, jdbcType=VARCHAR}
		                               , #{item.valMsg, jdbcType=VARCHAR}
		                               , #{item.multiMsg, jdbcType=VARCHAR}
		                               , #{item.userId, jdbcType=VARCHAR}
		                               , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                               )         
        </foreach>
    </insert>
    <select id="proc_customBtn21-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_SO_PKG.SP_UPSERT_SHIP_ORDER_DTL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                  , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                  , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                  , #{divisionCd,  jdbcType=VARCHAR, mode=IN}   
                                                  , 'RCR'                    
                                                  , #{userId,      jdbcType=VARCHAR, mode=IN} )}    
    </select>    
</mapper>    