<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUIC2070">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
        FROM   (
    </if>
                SELECT MDM.COMPANY_CD 
				     , MDM.DIVISION_CD
				     , MDM.DO_NO                    AS SHIPPING_REQUEST_NO
				     , MDM.DO_NM		            AS SHIPPING_REQUEST_NM	
				     , MDM.DO_NO                    AS SHIPPING_NO
				     , MDM.DO_NM                    AS SHIPPING_NM
				     , MDD.SEQ
				     , MDD.DELIVERY_ORDER_ID
				     , MDM.ISSUE_WAREHOUSE_CD
				     , MWH.WAREHOUSE_NM              AS ISSUE_WAREHOUSE_NM
				     , MDM.PARTNER_CD                
				     , MP.PARTNER_NM                
				     , MDD.ITEM_ID
				     , MI.ITEM_NM
				     , MI.ITEM_SPEC
				     , MI.ITEM_TYPE
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,  MI.DIVISION_CD,  'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
				     , (SELECT MOM_STOCK_PKG.FN_GET_ITEM_WH_AVAILABLE_QTY( MDM.COMPANY_CD, MDM.DIVISION_CD, MDD.ITEM_ID, MDM.ISSUE_WAREHOUSE_CD) FROM DUAL) AS AVAILABLE_QTY
                     , (SELECT MOM_STOCK_PKG.FN_GET_ITEM_WAREHOUSE_STOCK_QTY( MDM.COMPANY_CD, MDM.DIVISION_CD, MDD.ITEM_ID, MDM.ISSUE_WAREHOUSE_CD) FROM DUAL) AS CURRENT_STOCK_QTY
				     , MDD.QTY                               AS SHIPPING_REQUEST_QTY
				     , DECODE(MDM.STATE, 'DO', MDD.QTY, 0 )  AS SHIPPING_QTY
				     , MDD.DO_UOM                    AS SHIPPING_UOM 
				     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.DO_UOM ) FROM DUAL) AS SHIPPING_UOM_NM
				     , MDD.CONVERSION_UOM
				     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.CONVERSION_UOM ) FROM DUAL) AS CONVERSION_UOM_NM
				     , MDM.CURRENCY_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, 'SM0017', MDM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
				     , MDM.EXCHANGE_RATE
				     , MDD.UNIT_PRICE
				     , MDD.AMOUNT
				     , MDD.LOCAL_AMOUNT
				     , TO_CHAR(MDM.ISSUE_DUE_DATE ,'YYYY-MM-DD')      AS SHIPPING_DUE_DATE
				     , TO_CHAR(MDM.DO_DATE  ,'YYYY-MM-DD')            AS SHIPPING_DATE
				     , MDM.STATE
					 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, 'IC0002', MDM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
				     , TO_CHAR(MDM.CREATE_DATE , 'YYYY-MM-DD HH24:MI:SS')      AS CREATE_DATE
				     , TO_CHAR(MDM.CONFIRM_DATE ,'YYYY-MM-DD')      AS CONFIRM_DATE
				     , MDM.CONFIRM_USER_NO
				     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
				     , MDM.DO_USER_NO      AS SHIPPING_USER_NO
		             , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.DO_USER_NO) FROM DUAL ) AS SHIPPING_USER_NM
					 , ROWIDTOCHAR(MDD.ROWID)            AS KEY_ID
				     , COUNT(*) OVER()   AS TOTAL_COUNT
				     , ROW_NUMBER() OVER(PARTITION BY MDM.COMPANY_CD, MDM.DIVISION_CD ORDER BY MDD.DO_NO) AS ROW_CNT
		   	         , MDD.REFERENCE_NO
                     , MDD.REFERENCE_DTL_NO
				     , MDM.DESCRIPTION
				FROM   MOM_DO_MST MDM
				     , MOM_DO_DTL MDD
				     , MOM_WAREHOUSE MWH
				     , MOM_PARTNER  MP
				     , MOM_ITEM     MI
				WHERE  MDM.COMPANY_CD           = MDD.COMPANY_CD
				AND    MDM.DIVISION_CD          = MDD.DIVISION_CD
				AND    MDM.DO_NO                = MDD.DO_NO    
				AND    MDM.COMPANY_CD           = MWH.COMPANY_CD
				AND    MDM.DIVISION_CD          = MWH.DIVISION_CD
				AND    MDM.ISSUE_WAREHOUSE_CD   = MWH.WAREHOUSE_CD
				AND    MDM.COMPANY_CD           = MP.COMPANY_CD
				AND    MDM.DIVISION_CD          = MP.DIVISION_CD
				AND    MDM.PARTNER_CD           = MP.PARTNER_CD
				AND    MDD.COMPANY_CD           = MI.COMPANY_CD
				AND    MDD.DIVISION_CD          = MI.DIVISION_CD
				AND    MDD.ITEM_ID              = MI.ITEM_ID     
				AND    MDM.COMPANY_CD          = #{companyCd, jdbcType=VARCHAR}
				AND    MDM.DIVISION_CD         = #{divisionCd, jdbcType=VARCHAR}  
				AND    MDM.PROCESS_CD          = 'CS'
				AND    MDM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
				<if test="shippingRequestNo != null and shippingRequestNo != ''">
				AND    (UPPER(MDM.DO_NO) LIKE '%' || UPPER(#{shippingRequestNo, jdbcType=VARCHAR}) || '%')   
				</if>
				<if test="partnerCdNm != null and partnerCdNm != ''">
				AND    (UPPER(MDM.PARTNER_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')
				</if> 
				<if test="issueWarehouseCdNm != null and issueWarehouseCdNm != ''">
				AND    (UPPER(MDM.ISSUE_WAREHOUSE_CD) LIKE '%' || UPPER(#{issueWarehouseCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MWH.WAREHOUSE_NM) LIKE '%' || UPPER(#{issueWarehouseCdNm, jdbcType=VARCHAR}) || '%')   
				</if> 
				<if test="state != null and state != ''">
				AND    MDM.STATE   IN (${state}) 
				</if>   
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
               ) A
        WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
    </if>               
    </select>   
</mapper>     