<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUIC3030">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
        FROM   (
    </if>
                SELECT MDM.COMPANY_CD
		             , MDM.DIVISION_CD
		             , MDM.DO_NO           AS ISSUE_REQUEST_NO
		             , MDM.DO_NM		   AS ISSUE_REQUEST_NM	
		             , MDM.PROCESS_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.PROCESS_CD) FROM DUAL)  AS PROCESS_NM
		             , MDM.PARTNER_CD                       
		             , MP.PARTNER_NM               
		             , MDM.REQUEST_WAREHOUSE_CD
	                 , MWR.WAREHOUSE_NM            AS REQUEST_WAREHOUSE_NM
	                 , MDM.ISSUE_WAREHOUSE_CD
	                 , MWI.WAREHOUSE_NM            AS ISSUE_WAREHOUSE_NM
		             , MDM.CURRENCY_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, 'SM0017', MDM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
		             , MDM.EXCHANGE_RATE
		             , TO_CHAR(MDM.ISSUE_DUE_DATE  ,'YYYY-MM-DD') AS ISSUE_DUE_DATE
		             , MDM.DESCRIPTION
		             , MDM.ISSUE_WH_USE_YN    AS ISSUE_WAREHOUSE_USE_YN 
		             , MDM.UPDATE_BY      AS UPDATE_USER_NO
		             , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		             , TO_CHAR(MDM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		             , TO_CHAR(MDM.CREATE_DATE ,'YYYY-MM-DD') AS CREATE_DATE
		             , ROWIDTOCHAR(MDM.ROWID)            AS KEY_ID
		             , COUNT(*) OVER()   AS TOTAL_COUNT
		             , ROW_NUMBER() OVER(PARTITION BY MDM.COMPANY_CD,MDM.DIVISION_CD ORDER BY MDM.DO_NO) AS ROW_CNT
		        FROM   MOM_DO_MST MDM
		             , MOM_PARTNER MP
		             , MOM_WAREHOUSE MWR
                     , MOM_WAREHOUSE MWI
		        WHERE  MDM.COMPANY_CD           = MP.COMPANY_CD
		        AND    MDM.DIVISION_CD          = MP.DIVISION_CD
		        AND    MDM.PARTNER_CD           = MP.PARTNER_CD
		        AND    MDM.COMPANY_CD           = MWR.COMPANY_CD
		        AND    MDM.DIVISION_CD          = MWR.DIVISION_CD
	            AND    MDM.REQUEST_WAREHOUSE_CD = MWR.WAREHOUSE_CD
	            AND    MDM.COMPANY_CD           = MWI.COMPANY_CD
	            AND    MDM.DIVISION_CD          = MWI.DIVISION_CD
	            AND    MDM.ISSUE_WAREHOUSE_CD   = MWI.WAREHOUSE_CD
		        AND    MDM.COMPANY_CD          = #{companyCd, jdbcType=VARCHAR}
		        AND    MDM.DIVISION_CD         = #{divisionCd, jdbcType=VARCHAR}  
		        AND    MDM.STATE               = 'DRF'
		        AND    MDM.PROCESS_CD          = 'NI'
		        AND    MDM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
		        <if test="issueRequestNo != null and issueRequestNo != ''">
		        AND    (UPPER(MDM.DO_NO) LIKE '%' || UPPER(#{issueRequestNo, jdbcType=VARCHAR}) || '%')   
		        </if>
		        <if test="partnerCdNm != null and partnerCdNm != ''">
		        AND    (UPPER(MDM.PARTNER_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')
		        </if> 
		        <if test="requestWarehouseCdNm != null and requestWarehouseCdNm != ''">
                AND    (UPPER(MDM.REQUEST_WAREHOUSE_CD) LIKE '%' || UPPER(#{requestWarehouseCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MWR.WAREHOUSE_NM) LIKE '%' || UPPER(#{requestWarehouseCdNm, jdbcType=VARCHAR}) || '%')   
                </if> 
	            <if test="issueWarehouseCdNm != null and issueWarehouseCdNm != ''">
	            AND    (UPPER(MDM.ISSUE_WAREHOUSE_CD) LIKE '%' || UPPER(#{issueWarehouseCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MWI.WAREHOUSE_NM) LIKE '%' || UPPER(#{issueWarehouseCdNm, jdbcType=VARCHAR}) || '%')   
	            </if> 
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
               ) A
        WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
    </if>               
    </select>   
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT MDD.COMPANY_CD
		     , MDD.DIVISION_CD
		     , MDD.DO_NO                AS ISSUE_REQUEST_NO
		     , MDD.SEQ
		     , MDD.DELIVERY_ORDER_ID
		     , MDD.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_SPEC
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , MDD.QTY                AS ISSUE_REQUEST_QTY
		     , MDD.DO_UOM             AS ISSUE_UOM 
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.DO_UOM) FROM DUAL) AS ISSUE_UOM_NM
		     , MDD.CONVERSION_QTY         
		     , MDD.CONVERSION_UOM   
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.CONVERSION_UOM) FROM DUAL) AS CONVERSION_UOM_NM
		     , MDD.UNIT_PRICE
		     , MDD.AMOUNT
		     , MDD.LOCAL_AMOUNT
		     , MDD.REFERENCE_NO
		     , MDD.REFERENCE_DTL_NO
		     , ROWIDTOCHAR(MDD.ROWID)            AS KEY_ID
		     , MDD.DESCRIPTION
		     , MDD.UPDATE_BY      AS UPDATE_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		     , TO_CHAR(MDD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , MDD.IO_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MDD.COMPANY_CD, MDD.DIVISION_CD, MDD.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
		     , (SELECT MOM_STOCK_PKG.FN_GET_ITEM_WH_AVAILABLE_QTY( MDM.COMPANY_CD, MDM.DIVISION_CD, MDD.ITEM_ID, MDM.ISSUE_WAREHOUSE_CD) FROM DUAL) AS AVAILABLE_QTY
             , (SELECT MOM_STOCK_PKG.FN_GET_ITEM_WAREHOUSE_STOCK_QTY( MDM.COMPANY_CD, MDM.DIVISION_CD, MDD.ITEM_ID, MDM.ISSUE_WAREHOUSE_CD) FROM DUAL) AS CURRENT_STOCK_QTY
        FROM   MOM_DO_MST MDM
             , MOM_DO_DTL MDD
             , MOM_ITEM MI
        WHERE  MDM.COMPANY_CD   = MDD.COMPANY_CD
        AND    MDM.DIVISION_CD  = MDD.DIVISION_CD
        AND    MDM.DO_NO        = MDD.DO_NO
        AND    MDD.COMPANY_CD   = MI.COMPANY_CD
        AND    MDD.DIVISION_CD  = MI.DIVISION_CD
        AND    MDD.ITEM_ID      = MI.ITEM_ID
        AND    MDD.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
        AND    MDD.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}
        AND    MDD.DO_NO        = #{issueRequestNo, jdbcType=VARCHAR}  
    </select> 
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_DO_CONFIRM_CANCEL
            <where>
                <foreach collection="list" item="item" open="" close="" separator="OR">
	            (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	               AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	               AND  PROCESS_CD  = 'NI'
	               AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	            )
                </foreach>
            </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
	        INTO MOM_PROC_DO_CONFIRM_CANCEL( COMPANY_CD
							               , DIVISION_CD
							               , PROCESS_CD
							               , DO_NO
							               , ISSUE_WAREHOUSE_CD
							               , DESCRIPTION
							               , VAL_MSG
							               , MULTI_MSG
							               , CREATE_BY
							               , CREATE_DATE
	                                       )
	        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
			                               , #{item.divisionCd, jdbcType=VARCHAR}
			                               , 'NI'
			                               , #{item.issueRequestNo, jdbcType=VARCHAR}
			                               , #{item.issueWarehouseCd, jdbcType=VARCHAR}
			                               , #{item.description, jdbcType=VARCHAR}
			                               , #{item.valMsg, jdbcType=VARCHAR}
			                               , #{item.multiMsg, jdbcType=VARCHAR}
			                               , #{item.userId, jdbcType=VARCHAR}
			                               , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
			                               )     
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_STOCK_PKG.SP_DO_CONFIRM_CANCEL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
		                                         , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
		                                         , #{companyCd,   jdbcType=VARCHAR, mode=IN}
		                                         , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
		                                         , 'NI'
		                                         , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select> 
</mapper>     