<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUICA020">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
        FROM   (
    </if>
                SELECT MCIV.COMPANY_CD
				     , MCIV.DIVISION_CD
				     , MI.ITEM_TYPE
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
				     , MCIV.WAREHOUSE_CD
                     , MWH.WAREHOUSE_NM         AS WAREHOUSE_NM  
				     , MCIV.ITEM_ID
				     , MI.ITEM_NM
					 , MI.ITEM_SPEC
				     , MCIV.UOM
				     , MCIV.IO_DATE
				     , MCIV.BEGIN_QTY     
				     , MCIV.PRE_IN_QTY 
				     , MCIV.DAY_IN_QTY 
				     , MCIV.PRE_OUT_QTY 
				     , MCIV.DAY_OUT_QTY 
				     , MCIV.END_QTY 
				     , MCIV.PRE_END_QTY  
				     , MCIV.WAREHOUSE_CD||MCIV.ITEM_ID||'_'||MCIV.UOM            AS KEY_ID
				     , COUNT(*) OVER()   AS TOTAL_COUNT
				     , ROW_NUMBER() OVER(PARTITION BY MCIV.COMPANY_CD,MCIV.DIVISION_CD ORDER BY  MCIV.WAREHOUSE_CD, MI.ITEM_TYPE, MCIV.ITEM_ID, MCIV.UOM) AS ROW_CNT
				FROM   MOM_CURRENT_INV_V MCIV  
				     , MOM_WAREHOUSE MWH
                     , MOM_ITEM MI 
                WHERE  MCIV.COMPANY_CD    = MWH.COMPANY_CD 
                AND    MCIV.DIVISION_CD   = MWH.DIVISION_CD 
                AND    MCIV.WAREHOUSE_CD  = MWH.WAREHOUSE_CD
                AND    MCIV.COMPANY_CD    = MI.COMPANY_CD 
                AND    MCIV.DIVISION_CD   = MI.DIVISION_CD 
                AND    MCIV.ITEM_ID       = MI.ITEM_ID 
				AND    MCIV.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
				AND    MCIV.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}   
				<if test="itemIdNm != null and itemIdNm != ''">
				AND    (UPPER(MCIV.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
				</if>
				<if test="warehouseCd != null and warehouseCd != ''">
		        AND    MCIV.WAREHOUSE_CD  = #{warehouseCd, jdbcType=VARCHAR} 	  
		        </if>
		        <if test="itemType != null and itemType != ''">
		        AND    MI.ITEM_TYPE  = #{itemType, jdbcType=VARCHAR} 	  
		        </if>
		        AND    MCIV.WAREHOUSE_CD IN (SELECT MWM.WAREHOUSE_CD
					                         FROM   MOM_WAREHOUSE_MANAGER  MWM
						                     WHERE  MWM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
						                     AND    MWM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}  
						                     AND    MWM.USER_NO      = #{userId, jdbcType=VARCHAR}  
						                     AND    MWM.USE_YN       = 'Y')  
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
               ) A
        WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
    </if>               
    </select>   
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT INV.COMPANY_CD
		     , INV.DIVISION_CD
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(INV.COMPANY_CD, INV.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , INV.ITEM_ID
		     , INV.UOM
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(INV.COMPANY_CD, INV.DIVISION_CD, INV.UOM) FROM DUAL) AS UOM_NM
		     , INV.WAREHOUSE_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(INV.COMPANY_CD, INV.DIVISION_CD, INV.WAREHOUSE_CD) FROM DUAL) AS WAREHOUSE_NM
		     , TO_CHAR(INV.IO_DATE ,'YYYY-MM-DD')  AS IO_DATE
		     , INV.BEGIN_QTY
		     , INV.PRE_IN_QTY
		     , INV.DAY_IN_QTY
		     , INV.PRE_OUT_QTY
		     , INV.DAY_OUT_QTY
		     , INV.END_QTY
		     , INV.PRE_END_QTY 
		     , INV.ITEM_ID||'_'||INV.UOM||'_'||INV.WAREHOUSE_CD           AS KEY_ID
		FROM   ( SELECT COMPANY_CD, DIVISION_CD, ITEM_ID, UOM, WAREHOUSE_CD, IO_DATE, BEGIN_QTY, PRE_IN_QTY, DAY_IN_QTY, PRE_OUT_QTY, DAY_OUT_QTY, END_QTY, PRE_END_QTY
		         FROM ( SELECT COMPANY_CD, DIVISION_CD, ITEM_ID, UOM, WAREHOUSE_CD, IO_DATE, BEGIN_QTY, 0 AS PRE_IN_QTY, IN_QTY AS DAY_IN_QTY, 0 AS PRE_OUT_QTY, OUT_QTY AS DAY_OUT_QTY ,END_QTY, END_QTY AS PRE_END_QTY
		                FROM   MOM_DAILY_INOUT_V
		                UNION ALL
		                SELECT COMPANY_CD, DIVISION_CD, ITEM_ID, UOM, STORAGE_WAREHOUSE_CD AS WAREHOUSE_CD, TRUNC(SYSDATE) AS IO_DATE, 0 AS BEGIN_QTY, INV_QTY AS PRE_IN_QTY, 0 AS DAY_IN_QTY, 0 AS PRE_OUT_QTY, 0 AS DAY_OUT_QTY, 0 AS END_QTY, INV_QTY AS PRE_END_QTY
		                FROM MOM_PO_PUR_ITEM_V
		                UNION ALL
		                SELECT COMPANY_CD, DIVISION_CD, ITEM_ID, UOM, STORAGE_WAREHOUSE_CD AS WAREHOUSE_CD, TRUNC(SYSDATE) AS IO_DATE, 0 AS BEGIN_QTY
		                     , (CASE WHEN STATUS = '입고전' THEN INV_QTY ELSE 0 END) AS PRE_IN_QTY, 0 AS DAY_IN_QTY
		                     , (CASE WHEN STATUS = '출고전' THEN INV_QTY ELSE 0 END) AS PRE_OUT_QTY, 0 AS DAY_OUT_QTY, 0 AS END_QTY
		                     , (CASE WHEN STATUS = '출고전' THEN INV_QTY*-1  ELSE INV_QTY END) AS PRE_END_QTY
		                FROM MOM_DO_ITEM_V
		                UNION ALL
		                SELECT COMPANY_CD, DIVISION_CD, ITEM_ID, UOM, GOOD_WAREHOUSE_CD AS WAREHOUSE_CD, TRUNC(SYSDATE) AS IO_DATE, 0 AS BEGIN_QTY
		                     , (CASE WHEN STATUS = '생산예정' THEN INV_QTY ELSE 0 END) AS PRE_IN_QTY,0 AS DAY_IN_QTY
		                     , (CASE WHEN STATUS = '소진예정' THEN INV_QTY ELSE 0 END) AS PRE_OUT_QTY,0 AS DAY_OUT_QTY,0 AS END_QTY
		                     , (CASE WHEN STATUS = '소진예정' THEN INV_QTY*-1  ELSE INV_QTY END) AS PRE_END_QTY
		                FROM MOM_PROD_ITEM_V ) ) INV
		    ,  MOM_ITEM MI
		WHERE  1=1
		AND    INV.COMPANY_CD   = MI.COMPANY_CD 
		AND    INV.DIVISION_CD  = MI.DIVISION_CD 
		AND    INV.ITEM_ID      = MI.ITEM_ID 
		AND    INV.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
		AND    INV.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR} 
		AND    INV.WAREHOUSE_CD = #{warehouseCd, jdbcType=VARCHAR} 
		AND    INV.ITEM_ID      = #{item_id, jdbcType=VARCHAR}  
		AND    INV.UOM          = #{uom, jdbcType=VARCHAR}
    </select> 
</mapper>     