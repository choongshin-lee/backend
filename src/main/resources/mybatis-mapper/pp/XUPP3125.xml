<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUPP3125">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
	    FROM   (
	    </if>
				SELECT MWO.COMPANY_CD
				     , MWO.DIVISION_CD
				     , MWO.WORK_ORDER_ID   
				     , ROWIDTOCHAR(MWO.ROWID)  AS KEY_ID
				     , MWO.WO_TYPE
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, 'PP0002', MWO.WO_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS WO_TYPE_NM
				     , MWO.ITEM_ID
				     , MI.ITEM_NM
				     , MI.ITEM_TYPE
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
				     , MI.ITEM_SPEC
				     , MI.NET_WEIGHT
				     , MI.NET_WEIGHT_UOM
				     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.NET_WEIGHT_UOM) FROM DUAL) AS NET_WEIGHT_UOM_NM
				     , MWG.WORK_GROUP_CD
				     , MWG.WORK_GROUP_NM
				     , MWO.WORK_CENTER_CD
				     , MWC.WORK_CENTER_NM
		             , MWO.CONSUME_WAREHOUSE_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, MWO.CONSUME_WAREHOUSE_CD) FROM DUAL) AS CONSUME_WAREHOUSE_NM  
		             , MWO.GOOD_WAREHOUSE_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, MWO.GOOD_WAREHOUSE_CD) FROM DUAL) AS GOOD_WAREHOUSE_NM
		             , MWO.DEFECT_WAREHOUSE_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, MWO.DEFECT_WAREHOUSE_CD) FROM DUAL) AS DEFECT_WAREHOUSE_NM
		             , MWO.MFG_UOM 
					 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, MWO.MFG_UOM) FROM DUAL) AS MFG_UOM_NM
					 , MWO.CONVERSION_QTY         
					 , MWO.CONVERSION_UOM      
					 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, MWO.CONVERSION_UOM) FROM DUAL) AS CONVERSION_UOM_NM
				     , MWO.ROUTING_ID
				     , (SELECT MOM_COMMON_PKG.FN_GET_ROUTING_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, MWO.ROUTING_ID) FROM DUAL) AS ROUTING_NM
				     , MWO.WO_STATE
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, 'PP0003', MWO.WO_STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS WO_STATE_NM
				     , MWO.WO_QTY
				     , MWO.GOOD_QTY  AS TOTAL_GOOD_QTY 
				     , MWO.DEFECT_QTY  AS TOTAL_DEFECT_QTY 
				     , MWO.CLOSE_QTY
		  		     , MWO.WO_QTY + NVL(MWO.GOOD_QTY, 0) + NVL(MWO.CLOSE_QTY,0) AS REMAIN_QTY
				     , TO_CHAR(MWO.PLAN_DATE  ,'YYYY-MM-DD')      AS PLAN_DATE
				     , TO_CHAR(MWO.WO_START_TIME  ,'YYYY-MM-DD')  AS WO_START_DATE
				     , TO_CHAR(MWO.WO_END_TIME  ,'YYYY-MM-DD')    AS WO_END_DATE
				     , MWO.PRIORITY
				     , MWO.DEMAND_ID
				     , MWO.PARENT_WO_ID
				     , MWO.CLOSE_YN
				     , MWO.OUTSOURCING_YN
				     , MWO.MANUAL_YN
				     , MWO.BOR_ID
				     , MWO.REASON_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, 'PP0005', MWO.REASON_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS REASON_NM
				     , MWO.INSPECTION_YN
				     , MWO.DESCRIPTION
				     , MWO.UPDATE_BY     AS UPDATE_USER_NO 
					 ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWO.COMPANY_CD, MWO.DIVISION_CD, MWO.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
				     , TO_CHAR(MWO.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
				FROM   MOM_WORK_ORDER MWO
				     , MOM_ITEM MI
				     , MOM_WORK_CENTER MWC
				     , MOM_WORK_GROUP  MWG
				WHERE  MWO.COMPANY_CD      = MI.COMPANY_CD
				AND    MWO.DIVISION_CD     = MI.DIVISION_CD
				AND    MWO.ITEM_ID         = MI.ITEM_ID  
				AND    MWO.COMPANY_CD      = MWC.COMPANY_CD
				AND    MWO.DIVISION_CD     = MWC.DIVISION_CD
				AND    MWO.WORK_CENTER_CD  = MWC.WORK_CENTER_CD     
				AND    MWC.COMPANY_CD      = MWG.COMPANY_CD
				AND    MWC.DIVISION_CD     = MWG.DIVISION_CD
				AND    MWC.WORK_GROUP_CD   = MWG.WORK_GROUP_CD  
			    AND    MWO.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}
			    AND    MWO.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}	
			    AND    MWO.WO_START_TIME BETWEEN TO_DATE(#{woStartDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{woStartDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
			    AND    MWO.ROUTING_ID  IS NOT NULL  
			   <if test="itemIdNm != null and itemIdNm != ''">
			    AND    (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
			    </if>
			    <if test="workOrderId != null and workOrderId != ''">
			    AND    (UPPER(MWO.WORK_ORDER_ID) LIKE '%' || UPPER(#{workOrderId, jdbcType=VARCHAR}) || '%')	  
			    </if>
		        <if test="workGroupCdNm != null and workGroupCdNm != ''">
			    AND    (UPPER(MWC.WORK_GROUP_CD) LIKE '%' || UPPER(#{workGroupCdNm , jdbcType=VARCHAR}) || '%' OR UPPER(MWG.WORK_GROUP_NM) LIKE '%' || UPPER(#{workGroupCdNm , jdbcType=VARCHAR}))
			    </if>	
			    AND    MWO.WO_STATE IN (SELECT MC.CODE
										FROM   MOM_CODE MC
										WHERE  MC.COMPANY_CD  = MWO.COMPANY_CD
										AND    MC.DIVISION_CD = MWO.DIVISION_CD 
										AND    MC.GROUP_CD    = 'PP0003'
										<if test="woState != null and woState != ''">
										AND    MC.CODE IN (${woState})
										</if>  
										AND    MC.USE_YN      = 'Y'
										AND    MC.ATTRIBUTE1  = 'Y' )
				AND    MWO.OUTSOURCING_YN = 'N'
				<if test="workCenterCd != null and workCenterCd != ''">
			    AND    MWO.WORK_CENTER_CD = #{workCenterCd , jdbcType=VARCHAR}  
			    </if>
			    AND    MWO.WORK_CENTER_CD IN ( SELECT MCR.WORK_CENTER_CD
											   FROM   MOM_USER_WORK_CENTER_REL MCR
												    , MOM_WORK_CENTER MWC
											   WHERE  MCR.COMPANY_CD     = MWC.COMPANY_CD
											   AND    MCR.DIVISION_CD    = MWC.DIVISION_CD
											   AND    MCR.WORK_CENTER_CD = MWC.WORK_CENTER_CD
											   AND    MCR.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
											   AND    MCR.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR} 
											   AND    MCR.USER_NO        = #{userId, jdbcType=VARCHAR}
											   AND    MWC.USE_YN         = 'Y'
											   AND    MCR.USE_YN         = 'Y')			
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	           ) A
	    WHERE ROW_COUNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
	    </if> 
	</select>
	<select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT A.COMPANY_CD
		     , A.DIVISION_CD
		     , A.WORK_ORDER_ID
		     , A.WO_RESULT_ID
		     , A.OPERATION_SEQ
		     , A.OPERATION_ID
		     , (SELECT MOM_COMMON_PKG.FN_GET_OPERATION_NAME(A.COMPANY_CD, A.DIVISION_CD, A.OPERATION_ID) FROM DUAL) AS OPERATION_NM
		     , A.WORK_STATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WORK_STATION_NAME(A.COMPANY_CD, A.DIVISION_CD, A.WORK_STATION_CD) FROM DUAL) AS WORK_STATION_NM
		     , A.INSPECTION_YN
		     , A.FINAL_OPERATION_YN
		     , A.MILESTONE
		     , A.WORK_DAY
		     , A.START_DATE
		     , A.END_DATE
		     , A.STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'PP0010', A.STATE, 'KR') FROM DUAL)  AS STATE_NM
		     , A.GOOD_QTY
		     , A.DEFECT_QTY
		     , A.DEFECT_TYPE
		     , ''                                AS NON_WORK_REASON_CD
		     , NVL(MWO.GOOD_QTY, 0)              AS TOTAL_GOOD_QTY
		     , NVL(MWO.DEFECT_QTY, 0)            AS TOTAL_DEFECT_QTY
		     , NVL(MWO.CLOSE_QTY, 0)             AS TOTAL_CLOSE_QTY
		     , MWO.WO_QTY
		     , (MWO.WO_QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.DEFECT_QTY, 0) - NVL(MWO.CLOSE_QTY, 0)) AS REMAIN_QTY
		     , TO_CHAR(MWO.WO_START_TIME  ,'YYYY-MM-DD')   AS WO_START_DATE
		     , MI.NET_WEIGHT
		     , MI.NET_WEIGHT_UOM
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.NET_WEIGHT_UOM) FROM DUAL) AS NET_WEIGHT_UOM_NM
		     , A.DESCRIPTION
		     , A.UPDATE_USER_NO
		     ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.COMPANY_CD, A.DIVISION_CD, A.UPDATE_USER_NO) FROM DUAL ) AS UPDATE_USER_NM
		     , A.UPDATE_DATE
		     , A.WORK_ORDER_ID || '_' || A.OPERATION_ID  AS KEY_ID
		FROM  ( SELECT MOP.COMPANY_CD
		             , MOP.DIVISION_CD
		             , MOP.WORK_ORDER_ID
		             , ''                    AS WO_RESULT_ID
		             , MOP.OPERATION_SEQ
		             , MOP.OPERATION_ID
		             , MOP.WORK_STATION_CD
		             , MOP.INSPECTION_YN
		             , MOP.FINAL_OPERATION_YN
		             , MOP.MILESTONE
		             , ''                    AS WORK_DAY
		             , ''                    AS START_DATE
		             , ''                    AS END_DATE
		             , 'W'                   AS STATE
		             , 0                     AS GOOD_QTY
		             , 0                     AS DEFECT_QTY
		             , ''                    AS DEFECT_TYPE
		             , ''                    AS DESCRIPTION
		             , ''                    AS UPDATE_USER_NO
		             , ''                    AS UPDATE_DATE
		        FROM   MOM_WO_OPERATION_PATH MOP
		        WHERE  MOP.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
		        AND    MOP.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
		        AND    MOP.WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}
		        AND    NOT EXISTS        ( SELECT '*'
		                                   FROM   MOM_WO_RESULT MR
		                                   WHERE  MR.COMPANY_CD    = MOP.COMPANY_CD
		                                   AND    MR.DIVISION_CD   = MOP.DIVISION_CD
		                                   AND    MR.WORK_ORDER_ID = MOP.WORK_ORDER_ID
		                                   AND    MR.STATE          IN ('O', 'R', 'H') ) 
		        UNION ALL
		        SELECT MWR.COMPANY_CD
		             , MWR.DIVISION_CD
		             , MWR.WORK_ORDER_ID
		             , MWR.WO_RESULT_ID
		             , MIN(MWR.OPERATION_SEQ) AS OPERATION_SEQ
		             , MWR.OPERATION_ID
		             , MIN(MWR.WORK_STATION_CD) AS WORK_STATION_CD
		             , MIN(MOP.INSPECTION_YN)   AS INSPECTION_YN
		             , MIN(MOP.FINAL_OPERATION_YN) AS FINAL_OPERATION_YN
		             , MIN(MOP.MILESTONE)          AS MILESTONE
		             , MIN(TO_CHAR(MWR.WORK_DAY  ,'YYYY-MM-DD'))  AS WORK_DAY
		             , MIN(TO_CHAR(MWR.START_TIME  ,'YYYY-MM-DD HH24:MI:SS'))   AS START_DATE
		             , MIN(TO_CHAR(MWR.END_TIME  ,'YYYY-MM-DD HH24:MI:SS'))     AS END_DATE
		             , MIN(MWR.STATE)                                           AS STATE
		             , SUM(DECODE(MWR.WO_RESULT_TYPE, 'G', NVL(MWR.RESULT_QTY,NULL)))  AS GOOD_QTY
		             , SUM(DECODE(MWR.WO_RESULT_TYPE, 'D', NVL(MWR.RESULT_QTY,NULL)))  AS DEFECT_QTY
		             , MIN(MWR.DEFECT_TYPE) AS DEFECT_TYPE
		             , MIN(MWR.DESCRIPTION) AS DESCRIPTION
		             , MIN(MWR.UPDATE_BY)    AS UPDATE_USER_NO
		             , MIN(TO_CHAR(MWR.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS')) AS UPDATE_DATE
		        FROM   MOM_WO_OPERATION_RESULT   MWR
		             , MOM_WO_OPERATION_PATH MOP
		        WHERE  MWR.COMPANY_CD    = MOP.COMPANY_CD 
		        AND    MWR.DIVISION_CD   = MOP.DIVISION_CD
		        AND    MWR.WORK_ORDER_ID = MOP.WORK_ORDER_ID
		        AND    MWR.OPERATION_ID  = MOP.OPERATION_ID
		        AND    MWR.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
		        AND    MWR.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
		        AND    MWR.WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}  
		        AND    MWR.WO_RESULT_ID  = (SELECT MR.WO_RESULT_ID
		                                    FROM   MOM_WO_RESULT MR
		                                    WHERE  MR.COMPANY_CD    = MWR.COMPANY_CD
		                                    AND    MR.DIVISION_CD   = MWR.DIVISION_CD
		                                    AND    MR.WORK_ORDER_ID = MWR.WORK_ORDER_ID
		                                    AND    MR.STATE          IN ('O', 'R', 'H') )
		        GROUP BY MWR.COMPANY_CD
		             , MWR.DIVISION_CD
		             , MWR.WORK_ORDER_ID
		             , MWR.WO_RESULT_ID
		             , MWR.OPERATION_ID ) A
		     , MOM_WORK_ORDER MWO
		     , MOM_ITEM MI
		WHERE  A.COMPANY_CD     = MWO.COMPANY_CD
		AND    A.DIVISION_CD    = MWO.DIVISION_CD
		AND    A.WORK_ORDER_ID  = MWO.WORK_ORDER_ID
		AND    MWO.COMPANY_CD   = MI.COMPANY_CD
		AND    MWO.DIVISION_CD  = MI.DIVISION_CD
		AND    MWO.ITEM_ID      = MI.ITEM_ID
		AND    A.OPERATION_SEQ  = (SELECT MIN(OPERATION_SEQ)
								   FROM   ( SELECT MIN(MOP.OPERATION_SEQ)  AS   OPERATION_SEQ
									        FROM   MOM_WO_OPERATION_PATH MOP
									        WHERE  MOP.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
									        AND    MOP.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
									        AND    MOP.WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}  
									        AND    NOT EXISTS        ( SELECT '*'
									                                   FROM   MOM_WO_RESULT MR
									                                   WHERE  MR.COMPANY_CD    = MOP.COMPANY_CD
									                                   AND    MR.DIVISION_CD   = MOP.DIVISION_CD
									                                   AND    MR.WORK_ORDER_ID = MOP.WORK_ORDER_ID
									                                   AND    MR.STATE          IN ('O', 'R', 'H') )   
									        UNION ALL                          
									        SELECT MIN(MWR.OPERATION_SEQ)  OPERATION_SEQ
									        FROM   MOM_WO_OPERATION_RESULT   MWR
									        WHERE   MWR.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
									        AND    MWR.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
									        AND    MWR.WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}  
									        AND    MWR.WO_RESULT_ID  = (SELECT MR.WO_RESULT_ID
									                                    FROM   MOM_WO_RESULT MR
									                                    WHERE  MR.COMPANY_CD    = MWR.COMPANY_CD
									                                    AND    MR.DIVISION_CD   = MWR.DIVISION_CD
									                                    AND    MR.WORK_ORDER_ID = MWR.WORK_ORDER_ID
									                                    AND    MR.STATE          IN ('O', 'R', 'H') )                           
									        AND    MWR.STATE  <![CDATA[<>]]> 'E' ))		
    </select>
    <delete id="remove_customBtn2-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_OPERATION_RESULT
        <where>
        <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  BUTTON_TYPE = 'S'
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
        </foreach>
        </where>
    </delete>
    <insert id="create_customBtn2-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_OPERATION_RESULT( COMPANY_CD
						              , DIVISION_CD
						              , BUTTON_TYPE
						              , WORK_ORDER_ID
						              , WO_RESULT_ID
						              , OPERATION_SEQ
						              , OPERATION_ID
						              , FINAL_OPERATION_YN
						              , STATE
						              , START_TIME
						              , END_TIME
						              , GOOD_QTY
						              , DEFECT_QTY
						              , NET_WEIGHT
						              , NET_WEIGHT_UOM
						              , INSPECTION_YN 
	                                  , DEFECT_TYPE 
	                                  , BOX_QTY
						              , DESCRIPTION
						              , VAL_MSG
						              , MULTI_MSG
						              , CREATE_BY
						              , CREATE_DATE )
        VALUES                        ( #{item.companyCd, jdbcType=VARCHAR}
						              , #{item.divisionCd, jdbcType=VARCHAR}
						              , 'S'
						              , #{item.workOrderId, jdbcType=VARCHAR}
						              , #{item.woResultId, jdbcType=VARCHAR}
						              , #{item.operationSeq, jdbcType=NUMERIC}
						              , #{item.operationId, jdbcType=VARCHAR}
						              , #{item.finalOperationYn, jdbcType=VARCHAR}
						              , #{item.state, jdbcType=VARCHAR}
						              , TO_DATE(#{item.startDate, jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS') 
						              , TO_DATE(#{item.endDate, jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS') 
						              , #{item.goodQty, jdbcType=NUMERIC}
						              , #{item.defectQty, jdbcType=NUMERIC}
						              , #{item.netWeight, jdbcType=NUMERIC}
						              , #{item.netWeightUom, jdbcType=VARCHAR}
						              , #{item.inspectionYn, jdbcType=VARCHAR}
						              , #{item.defectType, jdbcType=VARCHAR}
						              , #{item.boxQty, jdbcType=NUMERIC}
						              , #{item.description, jdbcType=VARCHAR}
						              , #{item.valMsg, jdbcType=VARCHAR}
						              , #{item.multiMsg, jdbcType=VARCHAR}
						              , #{item.userId, jdbcType=VARCHAR}
						              , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
						              )
        </foreach>
    </insert>
    <select id="proc_customBtn2-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
       { CALL MOM_WO_PKG.SP_CREATE_WO_OP_RESULT_TYPE1( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                 , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                           	     , #{companyCd,  jdbcType=VARCHAR , mode=IN}
					                           	     , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                           	     , 'S'											  
					                           	     , #{userId,     jdbcType=VARCHAR, mode=IN} )}       	              
  </select>   	
  <delete id="remove_customBtn2-2" parameterType="java.util.List">
        DELETE FROM MOM_PROC_OPERATION_RESULT
        <where>
        <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  BUTTON_TYPE = 'E'
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
        </foreach>
        </where>
    </delete>
    <insert id="create_customBtn2-2" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_OPERATION_RESULT( COMPANY_CD
						              , DIVISION_CD
						              , BUTTON_TYPE
						              , WORK_ORDER_ID
						              , WO_RESULT_ID
						              , OPERATION_SEQ
						              , OPERATION_ID
						              , FINAL_OPERATION_YN
						              , STATE
						              , START_TIME
						              , END_TIME
						              , GOOD_QTY
						              , DEFECT_QTY
						              , NET_WEIGHT
						              , NET_WEIGHT_UOM
						              , INSPECTION_YN 
	                                  , DEFECT_TYPE 
	                                  , BOX_QTY
						              , DESCRIPTION
						              , VAL_MSG
						              , MULTI_MSG
						              , CREATE_BY
						              , CREATE_DATE )
        VALUES                        ( #{item.companyCd, jdbcType=VARCHAR}
						              , #{item.divisionCd, jdbcType=VARCHAR}
						              , 'E'
						              , #{item.workOrderId, jdbcType=VARCHAR}
						              , #{item.woResultId, jdbcType=VARCHAR}
						              , #{item.operationSeq, jdbcType=NUMERIC}
						              , #{item.operationId, jdbcType=VARCHAR}
						              , #{item.finalOperationYn, jdbcType=VARCHAR}
						              , #{item.state, jdbcType=VARCHAR}
						              , TO_DATE(#{item.startDate, jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS') 
						              , TO_DATE(#{item.endDate, jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS') 
						              , #{item.goodQty, jdbcType=NUMERIC}
						              , #{item.defectQty, jdbcType=NUMERIC}
						              , #{item.netWeight, jdbcType=NUMERIC}
						              , #{item.netWeightUom, jdbcType=VARCHAR}
						              , #{item.inspectionYn, jdbcType=VARCHAR}
						              , #{item.defectType, jdbcType=VARCHAR}
						              , #{item.boxQty, jdbcType=NUMERIC}
						              , #{item.description, jdbcType=VARCHAR}
						              , #{item.valMsg, jdbcType=VARCHAR}
						              , #{item.multiMsg, jdbcType=VARCHAR}
						              , #{item.userId, jdbcType=VARCHAR}
						              , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
						              )
        </foreach>
    </insert>
    <select id="proc_customBtn2-2" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
       { CALL MOM_WO_PKG.SP_CREATE_WO_OP_RESULT_TYPE1( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                 , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                           	     , #{companyCd,  jdbcType=VARCHAR , mode=IN}
					                           	     , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                           	     , 'E'											  
					                           	     , #{userId,     jdbcType=VARCHAR, mode=IN} )}       	              
  </select>  
  <delete id="remove_customBtn2-3" parameterType="java.util.List">
        DELETE FROM MOM_PROC_WO_NON_WORK
        <where>
        <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  BUTTON_TYPE = 'H'
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
        </foreach>
        </where>
    </delete>
    <insert id="create_customBtn2-3" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_WO_NON_WORK( COMPANY_CD
								 , DIVISION_CD
								 , BUTTON_TYPE
							 	 , WORK_ORDER_ID
								 , WO_RESULT_ID
								 , OPERATION_ID
								 , REASON_CD
								 , DESCRIPTION
								 , VAL_MSG
								 , MULTI_MSG
								 , CREATE_BY
								 , CREATE_DATE
								 )
        VALUES                   ( #{item.companyCd, jdbcType=VARCHAR}
				                 , #{item.divisionCd, jdbcType=VARCHAR}
				                 , 'H'
				                 , #{item.workOrderId, jdbcType=VARCHAR}
				                 , #{item.woResultId, jdbcType=VARCHAR}
				                 , #{item.operationId, jdbcType=VARCHAR}
				                 , #{item.nonWorkReasonCd, jdbcType=VARCHAR}
				                 , #{item.description, jdbcType=VARCHAR}
				                 , #{item.valMsg, jdbcType=VARCHAR}
				                 , #{item.multiMsg, jdbcType=VARCHAR}
				                 , #{item.userId, jdbcType=VARCHAR}
				                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
				                 )
        </foreach>
    </insert>
    <select id="proc_customBtn2-3" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
       { CALL MOM_WO_PKG.SP_CREATE_WO_HOLD_RELEASE( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                              , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                           	  , #{companyCd,  jdbcType=VARCHAR , mode=IN}
					                           	  , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                           	  , 'H'											  
					                           	  , #{userId,     jdbcType=VARCHAR, mode=IN} )}       	              
  </select>  
  <delete id="remove_customBtn2-4" parameterType="java.util.List">
        DELETE FROM MOM_PROC_WO_NON_WORK
        <where>
        <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  BUTTON_TYPE = 'R'
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
        </foreach>
        </where>
    </delete>
    <insert id="create_customBtn2-4" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_WO_NON_WORK( COMPANY_CD
								 , DIVISION_CD
								 , BUTTON_TYPE
							 	 , WORK_ORDER_ID
								 , WO_RESULT_ID
								 , OPERATION_ID
								 , REASON_CD
								 , DESCRIPTION
								 , VAL_MSG
								 , MULTI_MSG
								 , CREATE_BY
								 , CREATE_DATE
								 )
        VALUES                   ( #{item.companyCd, jdbcType=VARCHAR}
				                 , #{item.divisionCd, jdbcType=VARCHAR}
				                 , 'R'
				                 , #{item.workOrderId, jdbcType=VARCHAR}
				                 , #{item.woResultId, jdbcType=VARCHAR}
				                 , #{item.operationId, jdbcType=VARCHAR}
				                 , #{item.nonWorkReasonCd, jdbcType=VARCHAR}
				                 , #{item.description, jdbcType=VARCHAR}
				                 , #{item.valMsg, jdbcType=VARCHAR}
				                 , #{item.multiMsg, jdbcType=VARCHAR}
				                 , #{item.userId, jdbcType=VARCHAR}
				                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
				                 )
        </foreach>
    </insert>
    <select id="proc_customBtn2-4" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
       { CALL MOM_WO_PKG.SP_CREATE_WO_HOLD_RELEASE( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                              , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                           	  , #{companyCd,  jdbcType=VARCHAR , mode=IN}
					                           	  , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                           	  , 'R'											  
					                           	  , #{userId,     jdbcType=VARCHAR, mode=IN} )}       	              
  </select>  
</mapper>