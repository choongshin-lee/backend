<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUPP1090">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
    SELECT A.*
	FROM   (
	</if>  
		    SELECT A.*
			FROM   (SELECT CPP.COMPANY_CD
			             , CPP.DIVISION_CD
			             , CPP.DEMAND_ID               
			             , CPP.SALES_ORDER_ID 
			             , CPP.PRODUCT_ORDER_ID      AS PRODUCT_PLAN_ID
			             , CPP.NEXT_PO_ID            AS NEXT_PP_ID
			             , CPP.ITEM_ID
			             , MI.ITEM_NM
			             , MI.ITEM_TYPE
			             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_TYPE_NM     
			             , MI.ITEM_SPEC
			             , CPP.WORK_CENTER_CD
			             , MWC.WORK_CENTER_NM
			             , TO_CHAR(CPP.PLAN_DATE ,'YYYY-MM-DD') AS PLAN_DATE
			             , CPP.WEEK
			             , CPP.UOM
			             , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(CPP.COMPANY_CD, CPP.DIVISION_CD, CPP.UOM) FROM DUAL) AS UOM_NM
			             , CPP.PLAN_QTY
			             , CPP.ROOT_ITEM_ID           
			             , CPP.FIX_FLAG               
			             , CPP.PP_CONFIRM_FLAG
			             , CPP.MERGE_PO_ID
			             , CPP.SORT_NO
			             , (SELECT MPP.PRODUCT_ORDER_ID
			                FROM   MOM_PRODUCT_ORDER MPP
			                WHERE  MPP.COMPANY_CD      = CPP.COMPANY_CD
			                AND    MPP.DIVISION_CD     = CPP.DIVISION_CD
			                AND    MPP.PRODUCT_PLAN_ID = CPP.MERGE_PO_ID)  AS PRODUCT_ORDER_ID
			             , CPP.UPDATE_BY  AS UPDATE_USER_NO
                         ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(CPP.COMPANY_CD, CPP.DIVISION_CD, CPP.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
                         , TO_CHAR(CPP.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE   
			             , ROWIDTOCHAR(CPP.ROWID)     AS KEY_ID
			             , COUNT(*) OVER()            AS TOTAL_COUNT
			             , ROW_NUMBER() OVER(PARTITION BY CPP.COMPANY_CD, CPP.DIVISION_CD ORDER BY CPP.PRODUCT_ORDER_ID ) AS ROW_CNT         
			        FROM   CAL_OUT_PRODUCTION_PLAN CPP
			             , MOM_ITEM   MI
			             , MOM_WORK_CENTER MWC
			        WHERE  CPP.COMPANY_CD      = MI.COMPANY_CD
			        AND    CPP.DIVISION_CD     = MI.DIVISION_CD
			        AND    CPP.ITEM_ID         = MI.ITEM_ID
			        AND    CPP.COMPANY_CD     = MWC.COMPANY_CD(+)
			        AND    CPP.DIVISION_CD    = MWC.DIVISION_CD(+)
			        AND    CPP.WORK_CENTER_CD = MWC.WORK_CENTER_CD(+)    
			        AND    CPP.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
			        AND    CPP.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}
			        AND    CPP.PLAN_DATE BETWEEN TO_DATE(#{planDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{planDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
			        <if test="itemIdNm != null and itemIdNm != ''">
			        AND    (UPPER(CPP.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')
			        </if> 
			        <if test="workCenterCdNm != null and workCenterCdNm != ''">
			        AND    (UPPER(CPP.WORK_CENTER_CD) LIKE '%' || UPPER(#{workCenterCdNm , jdbcType=VARCHAR}) || '%' OR UPPER(MWC.WORK_CENTER_CD) LIKE '%' || UPPER(#{workCenterCdNm , jdbcType=VARCHAR})) 
			        </if>	
			        <if test="salesOrderId != null and salesOrderId != ''">
			        AND    (UPPER(CPP.SALES_ORDER_ID ) LIKE '%' || UPPER(#{salesOrderId, jdbcType=VARCHAR}) || '%')	  
			        </if>
			        <if test="demandId != null and demandId != ''">
			        AND    (UPPER(CPP.DEMAND_ID ) LIKE '%' || UPPER(#{demandId, jdbcType=VARCHAR}) || '%')	  
			        </if> ) A
			WHERE   1 = 1        
			<if test="productOrderId != null and productOrderId != ''">
			AND    (UPPER(A.PRODUCT_ORDER_ID ) LIKE '%' || UPPER(#{productOrderId, jdbcType=VARCHAR}) || '%')	  
			</if>
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	       ) A
	WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
	</if>
    </select>
	<select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_PP_PKG.MAIN( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
                          , #{companyCd,  jdbcType=VARCHAR, mode=IN}
                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}		
                          , 'PRE'									  
                          , #{userId,     jdbcType=VARCHAR, mode=IN} )}       	              
    </select>    
</mapper>