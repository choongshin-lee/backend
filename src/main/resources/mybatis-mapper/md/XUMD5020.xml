<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD5020">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">    
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
        FROM   (
         </if>
                SELECT MLS.COMPANY_CD
                     , MLS.DIVISION_CD
                     , MLS.LOCATION_CD
                     , ML.LOCATION_NM
                     , MLS.ITEM_ID
                     , MI.ITEM_NM
                     , MLS.LIMIT_QTY
                     , MI.ITEM_SPEC
                     , MI.ITEM_TYPE
                     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_TYPE_NM
                     , MLS.USE_YN
                     , MLS.DESCRIPTION
                     , MLS.UPDATE_BY      AS UPDATE_USER_NO
                     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLS.COMPANY_CD, MLS.DIVISION_CD, MLS.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
                     , TO_CHAR(MLS.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
                     , ROWIDTOCHAR(MLS.ROWID)            AS KEY_ID
                     , COUNT(*) OVER()   AS TOTAL_COUNT
                     , ROW_NUMBER() OVER(PARTITION BY MLS.COMPANY_CD,MLS.DIVISION_CD ORDER BY MLS.LOCATION_CD, MLS.ITEM_ID) AS ROW_CNT
                FROM   MOM_LOCATION_STORAGE_LIMIT MLS
                     , MOM_LOCATION ML
                     , MOM_ITEM MI
                WHERE  MLS.COMPANY_CD  = ML.COMPANY_CD
                AND    MLS.DIVISION_CD = ML.DIVISION_CD     
                AND    MLS.LOCATION_CD = ML.LOCATION_CD
                AND    MLS.COMPANY_CD  = MI.COMPANY_CD
                AND    MLS.DIVISION_CD = MI.DIVISION_CD     
                AND    MLS.ITEM_ID     = MI.ITEM_ID
                AND    MLS.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
                AND    MLS.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                <if test="locationCdNm != null and locationCdNm != ''">
                AND    (UPPER(MLS.LOCATION_CD) LIKE '%' || UPPER(#{locationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(ML.LOCATION_NM) LIKE '%' || UPPER(#{locationCdNm, jdbcType=VARCHAR}) || '%')    
                </if>
                <if test="itemIdNm != null and itemIdNm != ''">
                AND    (UPPER(MLS.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')    
                </if>
                <if test="itemType != null and itemType != ''">
                AND    MI.ITEM_TYPE IN (${itemType})
                </if>  
                <if test="useYn != null and useYn != ''">
                AND    MLS.USE_YN = #{useYn, jdbcType=VARCHAR}
                </if>  
                <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
               ) A
        WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
        </if>
    </select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_LOCATION_ST_LIMIT
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
          )
            </foreach>
        </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_LOCATION_ST_LIMIT( COMPANY_CD
                                       , DIVISION_CD
                                       , LOCATION_CD
                                       , ITEM_ID
                                       , LIMIT_QTY
                                       , USE_YN
                                       , DESCRIPTION
                                       , DEL_YN
                                       , VAL_MSG
                                       , MULTI_MSG
                                       , CREATE_BY
                                       , CREATE_DATE
                                       )
        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
                                       , #{item.divisionCd, jdbcType=VARCHAR}
                                       , #{item.locationCd, jdbcType=VARCHAR}
                                       , #{item.itemId, jdbcType=VARCHAR}
                                       , #{item.limitQty, jdbcType=NUMERIC}
                                       , #{item.useYn, jdbcType=VARCHAR}
                                       , #{item.description, jdbcType=VARCHAR}
                                       , #{item.delYn, jdbcType=VARCHAR}
                                       , #{item.valMsg, jdbcType=VARCHAR}
                                       , #{item.multiMsg, jdbcType=VARCHAR}
                                       , #{item.userId, jdbcType=VARCHAR}
                                       , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                       )
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_LOCATION_STORAGE_LIMIT( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                                   , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                                   , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                                   , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                                   , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
                                                                   , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select> 
        <select id="get_excelUpBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
             , MULTI_MSG      
        FROM   MOM_PROC_LOCATION_ST_LIMIT
        WHERE  COMPANY_CD  = #{companyCd , jdbcType=VARCHAR}
        AND    DIVISION_CD = #{divisionCd , jdbcType=VARCHAR}
        AND    CREATE_BY    = #{userId , jdbcType=VARCHAR}
    </select> 
    <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_LOCATION_ST_LIMIT
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
          )
            </foreach>
        </where>
    </delete>  
    <insert id="create_excelUpBtnV1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_LOCATION_ST_LIMIT( COMPANY_CD
                                       , DIVISION_CD
                                       , LOCATION_CD
                                       , ITEM_ID
                                       , LIMIT_QTY
                                       , USE_YN
                                       , DESCRIPTION
                                       , DEL_YN
                                       , VAL_MSG
                                       , MULTI_MSG
                                       ,  CREATE_BY
                                       , CREATE_DATE
                                       )
        VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}
                                       , #{item.divisionCd, jdbcType=VARCHAR}
                                       , #{item.locationCd, jdbcType=VARCHAR}
                                       , #{item.itemId, jdbcType=VARCHAR}
                                       , #{item.limitQty, jdbcType=NUMERIC}
                                       , #{item.useYn, jdbcType=VARCHAR}
                                       , #{item.description, jdbcType=VARCHAR}
                                       , 'N'
                                       , #{item.valMsg, jdbcType=VARCHAR}
                                       , #{item.multiMsg, jdbcType=VARCHAR}
                                       , #{item.userId, jdbcType=VARCHAR}
                                       , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                       )
        </foreach>
    </insert>
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_LOCATION_STORAGE_LIMIT( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                                   , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                                   , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                                   , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                                   , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
                                                                   , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select> 
</mapper>              
