<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD2020">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
  	    SELECT LPAD(LEVEL, DECODE(LEVEL,1,1,(LEVEL*2)-1),'.') AS BOM_LEVEL
		     , LEVEL   
		     , MB.PARENT_ITEM_ID
		     , MB.PARENT_ITEM_ID AS PARENT_ITEM_ID2
		     , MB.CHILD_ITEM_ID     
		     , MB.REQ_QTY 
		     , MB.PHANTOM_FLAG  
		     , MB.MRP_FLAG
		     , MB.DEDUCT_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MB.COMPANY_CD,MB.DIVISION_CD, 'MD0006', MB.DEDUCT_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS DEDUCT_TYPE_NM
		     , TO_CHAR(MB.START_DATE,'YYYY-MM-DD') AS START_DATE
		     , TO_CHAR(MB.END_DATE,'YYYY-MM-DD') AS END_DATE          
		     , MB.SORT_NO  
		     , MB.UPDATE_BY   AS UPDATE_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		     , TO_CHAR(MB.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , MI.ITEM_NM AS CHILD_ITEM_NM    
		     , MI.ITEM_SPEC
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_TYPE_NM     
		     , MI.MFG_UOM  AS UOM
	         , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME( MB.COMPANY_CD,MB.DIVISION_CD, MI.MFG_UOM ) FROM DUAL) AS UOM_NM 
	         , MB.CONVERSION_UOM
	         , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME( MB.COMPANY_CD,MB.DIVISION_CD, MB.CONVERSION_UOM ) FROM DUAL) AS CONVERSION_UOM_NM 
	         , MB.CONVERSION_QTY
		     , MI.STORAGE_WAREHOUSE_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MB.COMPANY_CD,MB.DIVISION_CD,MI.STORAGE_WAREHOUSE_CD) FROM DUAL) AS STORAGE_WAREHOUSE_NM
		     , (SELECT MOM_COMMON_PKG.FN_GET_PRIMARY_WORK_CENTER_CD(MB.COMPANY_CD, MB.DIVISION_CD, MB.CHILD_ITEM_ID) FROM DUAL) AS WORK_CENTER_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_WORK_CENTER_NAME( MB.COMPANY_CD
                                                             , MB.DIVISION_CD
                                                             , (SELECT MOM_COMMON_PKG.FN_GET_PRIMARY_WORK_CENTER_CD(MB.COMPANY_CD, MB.DIVISION_CD, MB.CHILD_ITEM_ID) FROM DUAL)) 
               FROM   DUAL)  AS WORK_CENTER_NM
		     , MB.COMPANY_CD
		     , MB.DIVISION_CD
		     , MB.DESCRIPTION
		     , CONNECT_BY_ROOT(MB.CHILD_ITEM_ID)             AS BOM_ROOT
		     , SYS_CONNECT_BY_PATH(MB.CHILD_ITEM_ID, ' -> ') AS BOM_PATH
		     , CONNECT_BY_ISLEAF                             AS BOM_LEAF
		     , SYS_CONNECT_BY_PATH(MB.CHILD_ITEM_ID, ' -> ')  AS KEY_ID
        FROM   MOM_BOM MB
		     , MOM_ITEM MI
		WHERE  MB.COMPANY_CD    = MI.COMPANY_CD
		AND    MB.DIVISION_CD   = MI.DIVISION_CD
		AND    MB.CHILD_ITEM_ID = MI.ITEM_ID 
	    AND    MB.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    MB.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}  	
		<choose>
	 	    <when test='deploymentType.equals("E")'>
	  	  	START WITH MB.PARENT_ITEM_ID = #{childItemId, jdbcType=VARCHAR}   
	  	  	<if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
		    CONNECT BY PRIOR MB.CHILD_ITEM_ID = MB.PARENT_ITEM_ID  
		    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
	  	    </when>  
	 	    <when test='deploymentType.equals("I")'>
	  	  	START WITH MB.CHILD_ITEM_ID  = #{childItemId, jdbcType=VARCHAR}  
	  	  	<if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
		    CONNECT BY PRIOR MB.PARENT_ITEM_ID = MB.CHILD_ITEM_ID 
		    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>   
	  	    </when>    
	  	    <otherwise>
	  	    START WITH MB.PARENT_ITEM_ID = #{childItemId, jdbcType=VARCHAR}   
	  	    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
		    CONNECT BY PRIOR MB.CHILD_ITEM_ID = MB.PARENT_ITEM_ID
		    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>  
	  	    </otherwise>
	    </choose>						
    </select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_BOM
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
               AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>      
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_BOM( COMPANY_CD
						 , DIVISION_CD
						 , PARENT_ITEM_ID
						 , CHILD_ITEM_ID
						 , REQ_QTY
						 , START_DATE
						 , END_DATE
						 , PHANTOM_FLAG
						 , MRP_FLAG
						 , DEDUCT_TYPE
						 , SORT_NO
						 , DESCRIPTION
						 , DEL_YN
						 , VAL_MSG
						 , MULTI_MSG
						 , CREATE_BY
						 , CREATE_DATE )
        VALUES           ( #{item.companyCd, jdbcType=VARCHAR}
                         , #{item.divisionCd, jdbcType=VARCHAR}
                         , #{item.parentItemId, jdbcType=VARCHAR}
                         , #{item.childItemId, jdbcType=VARCHAR}
                         , #{item.reqQty, jdbcType=VARCHAR}
                         , TO_DATE(#{item.startDate,  jdbcType=VARCHAR},'YYYY-MM-DD')
                         , TO_DATE(#{item.endDate,    jdbcType=VARCHAR},'YYYY-MM-DD')
                         , #{item.phantomFlag,        jdbcType=VARCHAR}
			             , #{item.mrpFlag,            jdbcType=VARCHAR}
			             , #{item.deductType,         jdbcType=VARCHAR}
			             , #{item.sortNo,             jdbcType=NUMERIC}
                         , #{item.description, jdbcType=VARCHAR}
                         , #{item.delYn, jdbcType=VARCHAR}
                         , #{item.valMsg, jdbcType=VARCHAR}
                         , #{item.multiMsg, jdbcType=VARCHAR}
                         , #{item.userId, jdbcType=VARCHAR}
                         , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                         )
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_BOM( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
                                                , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>  
    <select id="get_excelUpBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
             , MULTI_MSG      
        FROM   MOM_PROC_BOM
        WHERE  COMPANY_CD  = #{companyCd , jdbcType=VARCHAR}
        AND    DIVISION_CD = #{divisionCd , jdbcType=VARCHAR}
        AND    CREATE_BY   = #{userId , jdbcType=VARCHAR}
    </select>          
    <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_BOM
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
               AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>
    <insert id="create_excelUpBtnV1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_BOM( COMPANY_CD
						 , DIVISION_CD
						 , PARENT_ITEM_ID
						 , CHILD_ITEM_ID
						 , REQ_QTY
						 , START_DATE
						 , END_DATE
						 , PHANTOM_FLAG
						 , MRP_FLAG
						 , DEDUCT_TYPE
						 , SORT_NO
						 , DESCRIPTION
						 , DEL_YN
						 , VAL_MSG
						 , MULTI_MSG
						 , CREATE_BY
						 , CREATE_DATE )
        VALUES           ( #{item.companyCd,         jdbcType=VARCHAR}
                         , #{item.divisionCd, 		 jdbcType=VARCHAR}
                         , #{item.parentItemId,      jdbcType=VARCHAR}
                         , #{item.childItemId,       jdbcType=VARCHAR}
                         , #{item.reqQty,            jdbcType=VARCHAR}
                         , TO_DATE(#{item.startDate, jdbcType=VARCHAR},'YYYY-MM-DD')
                         , TO_DATE(#{item.endDate,   jdbcType=VARCHAR},'YYYY-MM-DD')
                         , #{item.phantomFlag,       jdbcType=VARCHAR}
			             , #{item.mrpFlag,           jdbcType=VARCHAR}
			             , #{item.deductType,        jdbcType=VARCHAR}
			             , #{item.sortNo,            jdbcType=NUMERIC}
                         , #{item.description,       jdbcType=VARCHAR}
                         , 'N'
                         , #{item.valMsg, jdbcType=VARCHAR}
                         , #{item.multiMsg, jdbcType=VARCHAR}
                         , #{item.userId, jdbcType=VARCHAR}
                         , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                         )
        </foreach>
    </insert>
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_BOM( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
                                                , #{userId,      jdbcType=VARCHAR, mode=IN} )}                
    </select>  
</mapper>
