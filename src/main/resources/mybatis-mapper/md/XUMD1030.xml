<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD1030">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		SELECT * 
		FROM  ( 
		</if>
		        SELECT MP.COMPANY_CD
		             , MP.DIVISION_CD
		             , MP.PARTNER_CD
		             , MP.PARTNER_NM
		             , MP.PARTNER_NM_ENG
		             , MP.PARTNER_TYPE
		             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MP.COMPANY_CD,MP.DIVISION_CD,'MD0018', MP.PARTNER_TYPE, #{langCd, jdbcType=VARCHAR})  FROM DUAL ) AS PARTNER_TYPE_NM
		             , MP.BUSINESS_NO
		             , MP.BUSINESS_ITEM
		             , MP.BUSINESS_TYPE
		             , MP.TEL_NO
		             , MP.FAX_NO
		             , MP.EMAIL
		             , MP.ADDRESS
		             , MP.REPRESENTATIVE_NM
		             , MP.PARTNER_USER_NM
		             , MP.DO_INVOICE_YN
		             , MP.TAX_TYPE
		             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MP.COMPANY_CD,MP.DIVISION_CD,'SM0029', MP.TAX_TYPE, #{langCd, jdbcType=VARCHAR})  FROM DUAL ) AS TAX_TYPE_NM
		             , MP.COUNTRY_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MP.COMPANY_CD,MP.DIVISION_CD,'SM0030', MP.COUNTRY_CD, #{langCd, jdbcType=VARCHAR})  FROM DUAL ) AS COUNTRY_NM
		             , MP.CURRENCY_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MP.COMPANY_CD,MP.DIVISION_CD,'SM0017', MP.CURRENCY_CD, #{langCd, jdbcType=VARCHAR})  FROM DUAL ) AS CURRENCY_NM
		             , MP.USE_YN
		             , MP.DESCRIPTION
		             , MP.UPDATE_BY                                      AS UPDATE_USER_NO
		             , ( SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MP.COMPANY_CD,MP.DIVISION_CD,MP.UPDATE_BY) FROM DUAL) AS UPDATE_USER_NM
		             , TO_CHAR(MP.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		             , ROWIDTOCHAR(MP.ROWID)  AS GRID_ID
		             , MP.PARTNER_CD     AS KEY_ID
		             , COUNT(*) OVER() AS TOTAL_COUNT
		             , ROW_NUMBER() OVER(PARTITION BY MP.COMPANY_CD,MP.DIVISION_CD ORDER BY MP.PARTNER_CD  ) AS ROW_COUNT	     
		        FROM   MOM_PARTNER MP
		        WHERE  MP.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		        AND    MP.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}      
		        <if test="partnerCd != null and partnerCd != ''">
		        AND    (TRIM(UPPER(MP.PARTNER_CD)) LIKE TRIM(UPPER(#{partnerCd, jdbcType=VARCHAR})) || '%' ) 
		        </if>
		        <if test="partnerNm != null and partnerNm != ''">
		        AND    (TRIM(UPPER(MP.PARTNER_NM)) LIKE '%' || TRIM(UPPER(#{partnerNm, jdbcType=VARCHAR})) || '%' )
		        </if>
		        <if test="partnerType != null and partnerType != ''">
		        AND    MP.PARTNER_TYPE IN (${partnerType})
		        </if>
		          <if test="useYn != null and useYn != ''">
		        AND    MP.USE_YN = #{useYn, jdbcType=VARCHAR}
		        </if>
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
			       ) A
		WHERE ROW_COUNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>  													
	</select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_PARTNER
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	          )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PARTNER( COMPANY_CD
							 , DIVISION_CD
							 , PARTNER_CD
							 , PARTNER_NM
							 , PARTNER_NM_ENG
							 , PARTNER_TYPE
							 , BUSINESS_NO
							 , BUSINESS_ITEM
							 , BUSINESS_TYPE
							 , TEL_NO
							 , FAX_NO
							 , EMAIL
							 , ADDRESS
							 , REPRESENTATIVE_NM
							 , PARTNER_USER_NM
							 , DO_INVOICE_YN
							 , TAX_TYPE
							 , COUNTRY_CD
							 , CURRENCY_CD
							 , USE_YN
							 , DESCRIPTION
							 , DEL_YN
							 , VAL_MSG
							 , MULTI_MSG
						 	 , CREATE_BY
							 , CREATE_DATE
							 )
        VALUES                
                             ( #{item.companyCd,        jdbcType=VARCHAR}
				             , #{item.divisionCd,       jdbcType=VARCHAR}
				             , #{item.partnerCd,        jdbcType=VARCHAR}
				             , #{item.partnerNm,        jdbcType=VARCHAR}
				             , #{item.partnerNmEng,     jdbcType=VARCHAR}
				             , #{item.partnerType,      jdbcType=VARCHAR}
				             , #{item.businessNo,       jdbcType=VARCHAR}
				             , #{item.businessItem,     jdbcType=VARCHAR}
				             , #{item.businessType,     jdbcType=VARCHAR}
				             , #{item.telNo,            jdbcType=VARCHAR}
				             , #{item.faxNo,            jdbcType=VARCHAR}
				             , #{item.email,            jdbcType=VARCHAR}
				             , #{item.address,          jdbcType=INTEGER}
				             , #{item.representativeNm, jdbcType=VARCHAR}
				             , #{item.partnerUserNm,    jdbcType=VARCHAR}
				             , #{item.doInvoiceYn,      jdbcType=VARCHAR}
				             , #{item.taxType,          jdbcType=VARCHAR}
				             , #{item.countryCd,        jdbcType=VARCHAR}
				             , #{item.currencyCd,       jdbcType=VARCHAR}
				             , #{item.useYn,   		    jdbcType=VARCHAR}  
				             , #{item.description,      jdbcType=VARCHAR}    
				             , #{item.delYn, jdbcType=VARCHAR}
			                 , #{item.valMsg, jdbcType=VARCHAR}
			                 , #{item.multiMsg, jdbcType=VARCHAR}
			                 , #{item.userId, jdbcType=VARCHAR}
			                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                     )
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_PARTNER( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                                , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                                , #{companyCd,   jdbcType=VARCHAR, mode=IN}
	                                                , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
	                                                , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
	                                                , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>       
    <select id="get_excelUpBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
	         , MULTI_MSG      
	    FROM   MOM_PROC_PARTNER
	    WHERE  COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    CREATE_BY   = #{userId, jdbcType=VARCHAR}
    </select> 
    <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_PARTNER
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	          )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_excelUpBtnV1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PARTNER( COMPANY_CD
							 , DIVISION_CD
							 , PARTNER_CD
							 , PARTNER_NM
							 , PARTNER_NM_ENG
							 , PARTNER_TYPE
							 , BUSINESS_NO
							 , BUSINESS_ITEM
							 , BUSINESS_TYPE
							 , TEL_NO
							 , FAX_NO
							 , EMAIL
							 , ADDRESS
							 , REPRESENTATIVE_NM
							 , PARTNER_USER_NM
							 , DO_INVOICE_YN
							 , TAX_TYPE
							 , COUNTRY_CD
							 , CURRENCY_CD
							 , USE_YN
							 , DESCRIPTION
							 , DEL_YN
							 , VAL_MSG
							 , MULTI_MSG
						 	 , CREATE_BY
							 , CREATE_DATE
							 )
        VALUES                
                             ( #{item.companyCd,        jdbcType=VARCHAR}
				             , #{item.divisionCd,       jdbcType=VARCHAR}
				             , #{item.partnerCd,        jdbcType=VARCHAR}
				             , #{item.partnerNm,        jdbcType=VARCHAR}
				             , #{item.partnerNmEng,     jdbcType=VARCHAR}
				             , #{item.partnerType,      jdbcType=VARCHAR}
				             , #{item.businessNo,       jdbcType=VARCHAR}
				             , #{item.businessItem,     jdbcType=VARCHAR}
				             , #{item.businessType,     jdbcType=VARCHAR}
				             , #{item.telNo,            jdbcType=VARCHAR}
				             , #{item.faxNo,            jdbcType=VARCHAR}
				             , #{item.email,            jdbcType=VARCHAR}
				             , #{item.address,          jdbcType=INTEGER}
				             , #{item.representativeNm, jdbcType=VARCHAR}
				             , #{item.partnerUserNm,    jdbcType=VARCHAR}
				             , #{item.doInvoiceYn,      jdbcType=VARCHAR}
				             , #{item.taxType,          jdbcType=VARCHAR}
				             , #{item.countryCd,        jdbcType=VARCHAR}
				             , #{item.currencyCd,       jdbcType=VARCHAR}
				             , #{item.useYn,   		    jdbcType=VARCHAR}  
				             , #{item.description,      jdbcType=VARCHAR} }    
				             , 'N'
			                 , #{item.valMsg, jdbcType=VARCHAR}
			                 , #{item.multiMsg, jdbcType=VARCHAR}
			                 , #{item.userId, jdbcType=VARCHAR}
			                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                     )
        </foreach>
    </insert>
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_PARTNER( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                                , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                                , #{companyCd,   jdbcType=VARCHAR, mode=IN}
	                                                , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
	                                                , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
	                                                , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>     
</mapper>
