<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD2010">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
    SELECT A.*
    FROM   (
     </if>
            SELECT MI.ITEM_ID
                 , MI.ITEM_NM
                 , MI.ITEM_GROUP_CD
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0001', MI.ITEM_GROUP_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_GROUP_NM
                 , MI.ITEM_TYPE
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_TYPE_NM
                 , MI.ITEM_SPEC
                 , MI.UNIT
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0003', MI.UNIT, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS UNIT_NM
                 , MI.PURCHASE_UNIT
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0003', MI.PURCHASE_UNIT, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS PURCHASE_NM
                 , MI.PROCUREMENT_TYPE
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0004', MI.PROCUREMENT_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS PROCUREMENT_TYPE_NM
                 , MI.MATERIAL_TYPE
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0005', MI.MATERIAL_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS MATERIAL_TYPE_NM
                 , MI.NET_WEIGHT
                 , MI.NET_WEIGHT_UNIT
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0003', MI.NET_WEIGHT_UNIT, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS NET_WEIGHT_UNIT_NM
                 , MI.GROSS_WEIGHT
                 , MI.GROSS_WEIGHT_UNIT
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0003', MI.GROSS_WEIGHT_UNIT, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS GROSS_WEIGHT_UNIT_NM
                 , MI.IN_LOCATION_CD
                 , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.IN_LOCATION_CD) FROM DUAL) AS IN_LOCATION_NM
                 , MI.OUT_LOCATION_CD
                 , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.OUT_LOCATION_CD) FROM DUAL) AS OUT_LOCATION_NM
                 , MI.STORAGE_LOCATION_CD
                 , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.STORAGE_LOCATION_CD) FROM DUAL) AS STORAGE_LOCATION_NM
                 , MI.ISSUE_TYPE
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0006', MI.ISSUE_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ISSUE_TYPE_NM
                 , MI.ISSUE_UNIT
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0003', MI.ISSUE_UNIT, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ISSUE_UNIT_NM
                 , MI.VENDOR_CD
                 , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.VENDOR_CD) FROM DUAL ) AS VENDOR_NM
                 , MI.DEPARTURE_VENDOR_CD
                 , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.DEPARTURE_VENDOR_CD) FROM DUAL ) AS DEPARTURE_VENDOR_NM
                 , MI.TEST_REPORT_FLAG
                 , MI.IQC_FLAG
                 , MI.PQC_FLAG
                 , MI.FQC_FLAG
                 , MI.OQC_FLAG
                 , MI.RP_ITEM_ID
                 , MI.ITEM_CATEGORY_L
                 , MI.ITEM_CATEGORY_M
                 , MI.ITEM_CATEGORY_S
                 , MI.EXCEPTION_ISSUE_FLAG
                 , MI.COLOR
                 , MI.CUSTOMER_DIVISION_CD
                 , MI.MAKER
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0007', MI.MAKER, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS MAKER_NM
                 , MI.ABC_TYPE
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0008', MI.ABC_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ABC_TYPE_NM
                 , MI.DRAWING_NO
                 , MI.HS_CD
                 , MI.REORDER_POINT
                 , MI.SAFETY_STOCK_QTY
                 , MI.USE_YN
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'SM0001', MI.USE_YN, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS USE_YN_NM
                 , MI.DESCRIPTION
                 , MI.CREATE_BY
                 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.CREATE_BY) FROM DUAL ) AS CREATEBYNM
                 , TO_CHAR(MI.CREATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
                 , MI.UPDATE_BY
                 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.UPDATE_BY) FROM DUAL ) AS UPDATEBYNM
                 , TO_CHAR(MI.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
                 , ROWIDTOCHAR(MI.ROWID) AS GRID_ID
                 , COUNT(*) OVER() AS TOTAL_COUNT
                 , ROW_NUMBER() OVER(PARTITION BY MI.COMPANY_CD,MI.DIVISION_CD ORDER BY MI.ITEM_ID) AS KEY_ID
            FROM   MOM_ITEM MI
            WHERE  MI.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
            AND    MI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	        <if test="itemId != null and itemId != ''">
            AND    UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemId, jdbcType=VARCHAR}) || '%' 
	        </if>
	        <if test="itemNm != null and itemNm != ''">
            AND    UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemNm , jdbcType=VARCHAR}) || '%' 
	        </if>
	        <if test="itemType != null and itemType != ''">
            AND    MI.ITEM_TYPE IN (${itemType})
	        </if>
	        <if test="itemSpec != null and itemSpec != ''">
            AND    UPPER(MI.ITEM_SPEC) LIKE '%' || TRIM(UPPER(#{itemSpec , jdbcType=VARCHAR})) || '%' 
	        </if>
	        <if test="useYn != null and useYn != ''">
            AND    MI.USE_YN = #{useYn, jdbcType=VARCHAR}
	        </if>
	<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	       ) A
    WHERE KEY_ID BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
    </if>
    </select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_ITEM
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
          )
            </foreach>
        </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_ITEM( COMPANY_CD
						  , DIVISION_CD
						  , ITEM_ID
						  , ITEM_NM
						  , ITEM_GROUP_CD
						  , ITEM_TYPE
					      , ITEM_SPEC
						  , UNIT
					  	  , PURCHASE_UNIT
						  , PROCUREMENT_TYPE
						  , MATERIAL_TYPE
						  , NET_WEIGHT
						  , NET_WEIGHT_UNIT
						  , GROSS_WEIGHT
						  , GROSS_WEIGHT_UNIT
						  , IN_LOCATION_CD
						  , OUT_LOCATION_CD
						  , STORAGE_LOCATION_CD
						  , ISSUE_TYPE
						  , ISSUE_UNIT
						  , VENDOR_CD
						  , DEPARTURE_VENDOR_CD
						  , TEST_REPORT_FLAG
						  , IQC_FLAG
						  , PQC_FLAG
						  , FQC_FLAG
						  , OQC_FLAG
						  , RP_ITEM_ID
						  , ITEM_CATEGORY_L
						  , ITEM_CATEGORY_M
						  , ITEM_CATEGORY_S
						  , EXCEPTION_ISSUE_FLAG
						  , COLOR
						  , CUSTOMER_DIVISION_CD
						  , MAKER
						  , ABC_TYPE
						  , DRAWING_NO
						  , HS_CD
						  , REORDER_POINT
						  , SAFETY_STOCK_QTY
						  , USE_YN
						  , DESCRIPTION
						  , DEL_YN
						  , VAL_MSG
						  , MULTI_MSG
						  , CREATE_BY
						  , CREATE_DATE
                          )
        VALUES            ( #{item.companyCd, jdbcType=VARCHAR}
                          , #{item.divisionCd, jdbcType=VARCHAR}
                          , #{item.itemId, jdbcType=VARCHAR}
                          , #{item.itemNm, jdbcType=VARCHAR}
                          , #{item.itemGroupCd, jdbcType=VARCHAR}
                          , #{item.itemType, jdbcType=VARCHAR}
                          , #{item.itemSpec, jdbcType=VARCHAR}
                          , #{item.unit, jdbcType=VARCHAR}
                          , #{item.purchaseUnit, jdbcType=VARCHAR}
                          , #{item.procurementType, jdbcType=VARCHAR}
                          , #{item.materialType, jdbcType=VARCHAR}
                          , #{item.netWeight, jdbcType=VARCHAR}
                          , #{item.netWeightUnit, jdbcType=VARCHAR}
                          , #{item.grossWeight, jdbcType=VARCHAR}
                          , #{item.grossWeight_unit, jdbcType=VARCHAR}
                          , #{item.inLocationCd, jdbcType=VARCHAR}
                          , #{item.outLocationCd, jdbcType=VARCHAR}
                          , #{item.storageLocationCd, jdbcType=VARCHAR}
                          , #{item.issueType, jdbcType=VARCHAR}                          
                          , #{item.issueUnit, jdbcType=VARCHAR}                                                                                                
                          , #{item.vendorCd, jdbcType=VARCHAR}
                          , #{item.departureVendorCd, jdbcType=VARCHAR}
                          , #{item.testReportFlag, jdbcType=VARCHAR}
                          , #{item.iqcFlag, jdbcType=VARCHAR}
                          , #{item.pqcFlag, jdbcType=VARCHAR}
                          , #{item.fqcFlag, jdbcType=VARCHAR}
                          , #{item.oqcFlag, jdbcType=VARCHAR}
                          , #{item.rpItemId, jdbcType=VARCHAR}
                          , #{item.itemCategoryI, jdbcType=VARCHAR}
                          , #{item.itemCategoryM, jdbcType=VARCHAR}
                          , #{item.itemCategoryS, jdbcType=VARCHAR}                          
                          , #{item.exceptionIssueFlag, jdbcType=VARCHAR}  
                          , #{item.color, jdbcType=VARCHAR}  
                          , #{item.customerDivisionCd, jdbcType=VARCHAR}  
                          , #{item.maker, jdbcType=VARCHAR}
                          , #{item.abcType, jdbcType=VARCHAR}
                          , #{item.drawingNo, jdbcType=VARCHAR}
                          , #{item.hsCd, jdbcType=VARCHAR}
                          , #{item.reorderPoint, jdbcType=NUMERIC}
                          , #{item.safetyStockQty, jdbcType=NUMERIC}
                          , #{item.useYn, jdbcType=VARCHAR}
                          , #{item.description, jdbcType=VARCHAR}
                          , #{item.delYn, jdbcType=VARCHAR}
                          , #{item.valMsg, jdbcType=VARCHAR}
                          , #{item.multiMsg, jdbcType=VARCHAR}
                          , #{item.userId, jdbcType=VARCHAR}
                          , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                          )
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_ITEM( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                 , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                 , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                 , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                 , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
                                                 , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select> 
    <delete id="remove_delBtn1" parameterType="java.util.List">
    DELETE FROM MOM_ITEM
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
	        (       COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
	           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	           AND  ITEM_ID = #{item.itemId, jdbcType=VARCHAR}
	        )
            </foreach>
        </where>
    </delete>
    <select id="get_excelUpBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
             , MULTI_MSG      
        FROM   MOM_PROC_ITEM
        WHERE  COMPANY_CD  = #{companyCd , jdbcType=VARCHAR}
        AND    DIVISION_CD = #{divisionCd , jdbcType=VARCHAR}
        AND    CREATE_BY    = #{userId , jdbcType=VARCHAR}
    </select> 
    <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_ITEM
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
          )
            </foreach>
        </where>
    </delete>  
    <insert id="create_excelUpBtnV1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_ITEM( COMPANY_CD
						  , DIVISION_CD
						  , ITEM_ID
						  , ITEM_NM
						  , ITEM_GROUP_CD
						  , ITEM_TYPE
					      , ITEM_SPEC
						  , UNIT
					  	  , PURCHASE_UNIT
						  , PROCUREMENT_TYPE
						  , MATERIAL_TYPE
						  , NET_WEIGHT
						  , NET_WEIGHT_UNIT
						  , GROSS_WEIGHT
						  , GROSS_WEIGHT_UNIT
						  , IN_LOCATION_CD
						  , OUT_LOCATION_CD
						  , STORAGE_LOCATION_CD
						  , ISSUE_TYPE
						  , ISSUE_UNIT
						  , VENDOR_CD
						  , DEPARTURE_VENDOR_CD
						  , TEST_REPORT_FLAG
						  , IQC_FLAG
						  , PQC_FLAG
						  , FQC_FLAG
						  , OQC_FLAG
						  , RP_ITEM_ID
						  , ITEM_CATEGORY_L
						  , ITEM_CATEGORY_M
						  , ITEM_CATEGORY_S
						  , EXCEPTION_ISSUE_FLAG
						  , COLOR
						  , CUSTOMER_DIVISION_CD
						  , MAKER
						  , ABC_TYPE
						  , DRAWING_NO
						  , HS_CD
						  , REORDER_POINT
						  , SAFETY_STOCK_QTY
						  , USE_YN
						  , DESCRIPTION
						  , DEL_YN
						  , VAL_MSG
						  , MULTI_MSG
						  , CREATE_BY
						  , CREATE_DATE
                          )
        VALUES            ( #{item.companyCd, jdbcType=VARCHAR}
                          , #{item.divisionCd, jdbcType=VARCHAR}
                          , #{item.itemId, jdbcType=VARCHAR}
                          , #{item.itemNm, jdbcType=VARCHAR}
                          , #{item.itemGroupCd, jdbcType=VARCHAR}
                          , #{item.itemType, jdbcType=VARCHAR}
                          , #{item.itemSpec, jdbcType=VARCHAR}
                          , #{item.unit, jdbcType=VARCHAR}
                          , #{item.purchaseUnit, jdbcType=VARCHAR}
                          , #{item.procurementType, jdbcType=VARCHAR}
                          , #{item.materialType, jdbcType=VARCHAR}
                          , #{item.netWeight, jdbcType=VARCHAR}
                          , #{item.netWeightUnit, jdbcType=VARCHAR}
                          , #{item.grossWeight, jdbcType=VARCHAR}
                          , #{item.grossWeight_unit, jdbcType=VARCHAR}
                          , #{item.inLocationCd, jdbcType=VARCHAR}
                          , #{item.outLocationCd, jdbcType=VARCHAR}
                          , #{item.storageLocationCd, jdbcType=VARCHAR}
                          , #{item.issueType, jdbcType=VARCHAR}                          
                          , #{item.issueUnit, jdbcType=VARCHAR}                                                                                                
                          , #{item.vendorCd, jdbcType=VARCHAR}
                          , #{item.departureVendorCd, jdbcType=VARCHAR}
                          , #{item.testReportFlag, jdbcType=VARCHAR}
                          , #{item.iqcFlag, jdbcType=VARCHAR}
                          , #{item.pqcFlag, jdbcType=VARCHAR}
                          , #{item.fqcFlag, jdbcType=VARCHAR}
                          , #{item.oqcFlag, jdbcType=VARCHAR}
                          , #{item.rpItemId, jdbcType=VARCHAR}
                          , #{item.itemCategoryI, jdbcType=VARCHAR}
                          , #{item.itemCategoryM, jdbcType=VARCHAR}
                          , #{item.itemCategoryS, jdbcType=VARCHAR}                          
                          , #{item.exceptionIssueFlag, jdbcType=VARCHAR}  
                          , #{item.color, jdbcType=VARCHAR}  
                          , #{item.customerDivisionCd, jdbcType=VARCHAR}  
                          , #{item.maker, jdbcType=VARCHAR}
                          , #{item.abcType, jdbcType=VARCHAR}
                          , #{item.drawingNo, jdbcType=VARCHAR}
                          , #{item.hsCd, jdbcType=VARCHAR}
                          , #{item.reorderPoint, jdbcType=NUMERIC}
                          , #{item.safetyStockQty, jdbcType=NUMERIC}
                          , #{item.useYn, jdbcType=VARCHAR}
                          , #{item.description, jdbcType=VARCHAR}
                          , 'N'
                          , #{item.valMsg, jdbcType=VARCHAR}
                          , #{item.multiMsg, jdbcType=VARCHAR}
                          , #{item.userId, jdbcType=VARCHAR}
                          , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                          )
        </foreach>
    </insert>
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_ITEM( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                 , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                 , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                 , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                 , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
                                                 , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select> 
    
 
</mapper>
