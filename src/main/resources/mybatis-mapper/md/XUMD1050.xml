<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD1050">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
        SELECT A.*
	    FROM   ( 
	    </if>
				SELECT MWC.COMPANY_CD
			         , MWC.DIVISION_CD
				     , MWC.WORK_GROUP_CD
				     , (SELECT MOM_COMMON_PKG.FN_GET_WORK_GROUP_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.WORK_GROUP_CD) FROM DUAL) AS WORK_GROUP_NM
					 , MWC.WORK_CENTER_CD
					 , MWC.WORK_CENTER_NM
					 , MWC.WORK_CENTER_TYPE
					 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWC.COMPANY_CD,MWC.DIVISION_CD, 'MD0010', MWC.WORK_CENTER_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS WORK_CENTER_TYPE_NM  
					 , MWC.CONSUME_WAREHOUSE_CD
					 , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.CONSUME_WAREHOUSE_CD) FROM DUAL) AS CONSUME_WAREHOUSE_NM
					 , MWC.GOOD_WAREHOUSE_CD
					 , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.GOOD_WAREHOUSE_CD) FROM DUAL) AS GOOD_WAREHOUSE_NM
					 , MWC.DEFECT_WAREHOUSE_CD
					 , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.DEFECT_WAREHOUSE_CD) FROM DUAL) AS DEFECT_WAREHOUSE_NM
					 , MWC.USE_YN
					 , MWC.DESCRIPTION
					 , MWC.CREATE_BY   AS CREATE_USER_NO
					 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.CREATE_BY) FROM DUAL )  AS CREATE_USER_NM
					 , TO_CHAR(MWC.CREATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
					 , MWC.UPDATE_BY   AS UPDATE_USER_NO         
					 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
					 , TO_CHAR(MWC.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
			         , ROWIDTOCHAR(MWC.ROWID)   AS KEY_ID
	                 , COUNT(*) OVER() AS TOTAL_COUNT
	                 , ROW_NUMBER() OVER(PARTITION BY MWC.COMPANY_CD,MWC.DIVISION_CD ORDER BY MWC.WORK_CENTER_CD  ) AS ROW_COUNT	
			    FROM   MOM_WORK_CENTER MWC
			    WHERE  MWC.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
				AND    MWC.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}  		
				<if test="workGroupCd != null and workGroupCd != ''">
			    AND    MWC.WORK_GROUP_CD = #{workGroupCd, jdbcType=VARCHAR}
				</if>
				<if test="workCenterCd != null and workCenterCd != ''">
			    AND    (UPPER(MWC.WORK_CENTER_CD) LIKE '%' || UPPER(#{workCenterCd, jdbcType=VARCHAR}) || '%' )
				</if>
				<if test="workCenterNm != null and workCenterNm != ''">
			    AND    (UPPER(MWC.WORK_CENTER_NM) LIKE '%' || UPPER(#{workCenterNm, jdbcType=VARCHAR}) || '%' )
				</if>
				<if test="workCenterType != null and workCenterType != ''">
			    AND    MWC.WORK_CENTER_TYPE = #{workCenterType, jdbcType=VARCHAR}
				</if>
			    <if test="useYn != null and useYn != ''">
			    AND    MWC.USE_YN = #{useYn, jdbcType=VARCHAR}
				</if>
			    ORDER BY  MWC.WORK_CENTER_NM
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	       ) A
	    WHERE ROW_COUNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
	    </if>       	        					
    </select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_WORK_CENTER
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
          )
            </foreach>
        </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_WORK_CENTER( COMPANY_CD
								 , DIVISION_CD
								 , WORK_GROUP_CD
					             , WORK_CENTER_CD
					             , WORK_CENTER_NM
					             , WORK_CENTER_TYPE
					             , CONSUME_WAREHOUSE_CD
					             , GOOD_WAREHOUSE_CD
					             , DEFECT_WAREHOUSE_CD
								 , USE_YN
								 , DESCRIPTION
								 , DEL_YN
							   	 , VAL_MSG
								 , MULTI_MSG
								 , CREATE_BY
								 , CREATE_DATE
								 )
        VALUES                   ( #{item.companyCd, jdbcType=VARCHAR}
			                     , #{item.divisionCd, jdbcType=VARCHAR}
			                     , #{item.workGroupCd,       jdbcType=VARCHAR}
					             , #{item.workCenterCd,      jdbcType=VARCHAR}
					             , #{item.workCenterNm,      jdbcType=VARCHAR}
					             , #{item.workCenterType,    jdbcType=VARCHAR}
					             , #{item.consumeWarehouseCd, jdbcType=VARCHAR}
					             , #{item.goodWarehouseCd,    jdbcType=VARCHAR}
					             , #{item.defectWarehouseCd, jdbcType=VARCHAR}
			                     , #{item.useYn, jdbcType=VARCHAR}
			                     , #{item.description, jdbcType=VARCHAR}
			                     , #{item.delYn, jdbcType=VARCHAR}
			                     , #{item.valMsg, jdbcType=VARCHAR}
			                     , #{item.multiMsg, jdbcType=VARCHAR}
			                     , #{item.userId, jdbcType=VARCHAR}
			                     , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                         )
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_WORK_CENTER( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                                    , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                                    , #{companyCd,   jdbcType=VARCHAR, mode=IN}
	                                                    , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
	                                                    , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
	                                                    , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>      
     
    <select id="get_excelUpBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
	         , MULTI_MSG      
	    FROM   MOM_PROC_WORK_CENTER
	    WHERE  COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    CREATE_BY   = #{userId, jdbcType=VARCHAR}
  </select> 
    <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_WORK_CENTER
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
          )
            </foreach>
        </where>
    </delete>  
    <insert id="create_excelUpBtnV1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_WORK_CENTER( COMPANY_CD
								 , DIVISION_CD
								 , WORK_GROUP_CD
					             , WORK_CENTER_CD
					             , WORK_CENTER_NM
					             , WORK_CENTER_TYPE
					             , CONSUME_WAREHOUSE_CD
					             , GOOD_WAREHOUSE_CD
					             , DEFECT_WAREHOUSE_CD
								 , USE_YN
								 , DESCRIPTION
								 , DEL_YN
							   	 , VAL_MSG
								 , MULTI_MSG
								 , CREATE_BY
								 , CREATE_DATE
								 )
        VALUES                   ( #{item.companyCd, jdbcType=VARCHAR}
			                     , #{item.divisionCd, jdbcType=VARCHAR}
			                     , #{item.workGroupCd,       jdbcType=VARCHAR}
					             , #{item.workCenterCd,      jdbcType=VARCHAR}
					             , #{item.workCenterNm,      jdbcType=VARCHAR}
					             , #{item.workCenterType,    jdbcType=VARCHAR}
					             , #{item.consumeWarehouseCd, jdbcType=VARCHAR}
					             , #{item.goodWarehouseCd,    jdbcType=VARCHAR}
					             , #{item.defectWarehouseCd, jdbcType=VARCHAR}
			                     , #{item.useYn, jdbcType=VARCHAR}
			                     , #{item.description, jdbcType=VARCHAR}
			                     , 'N'
			                     , #{item.valMsg, jdbcType=VARCHAR}
			                     , #{item.multiMsg, jdbcType=VARCHAR}
			                     , #{item.userId, jdbcType=VARCHAR}
			                     , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                         )
        </foreach>
    </insert>
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_WORK_CENTER( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                                    , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                                    , #{companyCd,   jdbcType=VARCHAR, mode=IN}
	                                                    , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
	                                                    , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
	                                                    , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>        
</mapper>
