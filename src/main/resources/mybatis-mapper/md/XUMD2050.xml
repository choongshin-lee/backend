<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD2050">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        SELECT MDIM.COMPANY_CD
		     , MDIM.DIVISION_CD
		     , MDIM.PARENT_ITEM_ID   AS ASSY_ITEM_ID
		     , MIP.ITEM_NM	         AS ASSY_ITEM_NM
		     , MDIM.CHILD_ITEM_ID    AS PROCESS_ITEM_ID
		     , MIC.ITEM_NM           AS PROCESS_ITEM_ID
		     , MDIM.REQ_QTY
		     , MIP.ITEM_TYPE   AS ASSY_ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MIP.COMPANY_CD,MIC.DIVISION_CD, 'MD0002', MIP.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ASSY_ITEM_TYPE_NM     
		     , MIP.ITEM_SPEC   AS ASSY_ITEM_SPEC
		     , MIP.UOM         AS ASSY_UOM
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MIP.COMPANY_CD, MIP.DIVISION_CD, MIP.UOM) FROM DUAL) AS ASSY_UOM_NM
		     , MIC.ITEM_TYPE   AS PROCESS_ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MIC.COMPANY_CD,MIC.DIVISION_CD, 'MD0002', MIC.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS PROCESS_ITEM_TYPE_NM    
		     , MIC.ITEM_SPEC   AS PROCESS_ITEM_SPEC
		     , MIC.UOM         AS PROCESS_UOM
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MIC.COMPANY_CD, MIC.DIVISION_CD, MIC.UOM) FROM DUAL) AS PROCESS_UOM_NM
		     , MDIM.USE_YN
		     , MDIM.DESCRIPTION
		     , MDIM.UPDATE_BY    AS UPDATE_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MDIM.COMPANY_CD, MDIM.DIVISION_CD, MDIM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		     , TO_CHAR(MDIM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , ROWIDTOCHAR(MDIM.ROWID) AS KEY_ID
		FROM   MOM_DEMAND_ITEM_MAPPING MDIM
		     , MOM_ITEM MIP
		     , MOM_ITEM MIC
		WHERE  MDIM.COMPANY_CD     = MIP.COMPANY_CD
		AND    MDIM.DIVISION_CD    = MIP.DIVISION_CD
		AND    MDIM.PARENT_ITEM_ID = MIP.ITEM_ID
		AND    MDIM.COMPANY_CD     = MIC.COMPANY_CD
		AND    MDIM.DIVISION_CD    = MIC.DIVISION_CD
		AND    MDIM.CHILD_ITEM_ID  = MIC.ITEM_ID
		AND    MDIM.COMPANY_CD     = #{companyCd,  jdbcType=VARCHAR}
		AND    MDIM.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}   	
	    <if test="assyItemIdNm != null and assyItemIdNm != ''">
	    AND    (UPPER(MDIM.PARENT_ITEM_ID) LIKE '%' || UPPER(#{assyItemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MIP.ITEM_NM) LIKE '%' || UPPER(#{assyItemIdNm, jdbcType=VARCHAR}) || '%')
	    </if>
	    <if test="processItemIdNm != null and processItemIdNm != ''">
	    AND    (UPPER(MDIM.CHILD_ITEM_ID) LIKE '%' || UPPER(#{processItemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MIC.ITEM_NM) LIKE '%' || UPPER(#{processItemIdNm, jdbcType=VARCHAR}) || '%')
	    </if>
	    <if test="useYn != null and useYn != ''">
	    AND    MDIM.USE_YN = #{useYn, jdbcType=VARCHAR}
	    </if>
    </select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_DEMAND_ITEM_MAP
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	          )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_DEMAND_ITEM_MAP( COMPANY_CD
							     	 , DIVISION_CD
								     , PARENT_ITEM_ID
                                     , CHILD_ITEM_ID
                                     , REQ_QTY
									 , USE_YN
									 , DESCRIPTION
									 , DEL_YN
									 , VAL_MSG
									 , MULTI_MSG
									 , CREATE_BY
									 , CREATE_DATE
									 )
        VALUES                       ( #{item.companyCd, jdbcType=VARCHAR}
			                         , #{item.divisionCd, jdbcType=VARCHAR}
			                     	 , #{item.assyItemId, jdbcType=VARCHAR}
				                     , #{item.processItemId, jdbcType=VARCHAR}
				                     , #{item.reqQty, jdbcType=NUMERIC}
			                         , #{item.useYn, jdbcType=VARCHAR}
			                         , #{item.description, jdbcType=VARCHAR}
			                         , #{item.delYn, jdbcType=VARCHAR}
			                         , #{item.valMsg, jdbcType=VARCHAR}
			                         , #{item.multiMsg, jdbcType=VARCHAR}
			                         , #{item.userId, jdbcType=VARCHAR}
			                         , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                             )
        </foreach>
    </insert>
        <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_DEMAND_ITEM_MAP( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
		                                                    , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
			                                                , #{companyCd,   jdbcType=VARCHAR, mode=IN}
			                                                , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
			                                                , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
			                                                , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>  
    <select id="get_excelUpBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
	         , MULTI_MSG      
	    FROM   MOM_PROC_DEMAND_ITEM_MAP
	    WHERE  COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    CREATE_BY   = #{userId, jdbcType=VARCHAR}
  </select> 
    <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_DEMAND_ITEM_MAP
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	          )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_excelUpBtnV1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_DEMAND_ITEM_MAP( COMPANY_CD
							     	 , DIVISION_CD
								     , PARENT_ITEM_ID
                                     , CHILD_ITEM_ID
                                     , REQ_QTY
									 , USE_YN
									 , DESCRIPTION
									 , DEL_YN
									 , VAL_MSG
									 , MULTI_MSG
									 , CREATE_BY
									 , CREATE_DATE
									 )
        VALUES                       ( #{item.companyCd, jdbcType=VARCHAR}
			                         , #{item.divisionCd, jdbcType=VARCHAR}
			                     	 , #{item.assyItemId, jdbcType=VARCHAR}
				                     , #{item.processItemId, jdbcType=VARCHAR}
				                     , #{item.reqQty, jdbcType=NUMERIC}
			                         , #{item.useYn, jdbcType=VARCHAR}
			                         , #{item.description, jdbcType=VARCHAR}
			                         , 'N'
			                         , #{item.valMsg, jdbcType=VARCHAR}
			                         , #{item.multiMsg, jdbcType=VARCHAR}
			                         , #{item.userId, jdbcType=VARCHAR}
			                         , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                             )
        </foreach>
    </insert>
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_DEMAND_ITEM_MAP( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
		                                                    , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
			                                                , #{companyCd,   jdbcType=VARCHAR, mode=IN}
			                                                , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
			                                                , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
			                                                , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>         
</mapper>