<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD1100">
   <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
       <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>    
				    SELECT MUW.COMPANY_CD
					     , MUW.DIVISION_CD
					     , MUW.USER_NO
					     , MU.USER_NM
					     , MUW.WORK_CENTER_CD
					     , MWC.WORK_CENTER_NM
					     , MWC.WORK_GROUP_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WORK_GROUP_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.WORK_GROUP_CD) FROM DUAL) AS WORK_GROUP_NM
					     , MWC.WORK_CENTER_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWC.COMPANY_CD,MWC.DIVISION_CD, 'MD0010', MWC.WORK_CENTER_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS WORK_CENTER_TYPE_NM
					     , MWC.CONSUME_WAREHOUSE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.CONSUME_WAREHOUSE_CD) FROM DUAL) AS CONSUME_WAREHOUSE_NM
					     , MWC.GOOD_WAREHOUSE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.GOOD_WAREHOUSE_CD) FROM DUAL) AS GOOD_WAREHOUSE_NM
					     , MWC.DEFECT_WAREHOUSE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.DEFECT_WAREHOUSE_CD) FROM DUAL) AS DEFECT_WAREHOUSE_NM
					     , MUW.USE_YN
					     , MUW.DESCRIPTION
					     , MUW.UPDATE_BY                 AS UPDATE_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MUW.COMPANY_CD, MUW.DIVISION_CD, MUW.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
					     , TO_CHAR(MUW.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
					     , ROWIDTOCHAR(MUW.ROWID) AS KEY_ID
					     , COUNT(*) OVER() AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MUW.COMPANY_CD,MUW.DIVISION_CD ORDER BY MUW.USER_NO, MUW.WORK_CENTER_CD  ) AS ROW_COUNT
					FROM   MOM_USER_WORK_CENTER_REL MUW
					     , MOM_USER MU
					     , MOM_WORK_CENTER MWC
					WHERE  MUW.COMPANY_CD     = MU.COMPANY_CD
					AND    MUW.DIVISION_CD    = MU.DIVISION_CD
					AND    MUW.USER_NO        = MU.USER_NO
					AND    MUW.COMPANY_CD     = MWC.COMPANY_CD
					AND    MUW.DIVISION_CD    = MWC.DIVISION_CD
					AND    MUW.WORK_CENTER_CD = MWC.WORK_CENTER_CD     
					AND    MUW.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
					AND    MUW.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}  
					<if test="userNoNm != null and userNoNm != ''">
					AND    (UPPER(MUW.USER_NO) LIKE '%' || UPPER(#{userNoNm, jdbcType=VARCHAR}) || '%' OR UPPER(MU.USER_NM) LIKE '%' || UPPER(#{userNoNm, jdbcType=VARCHAR}) || '%')
					</if>		
					<if test="workCenterCdNm != null and workCenterCdNm != ''">
					AND    (UPPER(MUW.WORK_CENTER_CD) LIKE '%' || UPPER(#{workCenterCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MWC.WORK_CENTER_NM) LIKE '%' || UPPER(#{workCenterCdNm, jdbcType=VARCHAR}) || '%')
					</if>		
					<if test="useYn != null and useYn != ''">
					AND    MUW.USE_YN = #{useYn, jdbcType=VARCHAR}
					</if>
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>  		   
	</select>
    <delete id="remove_createBtn1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_USER_WC_REL
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	          )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_USER_WC_REL( COMPANY_CD
							     , DIVISION_CD
								 , USER_NO
                                 , WORK_CENTER_CD
                                 , USE_YN
							     , DESCRIPTION
							     , DEL_YN
							     , VAL_MSG
							     , MULTI_MSG
							     , CREATE_BY
							     , CREATE_DATE
							     )
        VALUES                  ( #{item.companyCd, jdbcType=VARCHAR}
                                , #{item.divisionCd, jdbcType=VARCHAR}
                  	            , #{item.userNo, jdbcType=VARCHAR}
            					, #{item.workCenterCd, jdbcType=VARCHAR}
                                , #{item.useYn, jdbcType=VARCHAR}
			                    , #{item.description, jdbcType=VARCHAR}
			                    , #{item.delYn, jdbcType=VARCHAR}
			                    , #{item.valMsg, jdbcType=VARCHAR}
			                    , #{item.multiMsg, jdbcType=VARCHAR}
			                    , #{item.userId, jdbcType=VARCHAR}
			                    , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
			                    )
        </foreach>
    </insert>
        <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_USER_WORK_CENTER( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
		                                                     , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
			                                                 , #{companyCd,   jdbcType=VARCHAR, mode=IN}
			                                                 , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
			                                                 , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
			                                                 , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>  
    <select id="get_excelUpBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
	         , MULTI_MSG      
	    FROM   MOM_PROC_USER_WC_REL
	    WHERE  COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    CREATE_BY   = #{userId, jdbcType=VARCHAR}
  </select> 
    <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
	    DELETE FROM MOM_PROC_USER_WC_REL
	        <where>
	            <foreach collection="list" item="item" open="" close="" separator="OR">
	          (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	             AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	             AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	          )
	            </foreach>
	        </where>
    </delete>  
    <insert id="create_excelUpBtnV1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_USER_WC_REL( COMPANY_CD
							     , DIVISION_CD
								 , USER_NO
                                 , WORK_CENTER_CD
                                 , USE_YN
							     , DESCRIPTION
							     , DEL_YN
							     , VAL_MSG
							     , MULTI_MSG
							     , CREATE_BY
							     , CREATE_DATE
							     )
        VALUES                  ( #{item.companyCd, jdbcType=VARCHAR}
                                , #{item.divisionCd, jdbcType=VARCHAR}
                  	            , #{item.userNo, jdbcType=VARCHAR}
            					, #{item.workCenterCd, jdbcType=VARCHAR}
                                , #{item.useYn, jdbcType=VARCHAR}
			                    , #{item.description, jdbcType=VARCHAR}
			                    , 'N'
			                    , #{item.valMsg, jdbcType=VARCHAR}
			                    , #{item.multiMsg, jdbcType=VARCHAR}
			                    , #{item.userId, jdbcType=VARCHAR}
			                    , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
			                    )
        </foreach>
    </insert>
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.SP_UPSERT_CUSTOMER_ITEM_MAP( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
		                                                      , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
			                                                  , #{companyCd,   jdbcType=VARCHAR, mode=IN}
			                                                  , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
			                                                  , #{actionMode,  jdbcType=VARCHAR, mode=IN}        
			                                                  , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>         
</mapper>