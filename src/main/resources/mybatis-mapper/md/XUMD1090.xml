<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD1090">

  <select id="get_validateEx1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
    SELECT NVL(VAL_MSG,'PASS') AS VAL_MSG
         , MULTI_MSG      
    FROM    MOM_PROC_BOR
    WHERE   COMPANY_CD  = #{companyCd , jdbcType=VARCHAR}
    AND     DIVISION_CD = #{divisionCd , jdbcType=VARCHAR}
    AND     CREATE_BY    = #{userId , jdbcType=VARCHAR}
  </select>
  <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	SELECT * 
	FROM   ( SELECT COUNT(*) OVER() AS TOTAL_COUNT
	              , A.*
	              , ROWNUM AS KEY_ID
	              , ROWNUM AS ID
             FROM ( SELECT MB.COMPANY_CD
		                 , MB.DIVISION_CD
		                 , MB.ITEM_ID
		                 , MI.ITEM_NM
		                 , MI.ITEM_SPEC
		                 , MI.ITEM_TYPE
		                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD,'MD0002',MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_TYPE_NM  
		                 , MB.ROUTING_ID
		                 , MR.ROUTING_SHORT_NM                                                                                                          
                         , MR.ROUTING_NM		                                                                                                      
		                 , MB.WORK_CENTER_CD
		                 , (SELECT MOM_COMMON_PKG.FN_GET_WORK_CENTER_NAME(MB.COMPANY_CD,MB.DIVISION_CD,MB.WORK_CENTER_CD) FROM DUAL) AS WORK_CENTER_NM
		                 , MB.TACT_TIME
		                 , MB.TACT_TIME_UOM
		                 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.TACT_TIME_UOM) FROM DUAL) AS TACT_TIME_UOM_NM
		                 , MB.ADJUST_TACT_TIME
     					 , MB.ADJUST_TACT_TIME_UOM
     					 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.ADJUST_TACT_TIME_UOM) FROM DUAL) AS ADJUST_TACT_TIME_UOM_NM
     					 , MB.SETUP_TIME 
						 , MB.SETUP_TIME_UOM 
						 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.SETUP_TIME_UOM) FROM DUAL) AS SETUP_TIME_UOM_NM
		                 , MB.PROCESS_LT
		                 , MB.PROCESS_LT_UOM
		                 , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.PROCESS_LT_UOM) FROM DUAL) AS PROCESS_LT_UOM_NM
		                 , MB.PRIORITY
		                 , MB.YIELD
		                 , MB.BOR_ID
		                 , MB.CONSUME_WAREHOUSE_CD
		                 , MB.GOOD_WAREHOUSE_CD
		                 , MB.DEFECT_WAREHOUSE_CD
		                 ,(SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.CONSUME_WAREHOUSE_CD) FROM DUAL ) AS CONSUME_WAREHOUSE_NM
		                 ,(SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.GOOD_WAREHOUSE_CD) FROM DUAL ) AS GOOD_WAREHOUSE_NM
		                 ,(SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.DEFECT_WAREHOUSE_CD) FROM DUAL ) AS DEFECT_WAREHOUSE_NM
		                 , MB.CHARGE_YN  
		                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MB.COMPANY_CD,MB.DIVISION_CD, 'MM0015', MB.CHARGE_YN, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS CHARGE_YN_NM
		                 , MB.USE_YN
		                 , MB.DESCRIPTION
		                 , MB.CREATE_BY   AS CREATE_USER_NO
		                 ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM
		                 , TO_CHAR(MB.CREATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
		                 , MB.UPDATE_BY  AS UPDATE_USER_NO
		                 ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		                 , TO_CHAR(MB.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		            FROM   MOM_BOR MB
		                 , MOM_ITEM MI
		                 , MOM_ROUTING MR                                           
		            WHERE  MB.COMPANY_CD    = MI.COMPANY_CD
		            AND    MB.DIVISION_CD   = MI.DIVISION_CD     
		            AND    MB.ITEM_ID       = MI.ITEM_ID
		            AND    MB.COMPANY_CD    = MR.COMPANY_CD(+)                         
                    AND    MB.DIVISION_CD   = MR.DIVISION_CD(+)    	                 									
                    AND    MB.ROUTING_ID    = MR.ROUTING_ID(+)                         
		            AND    MB.COMPANY_CD    = #{companyCd , jdbcType=VARCHAR}
		            AND    MB.DIVISION_CD   = #{divisionCd , jdbcType=VARCHAR}
		            <if test="itemIdNm != null and itemIdNm != ''">
		            AND    (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
		            </if>
		            <if test="workCenterCd != null and workCenterCd != ''">
		            AND    MB.WORK_CENTER_CD = #{workCenterCd , jdbcType=VARCHAR}
		            </if>
		            <if test="routingId != null and routingId != ''">
		            AND    MB.ROUTING_ID = #{routingId , jdbcType=VARCHAR}
		            </if>
		            <if test="useYn != null and useYn != ''">
		            AND MB.USE_YN = #{useYn , jdbcType=VARCHAR}
		            </if>
		            ORDER BY MB.ITEM_ID, MB.ROUTING_ID  ) A
		   )
	<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">    
    WHERE  KEY_ID BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}	
    </if>	

	</select>
	  <select id="get_findBtn2" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
		SELECT MCD.COMPANY_CD
		     , MCD.COMPANY_NM
		     , MCD.DIVISION_CD
		     , MCD.DIVISION_NM
		     , MBP.BOR_ID
		   <!--   , MBP.BOR_ID AS KEY_ID -->
		     , MBP.OPERATION_SEQ
		     , MBP.OPERATION_ID
		   <!--   , MBP.BOR_ID || '_' || MBP.OPERATION_ID AS KEY_ID -->
		     , (SELECT MOM_COMMON_PKG.FN_GET_OPERATION_NAME(MBP.COMPANY_CD,MBP.DIVISION_CD,MBP.OPERATION_ID) FROM DUAL) AS OPERATION_NM
		     , MBP.WORK_STATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WORK_STATION_NAME(MBP.COMPANY_CD,MBP.DIVISION_CD,MBP.WORK_STATION_CD) FROM DUAL) AS WORK_STATION_NM
		     , MBP.INSPECTION_YN
		     , MBP.FINAL_OPERATION_YN
		     , MBP.MILESTONE
		     , MBP.DESCRIPTION
		     , MBP.CREATE_BY
		     ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MBP.COMPANY_CD, MBP.DIVISION_CD, MBP.CREATE_BY) FROM DUAL ) AS CREATE_BY_NM
		     , TO_CHAR(MBP.CREATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
		     , MBP.UPDATE_BY
		     ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MBP.COMPANY_CD, MBP.DIVISION_CD, MBP.UPDATE_BY) FROM DUAL ) AS UPDATE_BY_NM
		     , TO_CHAR(MBP.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , ROWIDTOCHAR(MBP.ROWID)  AS KEY_ID
		FROM   MOM_COM_DIV_V MCD
		     , MOM_BOR_PATH MBP
		WHERE  MCD.COMPANY_CD   = MBP.COMPANY_CD
		AND    MCD.DIVISION_CD  = MBP.DIVISION_CD     
		AND    MBP.COMPANY_CD   = #{companyCd , jdbcType=VARCHAR}
		AND    MBP.DIVISION_CD  = #{divisionCd , jdbcType=VARCHAR}
		AND    MBP.BOR_ID       = #{borId , jdbcType=VARCHAR}
		ORDER BY  MBP.OPERATION_SEQ
	</select>

    <delete id="remove_createBtn1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_BOR
            <where>
		        <foreach collection="list" item="item" open="" close="" separator="OR">
		        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
		           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
		           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
		        )
		        </foreach>
            </where>
   </delete>  
   <insert id="create_createBtn1"  parameterType="java.util.List" >    
       <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
	       INTO MOM_PROC_BOR( COMPANY_CD
			                , DIVISION_CD
			                , BOR_ID
			                , ITEM_ID
			                , ROUTING_ID
			                , WORK_CENTER_CD
			                , TACT_TIME
			                , TACT_TIME_UOM
			                , ADJUST_TACT_TIME
     					    , ADJUST_TACT_TIME_UOM
     					    , SETUP_TIME 
						    , SETUP_TIME_UOM 
			                , PROCESS_LT
			                , PROCESS_LT_UOM
			                , PRIORITY
			                , YIELD
			                , CONSUME_WAREHOUSE_CD
			                , GOOD_WAREHOUSE_CD
			                , DEFECT_WAREHOUSE_CD
			                , CHARGE_YN
			                , USE_YN
			                , DESCRIPTION
			                , CREATE_BY
			                , CREATE_DATE )
	      VALUES            ( #{item.companyCd, jdbcType=VARCHAR}
			                , #{item.divisionCd, jdbcType=VARCHAR}
			                , #{item.borId, jdbcType=VARCHAR}
			                , #{item.itemId, jdbcType=VARCHAR}
			                , #{item.routingId, jdbcType=VARCHAR}
			                , #{item.workCenterCd, jdbcType=VARCHAR}
			                , #{item.tactTime, jdbcType=NUMERIC}
			                , #{item.tactTimeUom, jdbcType=VARCHAR}
			                , #{item.adjustTactTime, jdbcType=NUMERIC}
			                , #{item.adjustTactTimeUom, jdbcType=VARCHAR}
			                , #{item.setupTime, jdbcType=NUMERIC}
			                , #{item.setupTimeUom, jdbcType=VARCHAR}
			                , #{item.processLt, jdbcType=NUMERIC}
			                , #{item.processLtUom, jdbcType=VARCHAR}
			                , #{item.priority, jdbcType=NUMERIC}
			                , NVL(#{item.yield, jdbcType=NUMERIC},0)
			                , #{item.consumeWarehouseCd, jdbcType=VARCHAR}
			                , #{item.goodWarehouseCd, jdbcType=VARCHAR}
			                , #{item.defectWarehouseCd, jdbcType=VARCHAR}
			                , #{item.chargeYn, jdbcType=VARCHAR}
			                , #{item.useYn, jdbcType=VARCHAR}
			                , #{item.description, jdbcType=VARCHAR}
			                , #{item.userId, jdbcType=VARCHAR}
			                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
			                )
       </foreach>
  </insert>  
  <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
      { CALL MOM_MASTER_INFO_PKG.XUMD1090_CREATE_PROC( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
				                                     , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
				                                     , #{companyCd,  jdbcType=VARCHAR, mode=IN}
				                                     , #{divisionCd, jdbcType=VARCHAR, mode=IN}
				                                     , #{actionMode, jdbcType=VARCHAR, mode=IN}												  
				                                     , #{userId,     jdbcType=VARCHAR, mode=IN} )}    	              
  </select>  
  <delete id="remove_excelUpBtnV1" parameterType="java.util.List">
      DELETE FROM MOM_PROC_BOR
      <where>
       <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
       </foreach>
      </where>
   </delete>  
   <insert id="create_excelUpBtnV1"  parameterType="java.util.List" >    
	   <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
	       INTO MOM_PROC_BOR (COMPANY_CD
			                , DIVISION_CD
			                , BOR_ID
			                , ITEM_ID
			                , ROUTING_ID
			                , WORK_CENTER_CD
			                , TACT_TIME
			                , TACT_TIME_UOM
			                , ADJUST_TACT_TIME
     					    , ADJUST_TACT_TIME_UOM
     					    , SETUP_TIME 
						    , SETUP_TIME_UOM 
			                , PROCESS_LT
			                , PROCESS_LT_UOM
			                , PRIORITY
			                , YIELD
			                , CONSUME_WAREHOUSE_CD
			                , GOOD_WAREHOUSE_CD
			                , DEFECT_WAREHOUSE_CD
			                , CHARGE_YN
			                , USE_YN
			                , DESCRIPTION
			                , CREATE_BY
			                , CREATE_DATE )
	      VALUES            ( #{item.companyCd, jdbcType=VARCHAR}
			                , #{item.divisionCd, jdbcType=VARCHAR}
			                , #{item.borId, jdbcType=VARCHAR}
			                , #{item.itemId, jdbcType=VARCHAR}
			                , #{item.routingId, jdbcType=VARCHAR}
			                , #{item.workCenterCd, jdbcType=VARCHAR}
			                , #{item.tactTime, jdbcType=NUMERIC}
			                , #{item.tactTimeUom, jdbcType=VARCHAR}
			                , #{item.adjustTactTime, jdbcType=NUMERIC}
			                , #{item.adjustTactTimeUom, jdbcType=VARCHAR}
			                , #{item.setupTime, jdbcType=NUMERIC}
			                , #{item.setupTimeUom, jdbcType=VARCHAR}
			                , #{item.processLt, jdbcType=NUMERIC}
			                , #{item.processLtUom, jdbcType=VARCHAR}
			                , #{item.priority, jdbcType=NUMERIC}
			                , #{item.yield, jdbcType=NUMERIC}
			                , #{item.consumeWarehouseCd, jdbcType=VARCHAR}
			                , #{item.goodWarehouseCd, jdbcType=VARCHAR}
			                , #{item.defectWarehouseCd, jdbcType=VARCHAR}
			                , #{item.chargeYn, jdbcType=VARCHAR}
			                , #{item.useYn, jdbcType=VARCHAR}
			                , #{item.description, jdbcType=VARCHAR}
			                , #{item.userId, jdbcType=VARCHAR}
			                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
			                )
	    </foreach>
    </insert>  
    <select id="proc_excelUpBtnV1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MASTER_INFO_PKG.XUMD1090_CREATE_PROC( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
			                                           , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
			                                           , #{companyCd,  javaType=string,  jdbcType=VARCHAR , mode=IN}
			                                           , #{divisionCd, jdbcType=VARCHAR, mode=IN}
			                                           , #{actionMode, jdbcType=VARCHAR, mode=IN}												  
			                                           , #{userId,     jdbcType=VARCHAR, mode=IN} )}       	              
    </select>   
    <update id="modify_saveBtn2" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
	        UPDATE MOM_BOR_PATH
		    SET    WORK_STATION_CD    = #{item.workStationCd, jdbcType=VARCHAR}
		         , INSPECTION_YN      = #{item.inspectionYn, jdbcType=VARCHAR}
		         , FINAL_OPERATION_YN = #{item.finalOperationYn, jdbcType=VARCHAR}
		         , MILESTONE          = #{item.milestone, jdbcType=VARCHAR}
		         , DESCRIPTION        = #{item.description, jdbcType=VARCHAR}
		         , UPDATE_BY          = #{item.userId, jdbcType=VARCHAR}
		         , UPDATE_DATE        = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		    WHERE  COMPANY_CD         = #{item.companyCd, jdbcType=VARCHAR}
		    AND    DIVISION_CD        = #{item.divisionCd, jdbcType=VARCHAR}
		    AND    BOR_ID             = #{item.borId, jdbcType=VARCHAR}
		    AND    OPERATION_ID       = #{item.operationId, jdbcType=VARCHAR}
	    </foreach>
  </update>
</mapper>
