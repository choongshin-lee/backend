<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUOS5010">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if> 		
				    SELECT MPI.COMPANY_CD
					     , MPI.DIVISION_CD
					     , MPI.PROCESS_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.PROCESS_CD) FROM DUAL)  AS PROCESS_NM
					     , MPI.TITLE       AS DEPARTURE_TITLE
					     , MPI.INOUT_NO    AS DEPARTURE_NO
					     , MPI.SEQ  
					     , MPI.PURCHASE_INOUT_ID  AS DEPARTURE_INOUT_ID
					     , MPI.ITEM_ID
					     , MI.ITEM_NM
					     , MI.ITEM_SPEC
					     , MI.ITEM_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
					     , MPI.STOCK_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MD0048', MPI.STOCK_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS STOCK_TYPE_NM
					     , MPI.STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MM0013', MPI.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)    AS STATE_NM
					     , MPI.INOUT_QTY   AS DEPARTURE_QTY
					     , MPI.INOUT_UOM   AS DEPARTURE_UOM	 
					     , MPI.GOOD_QTY
					     , MPI.DEFECT_QTY
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.INOUT_UOM) FROM DUAL) AS DEPARTURE_UOM_NM
					     , MPI.CONVERSION_QTY
					     , MPI.CONVERSION_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.CONVERSION_UOM) FROM DUAL) AS CONVERSION_UOM_NM
					     , MPI.UNIT_PRICE
					     , MPI.AMOUNT
					     , MPI.LOCAL_AMOUNT
					     , MPI.CURRENCY_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'SM0017', MPI.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
					     , MPI.WAREHOUSE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPI.COMPANY_CD,MPI.DIVISION_CD,MPI.WAREHOUSE_CD) FROM DUAL) AS WAREHOUSE_NM
					     , MPI.VENDOR_CD   AS PARTNER_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.VENDOR_CD) FROM DUAL ) AS PARTNER_NM
					     , NVL(MPI.LOT_MANAGEMENT_YN, 'N')      AS LOT_MANAGEMENT_YN
			             , MPI.LOT_RULE                         AS LOT_RULE
			             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MD0052', MPI.LOT_RULE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS LOT_RULE_NM
			              , MPI.LOT_ID
					     , MPI.REFERENCE_NO
                         , MPI.REFERENCE_DTL_NO
					     , MPI.IO_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.IO_TYPE) FROM DUAL) AS IO_TYPE_NM
					     , TO_CHAR(MPI.CREATE_DATE ,'YYYY-MM-DD HH24:MI:SS')     AS CREATE_DATE
						 , MPI.CREATE_BY                                         AS CREATE_USER_NO
						 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, MPI.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM
					     , MPI.DESCRIPTION
					     , ROWIDTOCHAR(MPI.ROWID)  AS KEY_ID 
					     , COUNT(*) OVER()         AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MPI.COMPANY_CD,MPI.DIVISION_CD ORDER BY MPI.PURCHASE_INOUT_ID ) AS ROW_COUNT
					FROM   MOM_PURCHASE_INOUT_V MPI
					     , MOM_ITEM MI
					     , MOM_PARTNER MP
					WHERE  MPI.COMPANY_CD   = MI.COMPANY_CD
					AND    MPI.DIVISION_CD  = MI.DIVISION_CD
					AND    MPI.ITEM_ID      = MI.ITEM_ID   
					AND    MPI.COMPANY_CD   = MP.COMPANY_CD
                    AND    MPI.DIVISION_CD  = MP.DIVISION_CD
                    AND    MPI.VENDOR_CD    = MP.PARTNER_CD	 
					AND    MPI.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
					AND    MPI.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	
					AND    MPI.CREATE_DATE BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
		            AND    ((MPI.IQC_FLAG = 'Y' AND MPI.STATE = 'PIIE') OR (MPI.IQC_FLAG = 'N' AND MPI.STATE = 'PIF'))
					<if test="partnerCdNm != null and partnerCdNm != ''">
					AND    (UPPER(MPI.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
					</if>	 
					<if test="departureNo != null and departureNo != ''">
					AND    UPPER(MPI.INOUT_NO) LIKE '%' || UPPER(#{departureNo, jdbcType=VARCHAR}) || '%'
					</if>
					<if test="itemIdNm != null and itemIdNm != ''">
					AND    (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')    
					</if>
					<if test="departureTitle != null and departureTitle != ''">
					AND    UPPER(MPI.TITLE) LIKE '%' || UPPER(#{departureTitle, jdbcType=VARCHAR}) || '%'
					</if>
					AND    MPI.PROCESS_CD  = 'OP' 
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_COUNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>
	</select>
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_PURCHASE_GR
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
	        (       COMPANY_CD   = #{item.companyCd, jdbcType=VARCHAR}
	           AND  DIVISION_CD  = #{item.divisionCd, jdbcType=VARCHAR}
	           AND  RECEIPT_TYPE = 'O'
	           AND  CREATE_BY    = #{item.userId, jdbcType=VARCHAR}
	        )
            </foreach>
        </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PURCHASE_GR( COMPANY_CD
				                 , DIVISION_CD
				                 , RECEIPT_TYPE
				                 , PROCESS_CD
				                 , INOUT_NO
				                 , DESCRIPTION
				                 , VAL_MSG
				                 , MULTI_MSG
				                 , CREATE_BY
				                 , CREATE_DATE )
        VALUES                   ( #{item.companyCd, jdbcType=VARCHAR}
				                 , #{item.divisionCd, jdbcType=VARCHAR}
				                 , 'O'
				                 , #{item.processCd, jdbcType=VARCHAR}
				                 , #{item.departureNo, jdbcType=VARCHAR}
				                 , #{item.description, jdbcType=VARCHAR}
				                 , #{item.valMsg, jdbcType=VARCHAR}
				                 , #{item.multiMsg, jdbcType=VARCHAR}
				                 , #{item.userId, jdbcType=VARCHAR}
				                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                 )
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_MATERIAL_PKG.SP_PURCHASE_GOODS_RECEIPT( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
					                                 , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
					                                 , #{companyCd,   jdbcType=VARCHAR, mode=IN}
					                                 , #{divisionCd,  jdbcType=VARCHAR, mode=IN}	
					                                 , 'O'										  
					                                 , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  	
</mapper>