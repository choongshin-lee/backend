<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUOS2010">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if> 	     
					SELECT MPM.COMPANY_CD
					     , MPM.DIVISION_CD
					     , MPM.PO_NO
					     , MPD.PO_SEQ
					     , MPD.PURCHASE_ORDER_ID
					     , MPM.VENDOR_CD      AS PARTNER_CD 
					     , MP.PARTNER_NM
					     , MPD.WAREHOUSE_CD  AS RECEIPT_WAREHOUSE_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.WAREHOUSE_CD) FROM DUAL) AS RECEIPT_WAREHOUSE_NM
					     , TO_CHAR(MPM.PO_DUE_DATE ,'YYYY-MM-DD')   AS PO_DUE_DATE
					     , MPD.ITEM_ID
					     , MI.ITEM_NM
					     , MI.ITEM_NM
					     , MI.ITEM_SPEC
					     , MI.ITEM_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
					     , MPD.PURCHASE_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.PURCHASE_UOM) FROM DUAL) AS PURCHASE_UOM_NM
					     , MPD.PO_QTY
					     , MI.UOM        AS CONVERSION_UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.UOM) FROM DUAL) AS CONVERSION_UOM_NM
					     , (MPD.PO_QTY * MI.PURCHASE_CONVERSION_RATE) AS CONVERSION_QTY
					     , MPM.CURRENCY_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'SM0017', MPM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
					     , MPM.EXCHANGE_RATE
					     , MPD.UNIT_PRICE
					     , MPD.AMOUNT
					     , MPD.LOCAL_AMOUNT
					     , MPM.DO_INVOICE_YN
					     , MPM.TAX_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'SM0029', MPM.TAX_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS TAX_TYPE_NM
					     , MPD.IQC_FLAG
					     , MPD.LOT_MANAGEMENT_YN
					     , MPD.PO_OVER_RECEIPT_RATE
					     , MPM.PO_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_PO_TYPE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.PO_TYPE) FROM DUAL) AS PO_TYPE_NM
					     , MPM.PO_REFERENCE_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0005', MPM.PO_REFERENCE_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PO_REFERENCE_TYPE_NM     
					     , MPD.REFERENCE_NO
					     , MPD.REFERENCE_DTL_NO
					     , MPD.CREATE_BY      AS CREATE_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM
					     , TO_CHAR(MPD.CREATE_DATE ,'YYYY-MM-DD')     AS CREATE_DATE 
					     , ROWIDTOCHAR(MPD.ROWID)  AS KEY_ID
					     , COUNT(*) OVER() AS TOTAL_COUNT
                         , ROW_NUMBER() OVER(PARTITION BY MPD.COMPANY_CD,MPD.DIVISION_CD ORDER BY MPD.PURCHASE_ORDER_ID ) AS ROW_COUNT
					FROM   MOM_PO_MST MPM
					     , MOM_PO_DTL MPD    
					     , MOM_PARTNER MP
					     , MOM_ITEM MI
					WHERE  MPM.COMPANY_CD   = MPD.COMPANY_CD
					AND    MPM.DIVISION_CD  = MPD.DIVISION_CD
					AND    MPM.PO_NO        = MPD.PO_NO
					AND    MPM.COMPANY_CD   = MP.COMPANY_CD
					AND    MPM.DIVISION_CD  = MP.DIVISION_CD
					AND    MPM.VENDOR_CD    = MP.PARTNER_CD
					AND    MPD.COMPANY_CD   = MI.COMPANY_CD
					AND    MPD.DIVISION_CD  = MI.DIVISION_CD
					AND    MPD.ITEM_ID      = MI.ITEM_ID
					AND    MPM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
					AND    MPM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	
					AND    MPM.PO_DUE_DATE  BETWEEN TO_DATE(#{poDueDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{poDueDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999  
					AND    MPM.PO_REFERENCE_TYPE = '40'
					AND    MPM.STATE             = 'POG'
					<if test="poNo != null and poNo != ''">
					AND    (UPPER(MPM.PO_NO) LIKE '%' || UPPER(#{poNo, jdbcType=VARCHAR}) || '%')   
					</if>
					<if test="itemIdNm != null and itemIdNm != ''">
					AND    (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')   
					</if>
					<if test="partnerCdNm != null and partnerCdNm != ''">
					AND    (UPPER(MPM.VENDOR_CD) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MP.PARTNER_NM) LIKE '%' || UPPER(#{partnerCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 	
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_COUNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>  							
    </select>
    <delete id="remove_customBtn1-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_PO_CONFIRM
        <where>
        <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
        </foreach>
        </where>
    </delete>  
    <insert id="create_customBtn1-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PO_CONFIRM( COMPANY_CD
				                , DIVISION_CD
				                , PO_NO
				                , VAL_MSG
				                , MULTI_MSG
				                , CREATE_BY
				                , CREATE_DATE )
        VALUES                  ( #{item.companyCd, jdbcType=VARCHAR}
				                , #{item.divisionCd, jdbcType=VARCHAR}
				                , #{item.poNo, jdbcType=VARCHAR}
				                , #{item.valMsg, jdbcType=VARCHAR}
				                , #{item.multiMsg, jdbcType=VARCHAR}
				                , #{item.userId, jdbcType=VARCHAR}
				                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                )
        </foreach>
    </insert>
    <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_MATERIAL_PKG.SP_PO_CONFIRM( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                         , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
	                                         , #{companyCd,   jdbcType=VARCHAR, mode=IN}
	                                         , #{divisionCd,  jdbcType=VARCHAR, mode=IN}											  
	                                         , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
</mapper>