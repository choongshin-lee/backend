<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWL5070">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MLM.COMPANY_CD
					     , MLM.DIVISION_CD
					     , MLM.LOCATION_DO_NO
					     , MLM.LOCATION_DO_NM
					     , MLM.WAREHOUSE_CD
					     , MWH.WAREHOUSE_NM
					     , MLM.FROM_ZONE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD,'MD0020', MLM.FROM_ZONE, #{langCd, jdbcType=VARCHAR}) FROM DUAL ) AS FROM_ZONE_NM
					     , MLM.TO_ZONE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD,'MD0020', MLM.TO_ZONE, #{langCd, jdbcType=VARCHAR}) FROM DUAL ) AS TO_ZONE_NM 
					     , MLD.DELIVERY_ORDER_ID
					     , MLD.LOT_ID
					     , MLD.ITEM_ID
					     , MI.ITEM_NM
					     , MI.ITEM_SPEC
					     , MI.ITEM_TYPE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
					     , MLD.UOM
					     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UOM) FROM DUAL) AS UOM_NM
					     , MLD.QTY                          AS DELIVERY_REQUEST_QTY 
					     , MLD.RESULT_QTY                   AS TOTAL_DELIVERY_QTY
					     , MLD.QTY - NVL(MLD.RESULT_QTY,0)  AS REMAIN_QTY
					     , MLD.LOCATION_CD                  AS FROM_LOCATION_CD
					     , MLF.LOCATION_NM                  AS FROM_LOCATION_NM   
					     , MLD.LOGISTICS_UNIT_CD            AS FROM_LOGISTICS_UNIT_CD
					     , MLR.LOCATION_CD                  AS TO_LOCATION_CD
					     , MLT.LOCATION_NM                  AS TO_LOCATION_NM
					     , MLR.LOGISTICS_UNIT_CD            AS TO_LOGISTICS_UNIT_CD
					     , MLR.DO_RESULT_ID
					     , TO_CHAR(MLR.RESULT_DATE ,'YYYY-MM-DD') AS DELIVERY_DATE
					     , MLR.QTY                   AS DELIVERY_QTY
					     , TO_CHAR(MLM.CONFIRM_DATE ,'YYYY-MM-DD') AS CONFIRM_DATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
					     , TO_CHAR(MLR.CANCEL_DATE ,'YYYY-MM-DD') AS CANCEL_DATE
					     , MLR.CANCEL_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLR.COMPANY_CD, MLR.DIVISION_CD, MLR.CANCEL_USER_NO) FROM DUAL ) AS CANCEL_USER_NM
					     , TO_CHAR(MLM.CREATE_DATE ,'YYYY-MM-DD') AS CREATE_DATE
					     , MLM.STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, 'IC0007', MLM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
					     , MLM.DESCRIPTION          
					     , MLD.UPDATE_BY      AS UPDATE_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
					     , MLD.LOCATION_DO_NO||'=='||MLD.DELIVERY_ORDER_ID||'=='||NVL(MLR.DO_RESULT_ID, '***')            AS KEY_ID
					     , COUNT(*) OVER()                               AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MLD.COMPANY_CD, MLD.DIVISION_CD ORDER BY MLD.LOCATION_DO_NO, MLD.DELIVERY_ORDER_ID, MLR.DO_RESULT_ID) AS ROW_CNT
					FROM   MOM_LOCATION_DO_MST    MLM
					     , MOM_LOCATION_DO_DTL    MLD
					     , MOM_WAREHOUSE MWH
					     , MOM_ITEM MI 
					     , MOM_LOCATION MLF
					     , MOM_LOCATION_DO_RESULT MLR
					     , MOM_LOCATION MLT
					WHERE  MLM.COMPANY_CD        = MLD.COMPANY_CD
					AND    MLM.DIVISION_CD       = MLD.DIVISION_CD
					AND    MLM.LOCATION_DO_NO    = MLD.LOCATION_DO_NO
					AND    MLM.COMPANY_CD        = MWH.COMPANY_CD
					AND    MLM.DIVISION_CD       = MWH.DIVISION_CD
					AND    MLM.WAREHOUSE_CD      = MWH.WAREHOUSE_CD
					AND    MLD.COMPANY_CD        = MI.COMPANY_CD
					AND    MLD.DIVISION_CD       = MI.DIVISION_CD
					AND    MLD.ITEM_ID           = MI.ITEM_ID 
					AND    MLD.COMPANY_CD        = MLF.COMPANY_CD
					AND    MLD.DIVISION_CD       = MLF.DIVISION_CD
					AND    MLD.LOCATION_CD       = MLF.LOCATION_CD 
					AND    MLD.COMPANY_CD        = MLR.COMPANY_CD(+)
					AND    MLD.DIVISION_CD       = MLR.DIVISION_CD(+)
					AND    MLD.DELIVERY_ORDER_ID = MLR.DELIVERY_ORDER_ID(+)     
					AND    MLR.COMPANY_CD        = MLT.COMPANY_CD(+)
					AND    MLR.DIVISION_CD       = MLT.DIVISION_CD(+)
					AND    MLR.LOCATION_CD       = MLT.LOCATION_CD(+)    
					AND    MLM.COMPANY_CD        = #{companyCd, jdbcType=VARCHAR}
					AND    MLM.DIVISION_CD       = #{divisionCd, jdbcType=VARCHAR}
					AND    MLM.CREATE_DATE  BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					<if test="warehouseCdNm != null and warehouseCdNm != ''">
					AND    (UPPER(MLM.WAREHOUSE_CD) LIKE '%' || UPPER(#{warehouseCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MWH.WAREHOUSE_NM) LIKE '%' || UPPER(#{warehouseCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 
					<if test="itemCdNm != null and itemCdNm != ''">
					AND    (UPPER(MLM.ITEM_ID) LIKE '%' || UPPER(#{itemCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MWH.ITEM_NM) LIKE '%' || UPPER(#{itemCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 
					<if test="fromLocationCdNm != null and fromLocationCdNm != ''">
					AND    (UPPER(MLD.LOCATION_CD) LIKE '%' || UPPER(#{fromLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MLF.LOCATION_NM) LIKE '%' || UPPER(#{fromLocationCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 
					<if test="toLocationCdNm != null and toLocationCdNm != ''">
					AND    (UPPER(MLR.LOCATION_CD) LIKE '%' || UPPER(#{toLocationCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MLT.LOCATION_NM) LIKE '%' || UPPER(#{toLocationCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 
					<if test="locationDoNo != null and locationDoNo != ''">
					AND    (UPPER(MLM.LOCATION_DO_NO) LIKE '%' || UPPER(#{locationDoNo, jdbcType=VARCHAR}) || '%')
					</if>
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select>   
</mapper>     