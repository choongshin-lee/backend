<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWL5010">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MWM.COMPANY_CD 
					     , MWM.DIVISION_CD
					     , MWH.WAREHOUSE_GROUP_CD
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWH.COMPANY_CD, MWH.DIVISION_CD, 'MD0017', MWH.WAREHOUSE_GROUP_CD, #{langCd, jdbcType=VARCHAR})  FROM DUAL ) AS WAREHOUSE_GROUP_NM
					     , MWM.WAREHOUSE_CD
					     , MWH.WAREHOUSE_NM
					     , MWH.WAREHOUSE_TYPE 
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWH.COMPANY_CD, MWH.DIVISION_CD,'MD0016', MWH.WAREHOUSE_TYPE , #{langCd, jdbcType=VARCHAR})  FROM DUAL ) AS WAREHOUSE_TYPE_NM
					     , MWM.DESCRIPTION
					     , MWH.UPDATE_BY              AS UPDATE_USER_NO
		     			 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWH.COMPANY_CD, MWH.DIVISION_CD, MWH.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		                 , TO_CHAR(MWH.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
					     , ROWIDTOCHAR(MWM.ROWID)            AS KEY_ID
						 , COUNT(*) OVER()                   AS TOTAL_COUNT
						 , ROW_NUMBER() OVER(PARTITION BY MWM.COMPANY_CD,MWM.DIVISION_CD ORDER BY MWM.WAREHOUSE_CD) AS ROW_CNT
					FROM  MOM_WAREHOUSE_MANAGER MWM
					    , MOM_WAREHOUSE MWH
					WHERE MWM.COMPANY_CD   = MWH.COMPANY_CD
					AND   MWM.DIVISION_CD  = MWH.DIVISION_CD
					AND   MWM.WAREHOUSE_CD = MWH.WAREHOUSE_CD 
					AND   MWM.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
					AND   MWM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	
					AND   MWM.USER_NO      = #{userId, jdbcType=VARCHAR}	
					<if test="warehouseCdNm != null and warehouseCdNm != ''">
					AND    (UPPER(MWH.WAREHOUSE_CD) LIKE '%' || UPPER(#{warehouseCdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MWH.WAREHOUSE_NM) LIKE '%' || UPPER(#{warehouseCdNm, jdbcType=VARCHAR}) || '%')    
					</if> 
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select> 
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MLM.COMPANY_CD
		     , MLM.DIVISION_CD
		     , MLM.LOCATION_DO_NO
		     , MLM.LOCATION_DO_NM
		     , MLM.WAREHOUSE_CD
		     , MLM.FROM_ZONE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD,'MD0020', MLM.FROM_ZONE, #{langCd, jdbcType=VARCHAR}) FROM DUAL ) AS FROM_ZONE_NM
		     , MLM.TO_ZONE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD,'MD0020', MLM.TO_ZONE, #{langCd, jdbcType=VARCHAR}) FROM DUAL ) AS TO_ZONE_NM 
		     , MLM.DESCRIPTION
		     , MLM.UPDATE_BY              AS UPDATE_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLM.COMPANY_CD, MLM.DIVISION_CD, MLM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		     , TO_CHAR(MLM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , ROWIDTOCHAR(MLM.ROWID)            AS KEY_ID
		FROM   MOM_LOCATION_DO_MST MLM
		WHERE  MLM.COMPANY_CD          = #{companyCd, jdbcType=VARCHAR}
		AND    MLM.DIVISION_CD         = #{divisionCd, jdbcType=VARCHAR}
		AND    MLM.WAREHOUSE_CD        = #{warehouseCd, jdbcType=VARCHAR} 
		AND    MLM.STATE               = 'LDG'
	</select>  
    <select id="get_findBtn3" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MLD.COMPANY_CD
		     , MLD.DIVISION_CD
		     , MLD.LOCATION_DO_NO
		     , MLD.SEQ 
             , MLD.DELIVERY_ORDER_ID 
		     , MLD.LOCATION_CD
		     , ML.LOCATION_NM
		     , MLD.LOGISTICS_UNIT_CD
		     , MLD.LOT_ID
		     , MLD.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_SPEC
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , MLD.QTY          AS DELIVERY_REQUEST_QTY
		     , MLD.UOM 
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UOM) FROM DUAL) AS UOM_NM
		     , MLD.ITEM_STOCK_ID
		     , MLD.DESCRIPTION
		     , MLD.UPDATE_BY      AS UPDATE_USER_NO
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
		     , TO_CHAR(MLD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , ROWIDTOCHAR(MLD.ROWID)            AS KEY_ID
		FROM   MOM_LOCATION_DO_DTL MLD
		     , MOM_LOCATION ML
		     , MOM_ITEM MI 
		WHERE  MLD.COMPANY_CD     = ML.COMPANY_CD
		AND    MLD.DIVISION_CD    = ML.DIVISION_CD
		AND    MLD.LOCATION_CD    = ML.LOCATION_CD    
		AND    MLD.COMPANY_CD     = MI.COMPANY_CD
		AND    MLD.DIVISION_CD    = MI.DIVISION_CD
		AND    MLD.ITEM_ID        = MI.ITEM_ID    
		AND    MLD.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
		AND    MLD.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}
		AND    MLD.LOCATION_DO_NO = #{locationDoNo, jdbcType=VARCHAR} 
	</select>  
    <delete id="remove_createBtn1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_LOCATION_DO_MST
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD      = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD     = #{item.divisionCd, jdbcType=VARCHAR}
               AND  CREATE_BY       = #{item.userId, jdbcType=VARCHAR}
               AND  WAREHOUSE_CD    = #{item.warehouseCd, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_LOCATION_DO_MST( COMPANY_CD
                                     , DIVISION_CD
                                     , LOCATION_DO_NO
                                     , LOCATION_DO_NM
                                     , WAREHOUSE_CD
                                     , FROM_ZONE
                                     , TO_ZONE
                                     , DESCRIPTION
                                     , DEL_YN
                                     , VAL_MSG
                                     , MULTI_MSG
                                     , CREATE_BY
                                     , CREATE_DATE
                                     )
        VALUES                       ( #{item.companyCd, jdbcType=VARCHAR}
                                     , #{item.divisionCd, jdbcType=VARCHAR}
                                     , #{item.locationDoNo, jdbcType=VARCHAR}
                                     , #{item.locationDoNm, jdbcType=VARCHAR}
                                     , #{item.warehouseCd, jdbcType=VARCHAR}
                                     , #{item.fromZone, jdbcType=VARCHAR}
                                     , #{item.toZone, jdbcType=VARCHAR}
                                     , #{item.description, jdbcType=VARCHAR}
                                     , #{item.delYn, jdbcType=VARCHAR}
                                     , #{item.valMsg, jdbcType=VARCHAR}
                                     , #{item.multiMsg, jdbcType=VARCHAR}
                                     , #{item.userId, jdbcType=VARCHAR}
                                     , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                     )     
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_WMS_PKG.SP_UPSERT_LOCATION_DO_MST( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                    , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                    , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                    , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                    , #{warehouseCd,  jdbcType=VARCHAR, mode=IN} 
                                                    , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>  
    <delete id="remove_customBtn3-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_LOCATION_DO_DTL
        <where>
	        <foreach collection="list" item="item" open="" close="" separator="OR">
	        (       COMPANY_CD       = #{item.companyCd, jdbcType=VARCHAR}
	           AND  DIVISION_CD      = #{item.divisionCd, jdbcType=VARCHAR}
	           AND  CREATE_BY        = #{item.userId, jdbcType=VARCHAR}
	        )
	        </foreach>
        </where>
   </delete>  
   <insert id="create_customBtn3-1" parameterType="java.util.List">
       <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
	       INTO MOM_PROC_LOCATION_DO_DTL( COMPANY_CD
                    		            , DIVISION_CD
                    		            , LOCATION_DO_NO
                    		            , SEQ
                    		            , DELIVERY_ORDER_ID
                    		            , LOCATION_CD
                    		            , LOGISTICS_UNIT_CD
                    		            , LOT_ID
			                            , ITEM_ID
			                            , QTY
			                            , ITEM_STOCK_ID
			                            , DESCRIPTION
			                            , DEL_YN
			                            , VAL_MSG
			                            , MULTI_MSG
			                            , CREATE_BY
			                            , CREATE_DATE )
           VALUES                       ( #{item.companyCd, jdbcType=VARCHAR}  
			                            , #{item.divisionCd, jdbcType=VARCHAR} 
			                            , #{item.locationDoNo, jdbcType=VARCHAR}
			                            , #{item.seq, jdbcType=NUMERIC}
			                            , #{item.deliveryOrderId, jdbcType=VARCHAR}
			                            , #{item.locationCd, jdbcType=VARCHAR}
			                            , #{item.logisticsUnitCd, jdbcType=VARCHAR}
			                            , #{item.lotId, jdbcType=VARCHAR}
			                   		    , #{item.itemId, jdbcType=VARCHAR}
					                    , #{item.deliveryRequestQty, jdbcType=NUMERIC}
					                    , #{item.itemStockId, jdbcType=VARCHAR}
					                    , #{item.description, jdbcType=VARCHAR}
					                    , #{item.delYn, jdbcType=VARCHAR}
					                    , #{item.valMsg, jdbcType=VARCHAR}
					                    , #{item.multiMsg, jdbcType=VARCHAR}
					                    , #{item.userId, jdbcType=VARCHAR}
					                    , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
					                    )
        </foreach>
    </insert>
    <select id="proc_customBtn3-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_WMS_PKG.SP_UPSERT_LOCATION_DO_DTL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                    , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                                    , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                    , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
                                                    , #{userId,      jdbcType=VARCHAR, mode=IN} )}      
    </select>    	
</mapper>    