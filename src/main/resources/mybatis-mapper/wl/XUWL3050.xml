<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWL3050">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MWM.COMPANY_CD
					     , MWM.DIVISION_CD
					     , MWM.RECEIPT_ID
					     , MWM.RECEIPT_NM
					     , MWM.WAREHOUSE_CD       AS RECEIPT_WAREHOUSE_CD
					     , MW.WAREHOUSE_NM        AS RECEIPT_WAREHOUSE_NM
					     , MWM.WAREHOUSE_USER_NO  AS RECEIPT_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.WAREHOUSE_USER_NO) FROM DUAL ) AS RECEIPT_USER_NM
					     , MWM.IO_RECEIPT_TYPE    AS INPUT_RECEIPT_TYPE 
                         , (SELECT MOM_COMMON_PKG.FN_GET_WH_IO_RECEIPT_TYPE_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.IO_RECEIPT_TYPE) FROM DUAL)  AS INPUT_RECEIPT_TYPE_NM
					     , MWM.STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, 'WM0002', MWM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
					     , MWM.PROCESS_CD
		                 , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.PROCESS_CD) FROM DUAL)  AS PROCESS_NM
					     , MWM.PICKING_YN
					     , MWM.AUTO_RECEIPT_YN
					     , MWM.DESCRIPTION
					     , MWM.UPDATE_BY      AS UPDATE_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
					     , TO_CHAR(MWM.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
					     , TO_CHAR(MWM.CREATE_DATE ,'YYYY-MM-DD') AS CREATE_DATE
					     , ROWIDTOCHAR(MWM.ROWID)            AS KEY_ID
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_USE_YN(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.WAREHOUSE_CD) FROM DUAL) AS LOCATION_USE_YN
					     , COUNT(*) OVER()   AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MWM.COMPANY_CD,MWM.DIVISION_CD ORDER BY MWM.RECEIPT_ID) AS ROW_CNT
					FROM   MOM_WAREHOUSE_RECEIPT_MST MWM
					     , MOM_WAREHOUSE MW
					WHERE  MWM.COMPANY_CD      = MW.COMPANY_CD(+)
					AND    MWM.DIVISION_CD     = MW.DIVISION_CD(+)
					AND    MWM.WAREHOUSE_CD    = MW.WAREHOUSE_CD(+)
					AND    MWM.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}
					AND    MWM.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}	
					AND    MWM.CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					AND    MWM.STATE           = 'WRF'
					AND    MWM.IO_RECEIPT_TYPE = 'WMO'
					AND    MWM.PICKING_YN      = 'Y'
					AND    MWM.ALLOCATE_YN     = 'N'
					AND    EXISTS ( SELECT '*'
			                        FROM   MOM_WAREHOUSE_RECEIPT_DTL MWD
			                        WHERE  MWD.COMPANY_CD   = MWM.COMPANY_CD
			                        AND    MWD.DIVISION_CD  = MWM.DIVISION_CD
			                        AND    MWD.RECEIPT_ID   = MWM.RECEIPT_ID )        
			        AND    EXISTS ( SELECT '*'
					                FROM   MOM_WAREHOUSE_MANAGER MLM
					                WHERE  MLM.COMPANY_CD    = MWM.COMPANY_CD
					                AND    MLM.DIVISION_CD   = MWM.DIVISION_CD
					                AND    MLM.WAREHOUSE_CD  = MWM.WAREHOUSE_CD 
					                AND    MLM.USE_YN       = 'Y'
					                AND    MLM.USER_NO      = #{userId, jdbcType=VARCHAR}  )                
					<if test="receiptWarehouseCd != null and receiptWarehouseCd != ''">
					AND    MWM.WAREHOUSE_CD = #{receiptWarehouseCd, jdbcType=VARCHAR}    
					</if> 
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>               
    </select> 
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MLD.COMPANY_CD
	         , MLD.DIVISION_CD
	         , MLD.RECEIPT_ID
	         , MLD.SEQ
	         , MLD.IO_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
	         , MLD.ITEM_ID
	         , MI.ITEM_NM
	         , MI.ITEM_SPEC
	         , MI.ITEM_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
	         , MLD.INOUT_UOM 
	         , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.INOUT_UOM) FROM DUAL) AS INOUT_UOM_NM 
	         , MLD.RECEIPT_QTY
	         , MDD.COMPLETED_QTY
	         , MLD.CONVERSION_UOM     AS RECEIPT_UOM 
	         , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.CONVERSION_UOM) FROM DUAL) AS RECEIPT_UOM_NM 
	         , MLD.CONVERSION_QTY
	         , MLD.REFERENCE_NO
	         , MLD.REFERENCE_DTL_NO
	         , MLD.RECEIPT_DETAIL_ID
	         , MDM.ISSUE_WH_USE_YN         AS  LOCATION_USE_YN
	         , MDM.PROCESS_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_PROCESS_NAME(MDM.COMPANY_CD, MDM.DIVISION_CD, MDM.PROCESS_CD) FROM DUAL )  AS PROCESS_NM
		     , MDM.ISSUE_WAREHOUSE_CD      AS RECEIPT_WAREHOUSE_CD
	         , MLD.DESCRIPTION
	         , MLD.UPDATE_BY      AS UPDATE_USER_NO
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MLD.COMPANY_CD, MLD.DIVISION_CD, MLD.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
	         , TO_CHAR(MLD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
	         , DECODE(MLD.RECEIPT_QTY - NVL(MDD.COMPLETED_QTY, 0), 0, 1, 0) AS SORT_NO 
	         , DECODE(MLD.RECEIPT_QTY - NVL(MDD.COMPLETED_QTY, 0), 0, 'Y', 'N') AS COMPLETED_YN
	         , ROWIDTOCHAR(MLD.ROWID)            AS KEY_ID
	    FROM   MOM_WAREHOUSE_RECEIPT_DTL  MLD
	        ,  MOM_ITEM MI
	        ,  MOM_DO_DTL MDD
		    ,  MOM_DO_MST MDM
		WHERE  MLD.COMPANY_CD       = MI.COMPANY_CD
		AND    MLD.DIVISION_CD      = MI.DIVISION_CD
		AND    MLD.ITEM_ID          = MI.ITEM_ID    
		AND    MLD.COMPANY_CD       = MDD.COMPANY_CD
		AND    MLD.DIVISION_CD      = MDD.DIVISION_CD
		AND    MLD.REFERENCE_DTL_NO = MDD.DELIVERY_ORDER_ID
		AND    MDD.COMPANY_CD       = MDM.COMPANY_CD
		AND    MDD.DIVISION_CD      = MDM.DIVISION_CD
		AND    MDD.DO_NO            = MDM.DO_NO  
	    AND    MLD.COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
	    AND    MLD.DIVISION_CD      = #{divisionCd, jdbcType=VARCHAR}
	    AND    MLD.RECEIPT_ID       = #{receiptId, jdbcType=VARCHAR}
	    AND    MLD.ALLOCATE_YN      = 'N'
	    ORDER BY DECODE(MLD.RECEIPT_QTY - NVL(MDD.COMPLETED_QTY, 0), 0, 1, 0)
               , MLD.SEQ  
	</select>   
    <select id="get_findBtn3" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    WITH C_REC AS (SELECT MLD.COMPANY_CD
		                    , MLD.DIVISION_CD
		                    , MLD.RECEIPT_ID
		                    , MLD.RECEIPT_DETAIL_ID
		                    , MLD.ITEM_ID
		                    , MLD.IO_TYPE
		                    , MLD.INOUT_UOM  AS UOM
		                    , MLD.RECEIPT_QTY
		                    , MLD.CONVERSION_QTY
		                    , MLD.CONVERSION_UOM
		                    , #{receiptWarehouseCd , jdbcType=VARCHAR}  AS WAREHOUSE_CD
		               FROM   MOM_WAREHOUSE_RECEIPT_DTL  MLD
		               WHERE  MLD.COMPANY_CD         = #{companyCd, jdbcType=VARCHAR}
		               AND    MLD.DIVISION_CD        = #{divisionCd, jdbcType=VARCHAR}
		               AND    MLD.RECEIPT_DETAIL_ID  = #{receiptDetailId , jdbcType=VARCHAR})
		SELECT MS.COMPANY_CD
		     , MS.DIVISION_CD
		     , MS.WAREHOUSE_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(MS.COMPANY_CD, MS.DIVISION_CD, MS.WAREHOUSE_CD) FROM DUAL) AS RECEIPT_WAREHOUSE_NM
		     , MS.LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MS.COMPANY_CD, MS.DIVISION_CD, MS.LOCATION_CD) FROM DUAL)  AS RECEIPT_LOCATION_NM
		     , MS.ITEM_ID
		     , MS.LOT_ID
		     , MS.HCN_CD
		     , C.RECEIPT_QTY
		     , MS.STOCK_QTY
		     , MS.ALLOCATE_QTY
		     , MS.STOCK_QTY - NVL(MS.ALLOCATE_QTY, 0) AS AVAILABLE_QTY
		     , CASE WHEN (MS.STOCK_QTY - NVL(MS.ALLOCATE_QTY, 0) ) >=  C.RECEIPT_QTY THEN C.RECEIPT_QTY
	           ELSE (MS.STOCK_QTY - NVL(MS.ALLOCATE_QTY, 0) )
	           END     AS ISSUE_QTY
		     , C.UOM 
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MS.COMPANY_CD, MS.DIVISION_CD, C.UOM) FROM DUAL) AS UOM_NM
		     , C.RECEIPT_ID
		     , C.RECEIPT_DETAIL_ID
		     , C.IO_TYPE
		     , MS.ITEM_STOCK_ID
		     , C.RECEIPT_DETAIL_ID||'_'||MS.ITEM_STOCK_ID            AS KEY_ID
		FROM   C_REC C 
		     , MOM_STOCK MS
		WHERE  C.COMPANY_CD   = MS.COMPANY_CD
		AND    C.DIVISION_CD  = MS.DIVISION_CD
		AND    C.WAREHOUSE_CD = MS.WAREHOUSE_CD
		AND    C.ITEM_ID      = MS.ITEM_ID    
		AND    MS.STOCK_QTY - NVL(MS.ALLOCATE_QTY, 0) > 0   
	</select>  
    <delete id="remove_customBtn3-1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_WH_STOCK_ALLOCATE
        <where>
	        <foreach collection="list" item="item" open="" close="" separator="OR">
	        (       COMPANY_CD       = #{item.companyCd, jdbcType=VARCHAR}
	           AND  DIVISION_CD      = #{item.divisionCd, jdbcType=VARCHAR}
	           AND  CREATE_BY        = #{item.userId, jdbcType=VARCHAR}
	        )
	        </foreach>
        </where>
   </delete>  
   <insert id="create_customBtn3-1" parameterType="java.util.List">
       <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
	       INTO MOM_PROC_WH_STOCK_ALLOCATE( COMPANY_CD
									      , DIVISION_CD
									      , RECEIPT_ID
									      , RECEIPT_DETAIL_ID
									      , ITEM_STOCK_ID
									      , QTY
									      , DESCRIPTION
									      , VAL_MSG
									      , MULTI_MSG
									      , CREATE_BY
									      , CREATE_DATE
									      )
           VALUES                         ( #{item.companyCd, jdbcType=VARCHAR}  
				                          , #{item.divisionCd, jdbcType=VARCHAR}
				                          , #{item.receiptId, jdbcType=VARCHAR}
				                          , #{item.receiptDetailId, jdbcType=VARCHAR} 
				                          , #{item.itemStockId, jdbcType=VARCHAR}
				                          , #{item.receiptQty, jdbcType=NUMERIC}
				                          , #{item.description, jdbcType=VARCHAR}
						                  , #{item.valMsg, jdbcType=VARCHAR}
						                  , #{item.multiMsg, jdbcType=VARCHAR}
						                  , #{item.userId, jdbcType=VARCHAR}
						                  , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
						                  )
        </foreach>
    </insert>
    <select id="proc_customBtn3-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_WMS_PKG.SP_WAREHOUSE_STOCK_ALLOCATE( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
                                                      , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                            	      , #{companyCd,   jdbcType=VARCHAR, mode=IN}
                                                      , #{divisionCd,  jdbcType=VARCHAR, mode=IN}
                                                      , #{userId,      jdbcType=VARCHAR, mode=IN} )}      
    </select>    	  	
</mapper>    