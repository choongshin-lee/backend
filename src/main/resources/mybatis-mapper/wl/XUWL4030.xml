<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUWL4030">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		    SELECT A.*
		    FROM   (
		</if>
		            SELECT MWM.COMPANY_CD
					     , MWM.DIVISION_CD
					     , MWM.RECEIPT_ID
					     , MWM.RECEIPT_NM
					     , MWM.WAREHOUSE_CD       AS ISSUE_WAREHOUSE_CD
					     , MW.WAREHOUSE_NM        AS ISSUE_WAREHOUSE_NM
					     , MWM.TO_WAREHOUSE_CD    AS RECEIPT_WAREHOUSE_CD 
                         , MWT.WAREHOUSE_NM       AS RECEIPT_WAREHOUSE_NM 
                         , (SELECT MOM_WMS_PKG.FN_GET_DEFAULT_LOCATION(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.TO_WAREHOUSE_CD) FROM DUAL ) AS LOCATION_CD
					     , MWM.WAREHOUSE_USER_NO  AS RECEIPT_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.WAREHOUSE_USER_NO) FROM DUAL ) AS RECEIPT_USER_NM
					     , 'WMI'   AS INPUT_RECEIPT_TYPE 
                         , (SELECT MOM_COMMON_PKG.FN_GET_WH_IO_RECEIPT_TYPE_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, 'WMI') FROM DUAL)  AS INPUT_RECEIPT_TYPE_NM
					     , MWM.STATE
					     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, 'WM0002', MWM.STATE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS STATE_NM
					     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_USE_YN(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.TO_WAREHOUSE_CD) FROM DUAL) AS LOCATION_USE_YN
					     , MWM.DESCRIPTION
					     , MWM.TO_CONFIRM_USER_NO  AS CONFIRM_USER_NO
					     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWM.COMPANY_CD, MWM.DIVISION_CD, MWM.TO_CONFIRM_USER_NO) FROM DUAL ) AS CONFIRM_USER_NM
					     , TO_CHAR(MWM.TO_CONFIRM_DATE ,'YYYY-MM-DD') AS RECEIPT_DATE
					     , ROWIDTOCHAR(MWM.ROWID)            AS KEY_ID
					     , COUNT(*) OVER()   AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY MWM.COMPANY_CD,MWM.DIVISION_CD ORDER BY MWM.RECEIPT_ID) AS ROW_CNT
					FROM   MOM_WAREHOUSE_RECEIPT_MST MWM
					     , MOM_WAREHOUSE MW
					     , MOM_WAREHOUSE MWT
					WHERE  MWM.COMPANY_CD      = MW.COMPANY_CD
		            AND    MWM.DIVISION_CD     = MW.DIVISION_CD
		            AND    MWM.WAREHOUSE_CD    = MW.WAREHOUSE_CD
		            AND    MWM.COMPANY_CD      = MWT.COMPANY_CD
		            AND    MWM.DIVISION_CD     = MWT.DIVISION_CD
		            AND    MWM.TO_WAREHOUSE_CD = MWT.WAREHOUSE_CD
					AND    MWM.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}
					AND    MWM.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}	
					AND    MWM.TO_CONFIRM_DATE  BETWEEN TO_DATE(#{confirmDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{confirmDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
					AND    MWM.STATE           = 'WRR'
					AND    EXISTS ( SELECT '*'
			                        FROM   MOM_WAREHOUSE_RECEIPT_DTL MWD
			                        WHERE  MWD.COMPANY_CD   = MWM.COMPANY_CD
			                        AND    MWD.DIVISION_CD  = MWM.DIVISION_CD
			                        AND    MWD.RECEIPT_ID   = MWM.RECEIPT_ID )        
					<if test="receiptWarehouseCd != null and receiptWarehouseCd != ''">
					AND    MWM.WAREHOUSE_CD = #{receiptWarehouseCd, jdbcType=VARCHAR}        
					</if>
					AND    MWM.TO_WAREHOUSE_CD IN (SELECT MUM.WAREHOUSE_CD
						                           FROM   MOM_USER_WH_IO_RECEIPT_MAP  MUM
							                       WHERE  MUM.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}
							                       AND    MUM.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}  
							                       AND    MUM.USER_NO         = #{userId, jdbcType=VARCHAR}  
							                       AND    MUM.IO_RECEIPT_TYPE =  'WMI'
							                       AND    MUM.USE_YN        = 'Y')
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				       ) A
				WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>            
    </select> 
    <select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
		WITH C_WM AS (SELECT MWD.COMPANY_CD
		                   , MWD.DIVISION_CD
		                   , MWD.RECEIPT_ID
		                   , MWD.SEQ
		                   , MWD.IO_TYPE
		                   , MWD.ITEM_ID
		                   , MWD.INOUT_UOM  AS RECEIPT_UOM
		                   , MWD.RECEIPT_QTY
		                   , MWD.RECEIPT_DETAIL_ID 
		                   , MWD.REFERENCE_NO
		                   , MWD.REFERENCE_DTL_NO
		                   , MWD.DESCRIPTION
		                   , MWM.PICKING_YN
		                   , CASE WHEN MWM.PICKING_YN = 'Y' THEN
		                         MWD.RECEIPT_DETAIL_ID   
		                     ELSE             
		                       (SELECT MDD.REFERENCE_DTL_NO
		                        FROM   MOM_DO_DTL MDD
		                        WHERE  MDD.COMPANY_CD         = MWD.COMPANY_CD
		                        AND    MDD.DIVISION_CD        = MWD.DIVISION_CD
		                        AND    MDD.DELIVERY_ORDER_ID  = MWD.REFERENCE_DTL_NO ) 
		                     END  AS SOURCE_ID
		              FROM   MOM_WAREHOUSE_RECEIPT_MST MWM
		                   , MOM_WAREHOUSE_RECEIPT_DTL MWD
		              WHERE  MWM.COMPANY_CD  = MWD.COMPANY_CD
		              AND    MWM.DIVISION_CD = MWD.DIVISION_CD
		              AND    MWM.RECEIPT_ID  = MWD.RECEIPT_ID
		              AND    MWM.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		              AND    MWM.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		              AND    MWM.RECEIPT_ID  = #{receiptId, jdbcType=VARCHAR}  ) 
		SELECT A.COMPANY_CD
		     , A.DIVISION_CD
		     , A.RECEIPT_ID
		     , A.SEQ
		     , A.IO_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(A.COMPANY_CD, A.DIVISION_CD, A.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM
		     , A.WAREHOUSE_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WAREHOUSE_NAME(A.COMPANY_CD, A.DIVISION_CD, A.WAREHOUSE_CD) FROM DUAL) AS WAREHOUSE_NM
		     , A.LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(A.COMPANY_CD, A.DIVISION_CD, A.LOCATION_CD) FROM DUAL)   AS LOCATION_NM
		     , A.ITEM_ID
		     , A.ITEM_NM
		     , A.ITEM_SPEC
		     , A.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MD0002', A.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
		     , A.LOT_ID
		     , A.LOT_RULE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MD0052', A.LOT_RULE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS LOT_RULE_NM
		     , A.HCN_CD
		     , A.RECEIPT_UOM
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(A.COMPANY_CD, A.DIVISION_CD, A.RECEIPT_UOM) FROM DUAL) AS RECEIPT_UOM_NM
		     , A.RECEIPT_QTY
		     , A.ALLOCATE_QTY
		     , A.RECEIPT_DETAIL_ID 
		     , A.SOURCE_ID      
		     , A.REFERENCE_NO
		     , A.REFERENCE_DTL_NO
		     , A.DESCRIPTION
		     , A.KEY_ID
		FROM   (SELECT MWD.COMPANY_CD
		             , MWD.DIVISION_CD
		             , MWD.RECEIPT_ID
		             , MWD.SEQ
		             , MWD.IO_TYPE
		             , MWD.ITEM_ID
		             , MI.ITEM_NM
		             , MI.ITEM_SPEC
		             , MI.ITEM_TYPE
		             , MS.LOT_ID
		             , MS.LOT_RULE
		             , MS.HCN_CD
		             , MWD.RECEIPT_UOM
		             , MWD.RECEIPT_QTY
		             , MSA.ALLOCATE_QTY
		             , MWD.RECEIPT_DETAIL_ID 
		             , MSA.SOURCE_ID      
		             , MWD.REFERENCE_NO
		             , MWD.REFERENCE_DTL_NO
		             , MWD.DESCRIPTION
		             , MWD.RECEIPT_DETAIL_ID||'_'||MSA.ITEM_STOCK_ID        AS KEY_ID
		             , #{receiptWarehouseCd , jdbcType=VARCHAR}  		        AS WAREHOUSE_CD
		             , (SELECT MOM_WMS_PKG.FN_GET_DEFAULT_LOCATION(MWD.COMPANY_CD, MWD.DIVISION_CD, #{receiptWarehouseCd , jdbcType=VARCHAR}) FROM DUAL ) AS LOCATION_CD
		        FROM   C_WM MWD
		             , MOM_ITEM MI
		             , MOM_STOCK_ALLOCATE MSA
		             , MOM_STOCK MS
		        WHERE  MWD.COMPANY_CD    = MI.COMPANY_CD
		        AND    MWD.DIVISION_CD   = MI.DIVISION_CD
		        AND    MWD.ITEM_ID       = MI.ITEM_ID
		        AND    MWD.COMPANY_CD    = MSA.COMPANY_CD
		        AND    MWD.DIVISION_CD   = MSA.DIVISION_CD
		        AND    MWD.SOURCE_ID     = MSA.SOURCE_ID     
		        AND    MSA.COMPANY_CD    = MS.COMPANY_CD
		        AND    MSA.DIVISION_CD   = MS.DIVISION_CD
		        AND    MSA.ITEM_STOCK_ID = MS.ITEM_STOCK_ID ) A   
	</select>  
    <delete id="remove_createBtn1" parameterType="java.util.List">
        DELETE FROM MOM_PROC_WH_DO_RECEIPT
          <where>
              <foreach collection="list" item="item" open="" close="" separator="OR">
            (       COMPANY_CD   = #{item.companyCd, jdbcType=VARCHAR}
               AND  DIVISION_CD  = #{item.divisionCd, jdbcType=VARCHAR}
               AND  CREATE_BY    = #{item.userId, jdbcType=VARCHAR}
            )
              </foreach>
          </where>
    </delete>  
    <insert id="create_createBtn1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_WH_DO_RECEIPT( COMPANY_CD
		                           , DIVISION_CD
		                           , RECEIPT_ID
		                           , WAREHOUSE_CD
		                           , LOCATION_CD
		                           , DESCRIPTION
		                           , VAL_MSG
		                           , MULTI_MSG
		                           , CREATE_BY
		                           , CREATE_DATE
		                           )
		VALUES                     ( #{item.companyCd, jdbcType=VARCHAR}
		                           , #{item.divisionCd, jdbcType=VARCHAR}
		                           , #{item.receiptId, jdbcType=VARCHAR}
		                           , #{item.receiptWarehouseCd, jdbcType=VARCHAR}
		                           , #{item.locationCd, jdbcType=VARCHAR}
		                           , #{item.description, jdbcType=VARCHAR}
		                           , #{item.valMsg, jdbcType=VARCHAR}
		                           , #{item.multiMsg, jdbcType=VARCHAR}
		                           , #{item.userId, jdbcType=VARCHAR}
		                           , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
		                           )     
        </foreach>
    </insert>
    <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
        { CALL MOM_WMS_PKG.SP_WAREHOUSE_DO_RECEIPT( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
				                                  , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
				                                  , #{companyCd,   jdbcType=VARCHAR, mode=IN}
				                                  , #{divisionCd,  jdbcType=VARCHAR, mode=IN} 
				                                  , #{userId,      jdbcType=VARCHAR, mode=IN} )}                    
    </select>     	
</mapper>    